{"version":3,"sources":["services/websocket.js","utils/words_he.js","redux/Auth/constants.js","redux/Auth/reducer.js","redux/Client/constants.js","redux/Client/reducer.js","redux/SnackBar/constants.js","redux/SnackBar/reducer.js","redux/User/constants.js","redux/User/reducer.js","redux/Bid/constants.js","redux/Bid/reducer.js","redux/Location/constants.js","redux/Location/reducer.js","redux/EventType/constants.js","redux/EventType/reducer.js","redux/Utils/constants.js","redux/Utils/reducer.js","redux/PopUp/constants.js","redux/PopUp/reducer.js","redux/Home/constants.js","redux/Home/reducer.js","redux/Event/constants.js","redux/Event/reducer.js","redux/Supplier/constants.js","redux/Supplier/reducer.js","redux/CSV/constants.js","redux/CSV/reducer.js","redux/index.js","services/index.js","redux/SnackBar/action.js","redux/PopUp/action.js","components/general/DatePicker.js","components/general/DownloadCsv.js","redux/Event/action.js","components/pages/CreateEvent.js","components/pages/DisplayEvent.js","pages/Home.js","redux/Home/action.js","utils/constans.js","redux/Auth/action.js","pages/Login.js","components/general/RowBuilder.js","components/general/TableBuilder.js","components/general/PaginationBottom.js","redux/User/action.js","components/pages/UpdateUser.js","pages/Users.js","components/pages/TableRowScheduleTimeEvent.js","components/pages/TableScheduleTimeEvent.js","components/pages/TableRowCosts.js","components/pages/TableCosts.js","redux/Client/action.js","components/pages/CreateClient.js","redux/EventType/action.js","components/general/EmailAndDownload.js","components/general/CancelExit.js","redux/Bid/action.js","redux/Utils/action.js","pages/CreateBid.js","components/pages/UpdateBid.js","pages/Bids.js","pages/Register.js","pages/ResetPassword.js","pages/ForgotPassword.js","pages/ProfileSettings.js","redux/CSV/action.js","pages/Reports.js","components/pages/UpdateEvent.js","pages/Events.js","components/pages/UpdateClient.js","pages/Clients.js","pages/Tests.js","redux/Supplier/action.js","components/pages/UpdateSupplier.js","components/pages/CreateSupplier.js","pages/Suppliers.js","components/general/NavBar.js","components/general/SnackBar.js","components/general/PrivateRoutes.js","components/general/PopUp.js","App.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","words_he","welcome","login","hello","please_sign_in","home","register","create_new_user","logout","email","username","password","new_password","confirm_password","forgot_password","send","reset_password","users","user","admin","active","not_active","edit","delete","status","update_at","phone","new_bid","bid_id","permissions","first_name","last_name","languages","hebrew","event_type","client_name","location","event_name","comments","prticipnts_amount","minimum","maximum","time_schedule_for_event","start_time","end_time","activity_description","costs","description","amount","unit_cost","total_cost","discount","comment","currency","bit_status","total_cost_before_discount","total_discount","total_cost_after_discount","save","clear_all","cencel_and_exit","nis","dollar","draft","sent","approved","bid_status","search","sum_rows","rows_to_display","server_error","login_error","failed_load_data","type_in_en","type_number","yes","no","cancel_exit","bids","profile_settings","password_not_matched","user_name","permission_level","change_password","old_password","locatin_name","clients","client","private","type","department","company","guest","event_date","new_client","new_event","add_client","from_date","to_date","end_after_start","create_event","events","public","inside","photo_shot","pending","canceled","suppliers","account_details","account_name","add_supplier","new_supplier","reports","display_event","edit_event","pick_client","download_file","create_csv","LOGIN_SUCCESS","LOGOUT_SUCCESS","SET_LOADING_INDICATOR_AUTH","initialState","token","userContent","isAuthenticated","currentRoute","window","pathname","GET_CLIENTS","meta_data","SET_SNACKBAR","DISABLE_SNACKBAR","visible","timeout","message","GET_USERS","GET_USER","GET_BIDS","GET_LOCATIONS","locations","GET_EVENTS_TYPE","events_type","GET_UTILS","tables","SET_POPUP","DISABLE_POPUP","content","GET_HOME_EVENTS","SAVE_DATE","saved_date","Date","GET_EVENTS","GET_SUPPLIERS","GET_CSV","DELETE_CSV","file_name","undefined","middleware","thunk","rootReducer","combineReducers","auth","state","action","payload","level","snackBar","bid","eventType","utils","popUp","last_date","event","supplier","csv","store","createStore","composeWithDevTools","applyMiddleware","WebSocketWorker","timeoutInstance","setSnackBar","dispatch","setTimeout","disablePopUp","setPopUp","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","MyDatePicker","date","setDate","classes","className","noValidate","TextField","id","label","defaultValue","InputLabelProps","shrink","inputProps","min","onChange","e","target","value","require","DownloadCsv","props","file_path","process","href","disabled","get_events","limit","offset","query","axios","get","params","then","res","data","actionPopUp","push","moment","format","catch","error","console","log","actionSnackBar","get_event_by_id","event_id","Promise","resolve","reject","a","CreateEvent","useSelector","useState","setStartTime","setEndTime","setEndAfterStart","event_info","setEventInfo","useDispatch","useEffect","scope","style","color","onClick","post","response","statusText","action_popUp","DisplayEvent","action_event","localizer","momentLocalizer","Home","workerInstances","init_ws","receiveData","action_home","addEventListener","removeEventListener","textAlign","onDoubleClickEvent","views","startAccessor","endAccessor","height","onNavigate","startOf","endOf","send_message","setAuthToken","defaults","headers","common","getState","put","localStorage","setItem","forgotPassword","Authorization","redirect_to_home","host","hostname","replace","Login","setUsername","setPassword","submit","preventDefault","authActions","toUpperCase","to","onSubmit","placeholder","required","RowBuilder","counter","cols","handle_edit","map","col","index","Number","TableBuilder","items","title","PaginationBottom","previous_page","next_page","marginBottom","padding","margin","get_users","create_user","update_user","user_id","UpdateUser","is_active","setIsActive","setLevel","handle_status","val","handle_level","checked","action_user","Users","setLimit","setOffset","setSearch","item","fontSize","minLength","debounceTimeout","options","limits","new_offset","TableRow","schedule_time_event","schedule_time_event_array","setActivityDescription","handle_start_time","handle_end_time","handle_activity_description","ScheduleTimeEvent","setScheduleTimeEvent","element","costs_array","setCosts","handle_description","step","toFixed","handle_amount","handle_unit_cost","handle_discount","handle_comment","TableCosts","get_clients","CreateClient","client_info","setClientInfo","convert_type","key","get_data","action_client","get_events_type","EmailAndDownload","setClientEmail","action_event_type","CancelExit","handle_click","create_new_bid","get_bids","get_utils","convert_table_name","table","Bid","setEventType","setLocation","setLanguage","setStatus","setCurrency","setClientName","setEventName","event_comment","setEventComment","max_participants","setMaxParticipants","min_participants","setMinParticipants","total_b_discount","setTotalBDiscount","total_a_discount","setTotalADiscounts","setDiscount","action_utils","cost","req","schedule_event","handle_save","action_bid","history","calculation","currencies","from","describe","UpdateBid","Bids","Register","setFirstName","setLastName","setEmail","setPhone","test","userActions","direction","ForgotPassword","redirect","setRedirect","useParams","withRouter","ProfileSettings","user_info","setUserInfo","passwordMatch","setPasswordMatch","Object","entries","keys","length","get_table","Reports","setTable","action_csv","lineHeight","verticalAlign","UpdateEvent","statuses","types","Events","UpdateClient","client_id","uuid","Clients","TestWebsocket","get_suppliers","account","JSON","parse","UpdateSupplier","iban","swift","supplier_info","setSupplierInfo","Supplier_id","action_supplier","CreateSupplier","Suppliers","i","account_details_str","Nav","menu","removeItem","getItem","jwtDecode","exp","now","user_data","CustomizedSnackbars","snackBarOBJ","root","Collapse","in","Alert","elevation","variant","severity","IconButton","reason","clearTimeout","Typography","position","top","right","zIndex","opacity","marginTop","breakpoints","down","PrivateRoute","Component","component","render","Popup","pop_up_visible","pop_up_content","App","setName","NavBar","PopUp","path","ResetPassword","exact","CreateBid","Tests","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.56bda82a.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"ws\",\"init_ws\",\"send_message\",\"close_ws\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"98f3167316d64146413f.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","const words_he = {\r\n  welcome: 'ברוכים הבאים למוזיאון ישראל',\r\n  login: 'כניסה',\r\n  hello: 'שלום',\r\n  please_sign_in: 'אנא התחבר/י',\r\n  home: 'בית',\r\n  register: 'הרשמה',\r\n  create_new_user: 'יצירת משתמש',\r\n  logout: 'התנתקות',\r\n  name: 'שם',\r\n  email: 'כתובת מייל',\r\n  username: 'שם משתמש',\r\n  password: 'סיסמה',\r\n  new_password: 'סיסמה חדשה',\r\n  confirm_password: 'סיסמה בשנית',\r\n  forgot_password: 'שכחתי סיסמה',\r\n  send: 'שלח',\r\n  reset_password: 'איפוס סיסמה',\r\n  users: 'משתמשים',\r\n  user: 'משתמש',\r\n  admin: 'מנהל',\r\n  active: 'פעיל',\r\n  not_active: 'לא פעיל',\r\n  edit: 'ערוך',\r\n  delete: 'מחק',\r\n  status: 'סטטוס',\r\n  update_at: 'עודכן בתאריך',\r\n  phone: 'מספר פלאפון',\r\n  new_bid: 'הצעת מחיר חדשה',\r\n  bid_id: 'מספר הצעת מחיר',\r\n  permissions: 'הרשאות',\r\n  first_name: 'שם פרטי',\r\n  last_name: 'שם משפחה',\r\n  languages: 'שפות',\r\n  hebrew: 'עברית',\r\n  event_type: 'סוג אירוע',\r\n  client_name: 'שם הלקוח',\r\n  location: 'מיקום',\r\n  event_name: 'שם האירוע',\r\n  comments: 'הערות',\r\n  prticipnts_amount: 'כמות משתתפים',\r\n  minimum: 'מינימום',\r\n  maximum: 'מקסימום',\r\n  time_schedule_for_event: 'לוח זמנים לאירוע',\r\n  start_time: 'משעה',\r\n  end_time: 'עד שעה',\r\n  activity_description: 'תיאור הפעילות',\r\n  costs: 'עלויות',\r\n  description: 'תיאור',\r\n  amount: 'כמות',\r\n  unit_cost: 'מחיר ליחידה',\r\n  total_cost: 'מחיר כולל',\r\n  discount: 'הנחה',\r\n  comment: 'הערה',\r\n  currency: 'מטבע',\r\n  bit_status: 'סטטוס הצעה',\r\n  total_cost_before_discount: 'סה\"כ לפי הנחה',\r\n  total_discount: 'סה\"כ הנחה',\r\n  total_cost_after_discount: 'סה\"כ אחרי הנחה',\r\n  save: 'שמור',\r\n  clear_all: 'נקה הכול',\r\n  cencel_and_exit: 'ביטול ויציאה',\r\n  nis: 'שקל',\r\n  dollar: 'דולר',\r\n  draft: 'טיוטה',\r\n  sent: 'נשלח',\r\n  approved: 'אושר',\r\n  bid_status: 'סטטוס הצעה',\r\n  search: 'חיפוש...',\r\n  sum_rows: 'סך התוצאות: ',\r\n  rows_to_display: 'מספר שורות להציג',\r\n  server_error: 'שגיאת שרת',\r\n  login_error: 'שם משתמש או סיסמא לא נכונים',\r\n  failed_load_data: 'נכשל לטעון מידע',\r\n  type_in_en: 'הקלד באנגלית',\r\n  type_number: 'הקלד מספר',\r\n  yes: 'כן',\r\n  no: 'לא',\r\n  cancel_exit: 'אתה בטוח שאתה רוצה לצאת?',\r\n  bids: 'הצעות מחיר',\r\n  profile_settings: 'הגדרות פרופיל',\r\n  password_not_matched: 'הסיסמאות אינן תואמות',\r\n  user_name: 'שם משתמש',\r\n  permission_level: 'רמת הרשאה',\r\n  change_password: 'שינוי סיסמה',\r\n  old_password: 'סיסמה נוכחית',\r\n  locatin_name: 'שם מיקום',\r\n  clients: 'לקוחות',\r\n  client: 'לקוח',\r\n  private: 'פרטי',\r\n  type: 'סוג',\r\n  department: 'מחלקה',\r\n  company: 'חברה',\r\n  guest: 'אורח',\r\n  event_date: 'תאריך האירוע',\r\n  new_client: 'לקוח חדש',\r\n  new_event: 'אירוע חדש',\r\n  add_client: 'הוספת לקוח',\r\n  from_date: 'מתאריך',\r\n  to_date: 'עד תאריך',\r\n  end_after_start: 'שעת הסיום צריכה להיות אחרי שעת ההתחלה',\r\n  create_event: 'צור אירוע חדש',\r\n  events: 'אירועים',\r\n  public: 'ציבורי',\r\n  inside: 'בפנים',\r\n  photo_shot: 'צילומים',\r\n  pending: 'ממתין לאישור',\r\n  canceled: 'בוטל',\r\n  suppliers: 'ספקים',\r\n  account_details: 'פרטי חשבון',\r\n  account_name: 'שם בעל החשבון',\r\n  add_supplier: 'הוספת ספק',\r\n  new_supplier: 'ספק חדש',\r\n  reports: 'דוחות',\r\n  display_event: 'האירוע שנבחר',\r\n  edit_event: 'ערוך אירוע',\r\n  pick_client: 'בחר לקוח או הוסף חדש ',\r\n  download_file: 'הקובץ מוכן להורדה',                                 \r\n  create_csv: 'צור קובץ csv',\r\n}\r\n\r\nmodule.exports = {\r\n  words_he,\r\n}\r\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const SET_LOADING_INDICATOR_AUTH = 'SET_LOADING_INDICATOR_AUTH';\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { LOGIN_SUCCESS, LOGOUT_SUCCESS, SET_LOADING_INDICATOR_AUTH } from './constants'\r\n\r\nconst initialState = {\r\n  token: '',\r\n  permissions: 0,\r\n  userContent: {},\r\n  isAuthenticated: false,\r\n  currentRoute: window.location.pathname || '/Home',\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        token: action.payload.token,\r\n        userContent: action.payload.user,\r\n        permissions: action.payload.user.level,\r\n      }\r\n    }\r\n    case SET_LOADING_INDICATOR_AUTH:\r\n      return {\r\n        ...state,\r\n        permissions: 0,\r\n      }\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: '',\r\n        userContent: {},\r\n        currentRoute: '/Login',\r\n        isAuthenticated: false,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_CLIENTS = 'GET_CLIENTS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport {GET_CLIENTS} from './constants'\r\n\r\nconst initialState = {\r\n  clients: [],\r\n  meta_data: {sum_rows:0},\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CLIENTS: {\r\n      return {\r\n        ...state,\r\n        clients: action.payload.clients,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const SET_SNACKBAR = 'SET_SNACKBAR';\r\nexport const DISABLE_SNACKBAR = 'DISABLE_SNACKBAR';\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_SNACKBAR, DISABLE_SNACKBAR } from './constants'\r\n\r\nconst initialState = {\r\n  visible: false,\r\n  timeout: 3000,\r\n  message: '',\r\n  type: 'success', // error | warning | info | success\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        timeout: action.payload.timeout,\r\n        message: action.payload.message,\r\n        type: action.payload.type,\r\n      }\r\n    case DISABLE_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        visible: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_USERS = 'GET_USERS'\r\nexport const GET_USER = 'GET_USER'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_USERS, GET_USER} from './constants'\r\n\r\nconst initialState = {\r\n  users: [],\r\n  user:{},\r\n  meta_data: {sum_rows:0},\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: action.payload.users,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n    case GET_USER: {\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_BIDS = 'GET_BIDS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_BIDS } from './constants'\r\n\r\nconst initialState = {\r\n  bids: [],\r\n  meta_data: { sum_rows: 0 },\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_BIDS: {\r\n      return {\r\n        ...state,\r\n        bids: action.payload.bids,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_LOCATIONS = 'GET_LOCATIONS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_LOCATIONS } from './constants'\r\n\r\nconst initialState = {\r\n  locations: [],\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOCATIONS: {\r\n      return {\r\n        ...state,\r\n        locations: action.payload,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_EVENTS_TYPE = 'GET_EVENT_TYPE'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_EVENTS_TYPE } from './constants'\r\n\r\nconst initialState = {\r\n  events_type: [],\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_EVENTS_TYPE: {\r\n      return {\r\n        ...state,\r\n        events_type: action.payload,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_UTILS = 'GET_UTILS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_UTILS } from './constants'\r\n\r\nconst initialState = {\r\n  locations: [],\r\n  events_type: [],\r\n  tables: [],\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_UTILS: {\r\n      return {\r\n        ...state,\r\n        locations: action.payload.locations,\r\n        events_type: action.payload.events_type,\r\n        tables: action.payload.tables,\r\n        clients: action.payload.clients,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const SET_POPUP = 'SET_POPUP';\r\nexport const DISABLE_POPUP = 'DISABLE_POPUP';\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_POPUP, DISABLE_POPUP } from './constants'\r\n\r\nconst initialState = {\r\n  visible: false,\r\n  content: <span></span>,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_POPUP:\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        content: action.payload,\r\n      }\r\n    case DISABLE_POPUP:\r\n      return {\r\n        ...state,\r\n        visible: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_HOME_EVENTS = 'GET_HOME_EVENTS'\r\nexport const SAVE_DATE = 'SAVE_DATE'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_HOME_EVENTS, SAVE_DATE } from './constants'\r\n\r\nconst initialState = {\r\n  events: [],\r\n  meta_data: { sum_rows: 0 },\r\n  saved_date: new Date(),\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_HOME_EVENTS: {\r\n      return {\r\n        ...state,\r\n        events: action.payload.events,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n    case SAVE_DATE: {\r\n      return {\r\n        ...state,\r\n        saved_date: action.payload.last_date,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_EVENTS = 'GET_EVENTS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_EVENTS } from './constants'\r\n\r\nconst initialState = {\r\n  events: [],\r\n  meta_data: { sum_rows: 0 },\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_EVENTS: {\r\n      return {\r\n        ...state,\r\n        events: action.payload.events,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_SUPPLIERS = 'GET_SUPPLIERS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_SUPPLIERS } from './constants'\r\n\r\nconst initialState = {\r\n  suppliers: [],\r\n  meta_data: { sum_rows: 0 },\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_SUPPLIERS: {\r\n      return {\r\n        ...state,\r\n        suppliers: action.payload.suppliers,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_CSV = 'GET_CSV'\r\nexport const DELETE_CSV = 'DELETE_CSV'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_CSV, DELETE_CSV } from './constants'\r\n\r\nconst initialState = {\r\n  file_name: undefined,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CSV: {\r\n      return {\r\n        ...state,\r\n        file_name: action.payload.file_name,\r\n      }\r\n    }\r\n    case DELETE_CSV: {\r\n      return {\r\n        ...state,\r\n        file_name: undefined,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport authReducer from './Auth/reducer'\r\nimport clientReducer from './Client/reducer'\r\nimport snackBarReducer from './SnackBar/reducer'\r\nimport userReducer from './User/reducer'\r\nimport bidReducer from './Bid/reducer'\r\nimport locationReducer from './Location/reducer'\r\nimport eventTypeReducer from './EventType/reducer'\r\nimport utilsReducer from './Utils/reducer'\r\nimport popUpReducer from './PopUp/reducer'\r\nimport homeReducer from './Home/reducer'\r\nimport eventReducer from './Event/reducer'\r\nimport supplierReducer from './Supplier/reducer'\r\nimport csvReducer from './CSV/reducer'\r\n\r\nconst initionState = {}\r\nconst middleware = [thunk]\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  snackBar: snackBarReducer,\r\n  user: userReducer,\r\n  bid: bidReducer,\r\n  location: locationReducer,\r\n  eventType: eventTypeReducer,\r\n  utils: utilsReducer,\r\n  popUp: popUpReducer,\r\n  client: clientReducer,\r\n  home: homeReducer,\r\n  event: eventReducer,\r\n  supplier: supplierReducer,\r\n  csv: csvReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, initionState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n","// Import worker\r\nimport WebSocketWorker from 'workerize-loader!./websocket' // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nexport default WebSocketWorker()\r\n","import { SET_SNACKBAR, DISABLE_SNACKBAR } from './constants'\r\n\r\nlet timeoutInstance = null\r\n\r\nexport const disableSnackBar = () => (dispatch) => {\r\n  dispatch({ type: DISABLE_SNACKBAR })\r\n  clearTimeout(timeoutInstance)\r\n}\r\n\r\nexport const setSnackBar =\r\n  (type, message, timeout = 2000) =>\r\n  (dispatch) => {\r\n    dispatch({ type: SET_SNACKBAR, payload: { type, message, timeout } })\r\n    timeoutInstance = setTimeout(() => {\r\n      dispatch({ type: DISABLE_SNACKBAR })\r\n    }, timeout)\r\n  }\r\n","import { SET_POPUP, DISABLE_POPUP } from './constants'\r\n\r\nexport const disablePopUp = () => (dispatch) => {\r\n  dispatch({ type: DISABLE_POPUP })\r\n}\r\n\r\nexport const setPopUp = (content) => (dispatch) => {\r\n  dispatch({ type: SET_POPUP, payload: content })\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}))\r\n\r\nexport default function MyDatePicker({ date, setDate }) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <form className={classes.container} noValidate>\r\n      <TextField\r\n        id='date'\r\n        label='Date'\r\n        type='date'\r\n        defaultValue={date}\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          min: date,\r\n        }}\r\n        onChange={(e) => {\r\n          setDate(e.target.value)\r\n        }}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst DownloadCsv = (props) => {\r\n  const file_name = props.file_name\r\n  const url = process.env.REACT_APP_REST_IMJ_URL\r\n  const file_path = `${url}/assets/${file_name}`\r\n\r\n  return (\r\n    <div>\r\n      <a href={file_path}>\r\n        <button className='w-45 btn m-2 btn-primary' disabled={!file_name}>\r\n          {words_he['download_file']}\r\n        </button>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DownloadCsv\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\nimport { GET_EVENTS } from './constants'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nimport * as actionPopUp from '../PopUp/action'\r\nimport DownloadCsv from '../../components/general/DownloadCsv'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const create_event = (data) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_REST_IMJ_URL + `/event`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'create successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const get_events =\r\n  ({ limit, offset, search, from_date, to_date, csv }) =>\r\n  (dispatch) => {\r\n    const query = { limit, offset, search, from_date, to_date, csv }\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/event', { params: query })\r\n      .then((res) => {\r\n        if (res.data.file_name) {\r\n          const file_name = res.data.file_name\r\n          const content = <DownloadCsv file_name={file_name} />\r\n          dispatch(actionPopUp.setPopUp(content))\r\n        } else if (res.data.events) {\r\n          const events = []\r\n          for (const event of res.data.events) {\r\n            events.push({\r\n              ...event,\r\n              from_date: moment(event.from_date).format('YYYY-MM-DD HH:mm:ss'),\r\n              to_date: moment(event.to_date).format('YYYY-MM-DD HH:mm:ss'),\r\n            })\r\n          }\r\n          res.data.events = events\r\n\r\n          dispatch({ type: GET_EVENTS, payload: res.data })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n      })\r\n  }\r\n\r\nexport const get_event_by_id = (event_id) => (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/event/' + event_id)\r\n      .then((res) => {\r\n        return resolve(res.data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n        return reject(error)\r\n      })\r\n  })\r\n}\r\n\r\nexport const update_event = (data, event_id) => (dispatch) => {\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/event/${event_id}`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update event successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport MyDatePicker from '../general/DatePicker'\r\nimport moment from 'moment'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\nimport * as action_event from '../../redux/Event/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst CreateEvent = () => {\r\n  const user = useSelector((state) => state.auth.userContent)\r\n  const [date, setDate] = useState(moment().format(`YYYY-MM-DD`))\r\n  const [start_time, setStartTime] = useState('10:00')\r\n  const [end_time, setEndTime] = useState('11:00')\r\n  const [end_after_start, setEndAfterStart] = useState(true)\r\n\r\n  const [event_info, setEventInfo] = useState({ name: '', user: user.id, from_date: '', to_date: '' })\r\n  const dispatch = useDispatch()\r\n\r\n  const handle_save = () => {\r\n    if (start_time >= end_time) {\r\n      setEndAfterStart(false)\r\n      return\r\n    } else {\r\n      setEndAfterStart(true)\r\n    }\r\n    dispatch(action_event.create_event(event_info))\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (start_time >= end_time) {\r\n      setEndAfterStart(false)\r\n      return\r\n    } else {\r\n      setEndAfterStart(true)\r\n    }\r\n\r\n    setEventInfo({ ...event_info, from_date: `${date} ${start_time}`, to_date: `${date} ${end_time}` })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [date, start_time, end_time])\r\n\r\n  return (\r\n    <div>\r\n      <h3>{words_he['new_event']}</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['event_name']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['event_date']}\r\n            </th>\r\n            <th> {words_he['start_time']}</th>\r\n            <th> {words_he['end_time']}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input type='text' onChange={(e) => setEventInfo({ ...event_info, name: e.target.value })} />\r\n            </td>\r\n            <td>\r\n              <MyDatePicker date={date} setDate={setDate} className={MyDatePicker} />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type='time'\r\n                value={start_time}\r\n                onChange={(e) => {\r\n                  setStartTime(e.target.value)\r\n                }}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type='time'\r\n                value={end_time}\r\n                onChange={(e) => {\r\n                  setEndTime(e.target.value)\r\n                }}\r\n              />\r\n              {!end_after_start && <span style={{ color: 'red' }}> {words_he['end_after_start']}</span>}\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button type='button' className='btn btn-info m-4' onClick={handle_save}>\r\n        {words_he['save']}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateEvent\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport moment from 'moment'\r\nimport * as action_event from '../../redux/Event/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst DisplayEvent = (props) => {\r\n  const [event_info, setEventInfo] = useState({})\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    const get_event_by_id = async () => {\r\n      const event = await dispatch(action_event.get_event_by_id(props.id))\r\n      setEventInfo({ ...event })\r\n    }\r\n    get_event_by_id()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h3>{words_he['display_event']}</h3>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <b>{'id'}</b>\r\n            </td>\r\n            <td>{event_info.id}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <b>{words_he['event_name']}</b>\r\n            </td>\r\n            <td>{event_info.name}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <b>{words_he['event_date']}</b>\r\n            </td>\r\n            <td>{moment(event_info.from_date).format('YYYY-MM-DD')}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <b> {words_he['start_time']}</b>\r\n            </td>\r\n            <td>{moment(event_info.from_date).format('HH:mm:ss')}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <b> {words_he['end_time']}</b>\r\n            </td>\r\n            <td>{moment(event_info.to_date).format('HH:mm:ss')}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <b> {words_he['status']}</b>\r\n            </td>\r\n            <td>{words_he[event_info.status]}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              {' '}\r\n              <b>{words_he['type']}</b>\r\n            </td>\r\n            <td>{words_he[event_info.type]}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <b> {words_he['user']}</b>\r\n            </td>\r\n            <td>{event_info.user}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayEvent\r\n\r\n// budget: null\r\n// check_list: null\r\n// clients: null\r\n// comment: null\r\n// from_date: \"2022-02-21T22:00:00.000Z\"\r\n// id: \"f56649a8-8531-11ec-ae77-005056c00001\"\r\n// name: \"test tde event if you want\"\r\n// status: \"pending\"\r\n// suppliers: null\r\n// to_date: \"2022-02-21T22:00:00.000Z\"\r\n// type: \"public\"\r\n// user: \"yi\"\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport moment from 'moment'\r\nimport 'moment/locale/he'\r\nimport * as action_home from '../redux/Home/action'\r\nimport * as actionSnackBar from '../redux/SnackBar/action'\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport CreateEvent from '../components/pages/CreateEvent'\r\nimport DisplayEvent from '../components/pages/DisplayEvent'\r\nimport workerInstances from '../services'\r\nconst localizer = momentLocalizer(moment)\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Home = (props) => {\r\n  const events = useSelector((state) => state.home.events)\r\n  const token = useSelector((state) => state.auth.token)\r\n  const saved_date = useSelector((state) => state.home.saved_date)\r\n\r\n  const dispatch = useDispatch()\r\n  //connect to the ws\r\n  useEffect(() => {\r\n    workerInstances.init_ws({ token })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  //receive message from the ws\r\n  useEffect(() => {\r\n    const receiveData = (message) => {\r\n      if ((message?.data?.type === 'login' || message?.data?.type === 'notification') && !message?.data?.error) {\r\n        const response = { ...message.data }\r\n        dispatch(actionSnackBar.setSnackBar('success', response.content, 2000))\r\n      } else if (message?.data?.type === 'events' && !message?.data?.error) {\r\n        const response = { ...message.data }\r\n        dispatch(action_home.set_events(response.content))\r\n      } else {\r\n        // const response = { ...message.data }\r\n        // console.log(response)\r\n      }\r\n    }\r\n    workerInstances.addEventListener('message', receiveData)\r\n    return () => {\r\n      workerInstances.removeEventListener('message', receiveData)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  const get_event_by_month = (date) => {\r\n    const data = { from_date: moment(date).startOf('month').format('YYYY-MM-DD'), to_date: moment(date).endOf('month').format('YYYY-MM-DD') }\r\n\r\n    dispatch(action_home.save_date(date))\r\n    dispatch(action_home.get_events(data))\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <button\r\n        className='btn btn-info'\r\n        onClick={() => {\r\n          const content = <CreateEvent />\r\n          dispatch(action_popUp.setPopUp(content))\r\n        }}\r\n      >\r\n        {words_he['create_event']}\r\n      </button>\r\n      <Calendar\r\n        onDoubleClickEvent={(event) => {\r\n          const content = <DisplayEvent data={event} id={event.id} />\r\n          dispatch(action_popUp.setPopUp(content))\r\n        }}\r\n        localizer={localizer}\r\n        events={events}\r\n        views={['month', 'day', 'agenda']}\r\n        startAccessor='start'\r\n        endAccessor='end'\r\n        style={{ height: 500 }}\r\n        date={new Date(saved_date)}\r\n        onNavigate={get_event_by_month}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { GET_HOME_EVENTS, SAVE_DATE } from './constants'\r\nimport workerInstances from '../../services'\r\n\r\nexport const set_events = (response) => (dispatch) => {\r\n  dispatch({ type: GET_HOME_EVENTS, payload: { events: response.events } })\r\n}\r\nexport const save_date = (last_date) => (dispatch) => {\r\n  dispatch({ type: SAVE_DATE, payload: { last_date } })\r\n}\r\nexport const get_events =\r\n  ({ from_date, to_date, search }) =>\r\n  (dispatch) => {\r\n    const data = {\r\n      type: 'get_events',\r\n      data: {\r\n        from_date,\r\n        to_date,\r\n        search,\r\n      },\r\n    }\r\n    workerInstances.send_message(data)\r\n  }\r\n","import axios from \"axios\";\r\n\r\nexport function setAuthToken(token) {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = 'Bearer ' + token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n}","import { LOGIN_SUCCESS, LOGOUT_SUCCESS, SET_LOADING_INDICATOR_AUTH } from './constants'\r\nimport axios from 'axios'\r\nimport { setAuthToken } from '../../utils/constans'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nimport jwtDecode from 'jwt-decode'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const login = (username, password) => async (dispatch, getState) => {\r\n  try {\r\n    const response = await axios.put(process.env.REACT_APP_REST_IMJ_URL + '/auth', { username, password })\r\n    setAuthToken(response.data.token) // Set token to Axios default header.\r\n    //store user data and token\r\n    localStorage.setItem('UserName', response.data.user.name)\r\n    localStorage.setItem('UserLevel', response.data.user.level)\r\n    localStorage.setItem('UserId', response.data.user.id)\r\n    localStorage.setItem('TokenAccess', response.data.token)\r\n    dispatch({ type: LOGIN_SUCCESS, payload: response.data })\r\n  } catch (error) {\r\n    console.log(error)\r\n    dispatch(actionSnackBar.setSnackBar('error', `${words_he['login_error']}`, 3000))\r\n  }\r\n}\r\n\r\nexport const check_if_token_exist = (token) => async (dispatch) => {\r\n  try {\r\n    if (jwtDecode(token).exp < Date.now() / 1000) {\r\n      localStorage.removeItem('TokenAccess')\r\n      return\r\n    }\r\n\r\n    const name = localStorage.getItem('UserName')\r\n    const level = localStorage.getItem('UserLevel')\r\n    const id = localStorage.getItem('UserId')\r\n    const user_data = { user: { name, level: Number(level), id }, token }\r\n    setAuthToken(token) // Set token to Axios default header.\r\n    dispatch({ type: LOGIN_SUCCESS, payload: user_data })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: LOGOUT_SUCCESS })\r\n    await axios.delete(process.env.REACT_APP_REST_IMJ_URL + '/auth').catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n    setAuthToken() // Set '' to Axios default header.\r\n    localStorage.removeItem('TokenAccess')\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const forgotPassword = (username) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_REST_IMJ_URL + '/forgot_password', { username })\r\n    .then((res) => {\r\n      // console.log(res.data)\r\n      dispatch(actionSnackBar.setSnackBar('success', 'Sent to email successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      // console.log(error.response)\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const reset_password = (password, token) => (dispatch) => {\r\n  dispatch({ type: SET_LOADING_INDICATOR_AUTH, payload: true })\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + '/forgot_password', { password }, { headers: { Authorization: 'Bearer ' + token } })\r\n    .then((res) => {\r\n      console.log(res)\r\n      dispatch(actionSnackBar.setSnackBar('success', res.statusText, 2000))\r\n      setTimeout(redirect_to_home, 2000)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response)\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n      dispatch({ type: SET_LOADING_INDICATOR_AUTH, payload: false })\r\n      setTimeout(redirect_to_home, 3000)\r\n    })\r\n}\r\n\r\nconst redirect_to_home = () => {\r\n  let host = window.location.hostname\r\n  if (host === 'localhost') {\r\n    window.location.replace('http://' + host + ':3000')\r\n  } else {\r\n    window.location.replace('https://' + host)\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as authActions from '../redux/Auth/action'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Login = (props) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated)\r\n  let currentRoute = useSelector((state) => state.auth.currentRoute)\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n    dispatch(authActions.login(username, password))\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    if (currentRoute.toUpperCase() === '/LOGIN' || currentRoute === '/') {\r\n      currentRoute = 'Home'\r\n    }\r\n    return <Redirect to={currentRoute} />\r\n  }\r\n\r\n  return (\r\n    <div className='form-signin'>\r\n      <form onSubmit={submit}>\r\n        <h1 className='h3 mb-3 fw-normal'>{words_he['please_sign_in']}</h1>\r\n        <input type='text' className='form-control' placeholder={words_he['username']} required onChange={(e) => setUsername(e.target.value)} />\r\n\r\n        <input type='password' className='form-control' placeholder={words_he['password']} required onChange={(e) => setPassword(e.target.value)} />\r\n\r\n        <button className='w-100 btn btn-lg btn-success' type='submit'>\r\n          {words_he['login']}\r\n        </button>\r\n      </form>\r\n      <Link to='ForgotPassword' className='nav-link'>\r\n        <button className='w-30 btn btn-sm btn-primary m-3'>{words_he['forgot_password']}</button>{' '}\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\nexport default Login\r\n","const words_he = require('../../utils/words_he').words_he\r\n\r\nconst RowBuilder = ({ counter, cols, data, handle_edit }) => {\r\n  return (\r\n    <tr>\r\n      <td className='pl-4'>{counter}</td>\r\n      {cols.map((col, index) => (\r\n        <td key={col + index}>{<span className='text-muted'>{data[col]}</span>}</td>\r\n      ))}\r\n      {handle_edit ? (\r\n        <td className='pl-4'>\r\n          <button onClick={() => handle_edit(data.id, Number(counter) )}>{words_he['edit']}</button>\r\n        </td>\r\n      ) : (\r\n        <td></td>\r\n      )}\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default RowBuilder\r\n","import RowBuilder from './RowBuilder'\r\n\r\nconst TableBuilder = ({ items, cols, headers, title, offset, handle_edit }) => {\r\n  \r\n  return (\r\n    <div>\r\n      <div className='user_page'>\r\n        <h5 className='card-title text-uppercase mb-0'> {title}</h5>\r\n        <table className='table user-table mb-0'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n                #\r\n              </th>\r\n              {cols.map((col, index) => (\r\n                <th scope='col' className='border-0 text-uppercase font-medium pl-4' key={col}>\r\n                  {headers[col]}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {items.map((data, index) => (\r\n              <RowBuilder data={data} counter={index + 1 + Number(offset)} key={data.id} cols={cols} handle_edit={handle_edit} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableBuilder\r\n","import React from 'react'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst PaginationBottom = ({ limit, offset, meta_data, previous_page, next_page }) => {\r\n  return (\r\n    <div style={{ textAlign: 'center', marginBottom: '40px' }}>\r\n      <button onClick={previous_page} disabled={offset === 0} style={{ padding: '6px', margin: '2px' }}>\r\n        {'<'}\r\n      </button>\r\n      <button\r\n        onClick={next_page}\r\n        disabled={meta_data.sum_rows <= offset || meta_data.sum_rows <= limit || meta_data.sum_rows <= Number(limit) + Number(offset)}\r\n        style={{ padding: '6px', margin: '2px' }}\r\n      >\r\n        {'>'}\r\n      </button>\r\n      <div>{words_he['sum_rows'] + meta_data.sum_rows}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PaginationBottom\r\n","import { GET_USERS, GET_USER } from './constants'\r\nimport axios from 'axios'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nimport * as actionPopUp from '../PopUp/action'\r\nimport DownloadCsv from '../../components/general/DownloadCsv'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_users =\r\n  ({ limit, offset, search, csv }) =>\r\n  (dispatch) => {\r\n    const query = { limit, offset, search, csv }\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/user', { params: query })\r\n      .then((res) => {\r\n        if (res.data.file_name) {\r\n          const file_name = res.data.file_name\r\n          const content = <DownloadCsv file_name={file_name} />\r\n          dispatch(actionPopUp.setPopUp(content))\r\n        } else {\r\n          dispatch({ type: GET_USERS, payload: res.data })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n      })\r\n  }\r\n\r\nexport const get_user = () => (dispatch, getState) => {\r\n  const store = getState()\r\n  const user_id = store.auth.userContent.id\r\n  axios\r\n    .get(process.env.REACT_APP_REST_IMJ_URL + '/user/' + user_id)\r\n    .then((res) => {\r\n      const data = {\r\n        first_name: res.data.first_name,\r\n        last_name: res.data.last_name,\r\n        phone: res.data.phone || '',\r\n        password: '',\r\n        confirm_password: '',\r\n      }\r\n      console.log(data)\r\n      dispatch({ type: GET_USER, payload: data })\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n    })\r\n}\r\n\r\nexport const delete_user = (user_id) => (dispatch) => {\r\n  axios\r\n    .delete(process.env.REACT_APP_REST_IMJ_URL + `/user/${user_id}`)\r\n    .then((res) => {\r\n      get_users()\r\n      dispatch(actionSnackBar.setSnackBar('success', 'user status changed successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\nexport const create_user = (data) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_REST_IMJ_URL + `/user`, data)\r\n    .then((res) => {\r\n      get_users()\r\n      dispatch(actionSnackBar.setSnackBar('success', 'create user successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const update_user = (data) => (dispatch, getState) => {\r\n  const store = getState()\r\n  const user_id = store.auth.userContent.id\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/user/${user_id}`, data)\r\n    .then((res) => {\r\n      get_users()\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update user successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const update_user_by_id = (data, user_id) => (dispatch, getState) => {\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/user/${user_id}`, data)\r\n    .then((res) => {\r\n      get_users()\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update user successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../../css/users.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_user from '../../redux/User/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst UpdateUser = (props) => {\r\n  const [is_active, setIsActive] = useState(props.user.is_active === words_he['active'] ? 1 : 0)\r\n  const [level, setLevel] = useState(props.user.level)\r\n  const dispatch = useDispatch()\r\n  const handle_status = (val) => {\r\n    setIsActive(Number(val))\r\n  }\r\n  const handle_level = (val) => {\r\n    setLevel(Number(val))\r\n  }\r\n  const handle_save = () => {\r\n    const data = { level, is_active }\r\n    dispatch(action_user.update_user_by_id(data, props.user.id))\r\n    const limit = props.limit\r\n    const offset = props.offset\r\n    dispatch(action_user.get_users(limit, offset))\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['name']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['permissions']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['status']}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <span className='text-muted'>{props.user.first_name + ' ' + props.user.last_name}</span>\r\n          </td>\r\n          <td>\r\n            <ul>\r\n              <li>\r\n                <input type='radio' value='1' name={'level'} checked={level === 1} onChange={(e) => handle_level(1)} /> {words_he['admin']}\r\n              </li>\r\n              <li>\r\n                <input type='radio' value='2' name={'level'} checked={level === 2} onChange={(e) => handle_level(2)} /> {words_he['user']}\r\n              </li>\r\n              <li>\r\n                <input type='radio' value='3' name={'level'} checked={level === 3} onChange={(e) => handle_level(3)} /> {words_he['guest']}\r\n              </li>\r\n            </ul>\r\n          </td>\r\n          <td>\r\n            <ul>\r\n              <li>\r\n                <input type='radio' value='1' name={'status'} checked={is_active === 1} onChange={(e) => handle_status(e.target.value)} /> {words_he['active']}\r\n              </li>\r\n              <li>\r\n                <input type='radio' value='0' name={'status'} checked={is_active === 0} onChange={(e) => handle_status(e.target.value)} /> {words_he['not_active']}\r\n              </li>\r\n            </ul>\r\n          </td>\r\n          <td>\r\n            <button type='button' className='btn btn-info' onClick={handle_save}>\r\n              {words_he['save']}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default UpdateUser\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport Select from 'react-select'\r\n\r\nimport TableBuilder from '../components/general/TableBuilder'\r\nimport PaginationBottom from '../components/general/PaginationBottom'\r\nimport UpdateUser from '../components/pages/UpdateUser'\r\n\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport * as action_user from '../redux/User/action'\r\nimport { FaFileCsv } from 'react-icons/fa'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Users = (props) => {\r\n  const items = useSelector((state) => state.user.users)\r\n  const meta_data = useSelector((state) => state.user.meta_data)\r\n  const [limit, setLimit] = useState(process.env.REACT_APP_LIMIT)\r\n  const [offset, setOffset] = useState(0)\r\n  const [search, setSearch] = useState(undefined)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(action_user.get_users({ limit, offset, search }))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [limit, offset, search])\r\n\r\n  const previous_page = () => {\r\n    let new_offset = Number(offset) - Number(limit)\r\n    new_offset = new_offset > 0 ? new_offset : 0\r\n    setOffset(new_offset)\r\n  }\r\n\r\n  const next_page = () => {\r\n    let new_offset = Number(offset) + Number(limit)\r\n    setOffset(new_offset)\r\n  }\r\n  const handle_edit = (id, index) => {\r\n    let user\r\n    for (const item of items) {\r\n      if (item['id'] === id) {\r\n        user = item\r\n        break\r\n      }\r\n    }\r\n\r\n    if (user['level'] === words_he['admin']) {\r\n      user['level'] = 1\r\n    } else if (user['level'] === words_he['user']) {\r\n      user['level'] = 2\r\n    } else if (user['level'] === words_he['guest']) {\r\n      user['level'] = 3\r\n    }\r\n    const content = <UpdateUser user={user} counter={index} key={user.id} limit={limit} offset={offset} />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n  for (const item of items) {\r\n    item['is_active'] = item['is_active'] ? words_he['active'] : words_he['not_active']\r\n    if (item['level'] === 1) {\r\n      item['level'] = words_he['admin']\r\n    } else if (item['level'] === 2) {\r\n      item['level'] = words_he['user']\r\n    } else if (item['level'] === 3) {\r\n      item['level'] = words_he['guest']\r\n    }\r\n  }\r\n  const create_csv = () => {\r\n    dispatch(action_user.get_users({ limit, offset, search, csv: true }))\r\n    //TODO -- make loading\r\n  }\r\n  return (\r\n    <div>\r\n      {/* search */}\r\n      <span className='field_search'>\r\n        <button className='transparent_button' onClick={create_csv}>\r\n          <FaFileCsv style={{ fontSize: '28px', margin: '4px' }} />\r\n        </button>\r\n        <DebounceInput minLength={2} debounceTimeout={1000} placeholder={words_he['search']} onChange={(e) => setSearch(e.target.value)} />\r\n      </span>\r\n      {/* Pagination Top */}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['rows_to_display'] + `: ${limit}`}\r\n        options={limits}\r\n        id='limits'\r\n        label='limits'\r\n        onChange={(e) => {\r\n          setOffset(0)\r\n          setLimit(e.value)\r\n        }}\r\n      />\r\n      <TableBuilder\r\n        items={items}\r\n        cols={['username', 'email', 'first_name', 'last_name', 'is_active', 'level']}\r\n        headers={{\r\n          username: words_he['username'],\r\n          first_name: words_he['first_name'],\r\n          last_name: words_he['last_name'],\r\n          email: words_he['email'],\r\n          is_active: words_he['status'],\r\n          level: words_he['permissions'],\r\n        }}\r\n        title={words_he['users']}\r\n        offset={offset}\r\n        handle_edit={handle_edit}\r\n      />\r\n\r\n      <PaginationBottom limit={limit} offset={offset} meta_data={meta_data} next_page={next_page} previous_page={previous_page} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n\r\nconst limits = [\r\n  { value: '5', label: 5 },\r\n  { value: '10', label: 10 },\r\n  { value: '25', label: 25 },\r\n  { value: '50', label: 50 },\r\n]\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TableRow({ index, schedule_time_event, schedule_time_event_array }) {\r\n  const [start_time, setStartTime] = useState(schedule_time_event.start_time)\r\n  const [end_time, setEndTime] = useState(schedule_time_event.end_time)\r\n  const [activity_description, setActivityDescription] = useState(schedule_time_event.activity_description)\r\n\r\n  const handle_start_time = (e) => {\r\n    setStartTime(e)\r\n    schedule_time_event_array[index].start_time = e\r\n  }\r\n  const handle_end_time = (e) => {\r\n    setEndTime(e)\r\n    schedule_time_event_array[index].end_time = e\r\n  }\r\n  const handle_activity_description = (e) => {\r\n    setActivityDescription(e)\r\n    schedule_time_event_array[index].activity_description = e\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type='time'\r\n          value={start_time}\r\n          onChange={(e) => {\r\n            handle_start_time(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='time'\r\n          value={end_time}\r\n          onChange={(e) => {\r\n            handle_end_time(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='text'\r\n          value={activity_description}\r\n          onChange={(e) => {\r\n            handle_activity_description(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n","import TableRow from './TableRowScheduleTimeEvent'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport default function ScheduleTimeEvent({ schedule_time_event, setScheduleTimeEvent }) {\r\n  const handle_add_row = () => {\r\n    setScheduleTimeEvent([...schedule_time_event, { start_time: '', end_time: '', activity_description: '' }])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {words_he['time_schedule_for_event']}\r\n      <table>\r\n        <thead className='table_header'>\r\n          <tr>\r\n            <th>  {words_he['start_time']}</th>\r\n            <th>  {words_he['end_time']}</th>\r\n            <th>  {words_he['activity_description']}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {schedule_time_event.map((element, index) => (\r\n            <TableRow schedule_time_event={element} index={index} key={index} schedule_time_event_array={schedule_time_event} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button type='button' className='btn btn-info' onClick={handle_add_row}>\r\n        +\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nexport default function TableRow({ index, costs_array, setCosts }) {\r\n  const handle_description = (e) => {\r\n    costs_array[index].description = e\r\n    setCosts([...costs_array])\r\n  }\r\n  const handle_amount = (e) => {\r\n    costs_array[index].amount = e\r\n    costs_array[index].total_cost = (Number(e) * Number(costs_array[index].unit_cost)).toFixed(2)\r\n    setCosts([...costs_array])\r\n  }\r\n  const handle_unit_cost = (e) => {\r\n    costs_array[index].unit_cost = e\r\n    costs_array[index].total_cost = (Number(e) * Number(costs_array[index].amount)).toFixed(2)\r\n    setCosts([...costs_array])\r\n  }\r\n  // const handle_total_cost = (e) => {\r\n  //   costs_array[index].total_cost = e\r\n  //   setCosts([...costs_array])\r\n  // }\r\n  const handle_discount = (e) => {\r\n    costs_array[index].discount = e\r\n    setCosts([...costs_array])\r\n  }\r\n  const handle_comment = (e) => {\r\n    costs_array[index].comment = e\r\n    setCosts([...costs_array])\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type='text'\r\n          value={costs_array[index].description}\r\n          onChange={(e) => {\r\n            handle_description(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          step='any'\r\n          value={costs_array[index].amount}\r\n          onChange={(e) => {\r\n            handle_amount(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          step='any'\r\n          value={costs_array[index].unit_cost}\r\n          onChange={(e) => {\r\n            handle_unit_cost(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          step='any'\r\n          value={costs_array[index].total_cost}\r\n          onChange={(e) => {\r\n            // handle_total_cost(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          step='any'\r\n          value={costs_array[index].discount}\r\n          onChange={(e) => {\r\n            handle_discount(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='text'\r\n          value={costs_array[index].comment}\r\n          onChange={(e) => {\r\n            handle_comment(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n","import TableRow from './TableRowCosts'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport default function TableCosts({ costs, setCosts  }) {\r\n  const handle_add_row = () => {\r\n    setCosts([...costs,{ description: '', amount: '', unit_cost: '',total_cost: '',discount: '',comment: '' }])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {words_he['costs']}\r\n      <table>\r\n        <thead className='table_header'> \r\n          <tr>\r\n            <th>{words_he['description']}</th>\r\n            <th>{words_he['amount']}</th>\r\n            <th>{words_he['unit_cost']}</th>\r\n            <th>{words_he['total_cost']}</th>\r\n            <th>{words_he['discount']}</th>\r\n            <th>{words_he['comment']}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {costs.map((element, index) => (\r\n            <TableRow  index={index} key={index} costs_array={costs} setCosts={setCosts} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button type='button' className='btn btn-info' onClick={handle_add_row}>\r\n        +\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import { GET_CLIENTS } from './constants'\r\nimport axios from 'axios'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nimport * as actionPopUp from '../PopUp/action'\r\nimport DownloadCsv from '../../components/general/DownloadCsv'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_clients =\r\n  ({ limit, offset, search, csv }) =>\r\n  (dispatch) => {\r\n    const query = { limit, offset, search, csv }\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/client', { params: query })\r\n      .then((res) => {\r\n        if (res.data.file_name) {\r\n          const file_name = res.data.file_name\r\n          const content = <DownloadCsv file_name={file_name} />\r\n          dispatch(actionPopUp.setPopUp(content))\r\n        } else {\r\n          dispatch({ type: GET_CLIENTS, payload: res.data })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n      })\r\n  }\r\nexport const delete_client = (client_id) => (dispatch) => {\r\n  axios\r\n    .delete(process.env.REACT_APP_REST_IMJ_URL + `/client/${client_id}`)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'client status changed successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\nexport const create_client = (data) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_REST_IMJ_URL + `/client`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'create client successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const update_client = (data, client_id) => (dispatch) => {\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/client/${client_id}`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update client successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../../css/clients.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_client from '../../redux/Client/action'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst CreateClient = () => {\r\n  const [client_info, setClientInfo] = useState({ name: '', type: words_he['private'], phone: '', email: '' })\r\n  const dispatch = useDispatch()\r\n\r\n  const convert_type = (type) => {\r\n    switch (type) {\r\n      case words_he['private']:\r\n        return 'private'\r\n      case words_he['company']:\r\n        return 'company'\r\n      case words_he['department']:\r\n        return 'department'\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const get_data = (client_info) => {\r\n    let data = {}\r\n    for (let key in client_info) {\r\n      if (client_info[key] != null) {\r\n        data[key] = client_info[key]\r\n      }\r\n    }\r\n    return { ...data, type: convert_type(data.type) }\r\n  }\r\n\r\n  const handle_save = () => {\r\n    const data = get_data(client_info)\r\n    dispatch(action_client.create_client(data))\r\n    dispatch(action_client.get_clients())\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{words_he['new_client']}</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['name']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['type']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['phone']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['email']}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input type='text' onChange={(e) => setClientInfo({ ...client_info, name: e.target.value })} defaultValue={client_info.name} />\r\n            </td>\r\n            <td>\r\n              <ul>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    value={words_he['private']}\r\n                    name={'type'}\r\n                    checked={client_info.type === words_he['private']}\r\n                    onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                  />{' '}\r\n                  {words_he['private']}\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    value={words_he['company']}\r\n                    name={'type'}\r\n                    checked={client_info.type === words_he['company']}\r\n                    onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                  />{' '}\r\n                  {words_he['company']}\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    value={words_he['department']}\r\n                    name={'type'}\r\n                    checked={client_info.type === words_he['department']}\r\n                    onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                  />{' '}\r\n                  {words_he['department']}\r\n                </li>\r\n              </ul>\r\n            </td>\r\n            <td>\r\n              <input type='tel' onChange={(e) => setClientInfo({ ...client_info, phone: e.target.value })} defaultValue={client_info.phone} />\r\n            </td>\r\n            <td>\r\n              <input type='email' onChange={(e) => setClientInfo({ ...client_info, email: e.target.value })} defaultValue={client_info.email} />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button type='button' className='btn btn-info' onClick={handle_save}>\r\n        {words_he['save']}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateClient\r\n","import { GET_EVENTS_TYPE } from './constants'\r\nimport axios from 'axios'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_events_type = () => (dispatch) => {\r\n  axios\r\n    .get(process.env.REACT_APP_REST_IMJ_URL + '/event_type')\r\n    .then((res) => {\r\n      dispatch({ type: GET_EVENTS_TYPE, payload: res.data })\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error',  `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n    })\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_event_type from '../../redux/EventType/action'\r\n\r\nconst EmailAndDownload = (props) => {\r\n  const { message, bid_id, event_id } = props\r\n  const [clientEmail, setClientEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const handle_send_email = () => {\r\n    //TODO\r\n    dispatch(action_event_type.get_events_type({ bid_id, event_id },clientEmail))\r\n    console.log('im in send email')\r\n  }\r\n  const handle_get_pdf = () => {\r\n    //TODO\r\n    dispatch(action_event_type.get_events_type({ bid_id, event_id }))\r\n    console.log('im in get pdf')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>{message}</div>\r\n      <div>\r\n        <label>\r\n          <input\r\n            type='email'\r\n            placeholder={'example@gmail.com'}\r\n            onChange={(e) => {\r\n              setClientEmail(e.target.value)\r\n            }}\r\n          />\r\n        </label>\r\n        <button type='button' className='btn btn-info' onClick={handle_send_email}>\r\n          send email\r\n        </button>\r\n      </div>\r\n      <button type='button' className='btn btn-info' onClick={handle_get_pdf}>\r\n        download pdf file\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmailAndDownload\r\n","import React from 'react'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst CancelExit = (props) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handle_click = () => {\r\n    dispatch(action_popUp.disablePopUp())\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>{words_he['cancel_exit']} </div>\r\n      <Link to='/Home'>\r\n        <button className='btn btn-lg btn-primary m-2' onClick={handle_click}>\r\n          {words_he['yes']}\r\n        </button>\r\n      </Link>\r\n      <button className='btn btn-lg btn-primary m-2' onClick={handle_click}>\r\n        {words_he['no']}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CancelExit\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\nimport { GET_BIDS } from './constants'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nimport * as actionPopUp from '../PopUp/action'\r\nimport DownloadCsv from '../../components/general/DownloadCsv'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const create_new_bid = (data) => (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    axios\r\n      .post(process.env.REACT_APP_REST_IMJ_URL + `/bid`, data)\r\n      .then((res) => {\r\n        dispatch(actionSnackBar.setSnackBar('success', 'create successfully', 2000))\r\n        return resolve(res.data.bid_id)\r\n      })\r\n      .catch((error) => {\r\n        dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n        return reject(undefined)\r\n      })\r\n  })\r\n}\r\n\r\nexport const get_bids =\r\n  ({ limit, offset, search, csv }) =>\r\n  (dispatch) => {\r\n    const query = { limit, offset, search, csv }\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/bid', { params: query })\r\n      .then((res) => {\r\n        if (res.data.file_name) {\r\n          const file_name = res.data.file_name\r\n          const content = <DownloadCsv file_name={file_name} />\r\n          dispatch(actionPopUp.setPopUp(content))\r\n        } else if (res.data.bids) {\r\n          const bids = []\r\n          for (const bid of res.data.bids) {\r\n            bids.push({ ...bid, event_date: moment(bid.event_date).format('YYYY-MM-DD HH:mm:ss') })\r\n          }\r\n          res.data.bids = bids\r\n          dispatch({ type: GET_BIDS, payload: res.data })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n      })\r\n  }\r\n\r\nexport const get_bid_by_id = (bid_id) => (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/bid/' + bid_id)\r\n      .then((res) => {\r\n        return resolve(res.data)\r\n        //TODO\r\n        // dispatch({ type: GET_USER, payload: res.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n        return reject(error)\r\n      })\r\n  })\r\n}\r\n\r\nexport const update_bid_by_id = (data, bid_id) => (dispatch) => {\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/bid/${bid_id}`, data)\r\n    .then((res) => {\r\n      get_bids()\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update user successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n","import { GET_UTILS } from './constants'\r\nimport axios from 'axios'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_utils = () => (dispatch) => {\r\n  axios\r\n    .get(process.env.REACT_APP_REST_IMJ_URL + '/utils')\r\n    .then((res) => {\r\n      let utils = { locations: [], events_type: [], tables: [], clients: [] }\r\n      if (res.data) {\r\n        for (const val of res.data.locations) {\r\n          utils.locations.push({ value: val.id, label: val.name })\r\n        }\r\n        for (const val of res.data.event_type) {\r\n          utils.events_type.push({ value: val.id, label: val.name })\r\n        }\r\n        for (const val of res.data.tables) {\r\n          utils.tables.push({ value: val, label: convert_table_name(val) })\r\n        }\r\n        for (const val of res.data.clients) {\r\n          utils.clients.push({ value: val.id, label: val.name })\r\n        }\r\n      }\r\n\r\n      dispatch({ type: GET_UTILS, payload: utils })\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n    })\r\n}\r\n\r\nconst convert_table_name = (table) => {\r\n  switch (table) {\r\n    case 'user':\r\n      return words_he['users']\r\n    case 'client':\r\n      return words_he['clients']\r\n    case 'cost':\r\n      return words_he['costs']\r\n    case 'bid':\r\n      return words_he['bids']\r\n    case 'event':\r\n      return words_he['events']\r\n    case 'supplier':\r\n      return words_he['suppliers']\r\n    case 'event_type':\r\n      return words_he['event_type']\r\n    case 'location':\r\n      return words_he['location']\r\n    case 'schedule_event':\r\n      return words_he['time_schedule_for_event']\r\n    default:\r\n      break\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Select from 'react-select'\r\nimport MyDatePicker from '../components/general/DatePicker'\r\nimport moment from 'moment'\r\n// import { makeStyles } from '@material-ui/core/styles'\r\nimport '../css/bid.css'\r\nimport TableScheduleTimeEvent from '../components/pages/TableScheduleTimeEvent'\r\nimport TableCosts from '../components/pages/TableCosts'\r\nimport CreateClient from '../components/pages/CreateClient'\r\nimport EmailAndDownload from '../components/general/EmailAndDownload'\r\nimport CancelExit from '../components/general/CancelExit'\r\n\r\nimport * as action_bid from '../redux/Bid/action'\r\nimport * as action_utils from '../redux/Utils/action'\r\nimport * as action_popUp from '../redux/PopUp/action'\r\n// import * as actionSnackBar from '../redux/SnackBar/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n// const useStyles = makeStyles((theme) => ({\r\n//   container: {\r\n//     display: 'flex',\r\n//     flexWrap: 'wrap',\r\n//   },\r\n//   textField: {\r\n//     marginLeft: theme.spacing(1),\r\n//     marginRight: theme.spacing(1),\r\n//     width: 200,\r\n//   },\r\n// }))\r\n\r\nconst Bid = (props) => {\r\n  // const classes = useStyles()\r\n\r\n  const locations = useSelector((state) => state.utils.locations)\r\n  const clients = useSelector((state) => state.utils.clients)\r\n  const events_type = useSelector((state) => state.utils.events_type)\r\n  const user = useSelector((state) => state.auth.userContent)\r\n  const dispatch = useDispatch()\r\n\r\n  const [date, setDate] = useState(moment().format(`YYYY-MM-DD`))\r\n  const [event_type, setEventType] = useState('')\r\n  const [location, setLocation] = useState('')\r\n  const [language, setLanguage] = useState('he')\r\n  const [status, setStatus] = useState('')\r\n  const [currency, setCurrency] = useState('nis')\r\n  const [client_name, setClientName] = useState('')\r\n  const [event_name, setEventName] = useState('')\r\n  const [event_comment, setEventComment] = useState(undefined)\r\n  const [max_participants, setMaxParticipants] = useState()\r\n  const [min_participants, setMinParticipants] = useState(0)\r\n  const [schedule_time_event, setScheduleTimeEvent] = useState([{ start_time: '', end_time: '', activity_description: '' }])\r\n  const [costs, setCosts] = useState([{ description: '', amount: '', unit_cost: '', total_cost: '', discount: '', comment: '' }])\r\n  //for the calculation\r\n  const [total_b_discount, setTotalBDiscount] = useState(0)\r\n  const [total_a_discount, setTotalADiscounts] = useState(0)\r\n  const [total_discount, setDiscount] = useState(0)\r\n\r\n  useEffect(() => {\r\n    dispatch(action_utils.get_utils())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  useEffect(() => {\r\n    let total_cost = 0\r\n    let discount = 0\r\n    for (const cost of costs) {\r\n      total_cost += Number(cost.total_cost)\r\n      discount += Number(cost.discount)\r\n    }\r\n    setDiscount(Number(discount).toFixed(2))\r\n    setTotalBDiscount(Number(total_cost).toFixed(2))\r\n    setTotalADiscounts(Number(total_cost - discount).toFixed(2))\r\n  }, [costs])\r\n  let req = {\r\n    bid: {\r\n      event_type,\r\n      location,\r\n      user: user.id,\r\n      event_date: date,\r\n      event_comment,\r\n      client_name,\r\n      event_name,\r\n      max_participants,\r\n      min_participants,\r\n      total_b_discount,\r\n      total_a_discount,\r\n      total_discount,\r\n      currency,\r\n      status,\r\n    },\r\n    schedule_event: schedule_time_event,\r\n    costs,\r\n    // language,\r\n  }\r\n\r\n  const handle_create_client = (e) => {\r\n    e.preventDefault()\r\n    const new_client = <CreateClient />\r\n    dispatch(action_popUp.setPopUp(new_client))\r\n  }\r\n\r\n  if (language === 'he') {\r\n    //TODO --USER TEXT HAVE TO BE IN he\r\n  } else {\r\n    //TODO --USER TEXT HAVE TO BE IN en\r\n    // if (!/^[a-zA-Z0-9]+$/.test(val)) {\r\n    //   dispatch(actionSnackBar.setSnackBar('error', `${words_he['type_in_en']} ${val} `, 3000))\r\n    //   // return\r\n    // }\r\n  }\r\n  // console.log(req)\r\n  const handle_clear = () => {\r\n    setDate(moment().format(`YYYY-MM-DD`))\r\n    setEventType('')\r\n    setLocation('')\r\n    setLanguage('')\r\n    setStatus('')\r\n    setCurrency('nis')\r\n    setClientName('')\r\n    setEventName('')\r\n    setMaxParticipants(undefined)\r\n    setMinParticipants(0)\r\n    setScheduleTimeEvent([{ from: '', to: '', describe: '' }])\r\n    setCosts([{ description: '', amount: '', unit_cost: '', total_cost: '', discount: '', comment: '' }])\r\n    setTotalBDiscount(0)\r\n    setTotalADiscounts(0)\r\n    setDiscount(0)\r\n  }\r\n\r\n  const handle_save = async () => {\r\n    //TODO -- validate data\r\n    const bid_id = await dispatch(action_bid.create_new_bid(req))\r\n    if (bid_id && typeof bid_id === 'number') {\r\n      const content = <EmailAndDownload message={` bid number: ${bid_id} create successfully `} bid_id={bid_id} />\r\n      dispatch(action_popUp.setPopUp(content))\r\n    }\r\n    props.history.push('/Home')\r\n  }\r\n  const handle_cancel_and_exit = () => {\r\n    const content = <CancelExit />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '30px' }}>\r\n      <label>\r\n        {words_he['event_date']}\r\n        <MyDatePicker date={date} setDate={setDate} className={MyDatePicker} />\r\n      </label>\r\n      <form>\r\n        <div>\r\n          <Select\r\n            className={'select'}\r\n            placeholder={words_he['languages']}\r\n            options={languages}\r\n            id='languages'\r\n            label={words_he['languages']}\r\n            onChange={(e) => {\r\n              setLanguage(e.value)\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <h3> {words_he['new_bid']} </h3>\r\n        <Select\r\n          className={'select'}\r\n          placeholder={words_he['event_type']}\r\n          options={events_type}\r\n          id='event_type'\r\n          label='event type'\r\n          onChange={(e) => {\r\n            setEventType(e.value)\r\n          }}\r\n        />\r\n        <Select\r\n          className={'select'}\r\n          placeholder={words_he['location']}\r\n          options={locations}\r\n          id='location'\r\n          label='location'\r\n          onChange={(e) => {\r\n            setLocation(e.value)\r\n          }}\r\n        />\r\n        <div>\r\n          <label>\r\n            {words_he['pick_client']}\r\n            <button onClick={handle_create_client}>{'+'}</button>\r\n            </label>\r\n            <Select\r\n              className={'select'}\r\n              placeholder={words_he['client_name']}\r\n              options={clients}\r\n              id='clients'\r\n              label={words_he['clients']}\r\n              onChange={(e) => {\r\n                //TODO -- replace to client_id\r\n                setClientName(e.value)\r\n              }}\r\n            />\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            {words_he['event_name']}\r\n            <input\r\n              type='text'\r\n              name='event_Name'\r\n              onChange={(e) => {\r\n                setEventName(e.target.value)\r\n              }}\r\n            />\r\n          </label>\r\n        </div>\r\n        <label>\r\n          {words_he['prticipnts_amount']}\r\n          <input\r\n            min='0'\r\n            type='number'\r\n            placeholder={words_he['minimum']}\r\n            onChange={(e) => {\r\n              setMinParticipants(e.target.value)\r\n            }}\r\n          />\r\n          <input\r\n            min='0'\r\n            type='number'\r\n            placeholder={words_he['maximum']}\r\n            onChange={(e) => {\r\n              setMaxParticipants(e.target.value)\r\n            }}\r\n          />\r\n        </label>\r\n        <div>\r\n          <label>\r\n            {words_he['comments']}\r\n            <textarea\r\n              onChange={(e) => {\r\n                setEventComment(e.target.value)\r\n              }}\r\n            ></textarea>\r\n          </label>\r\n        </div>\r\n\r\n        <div></div>\r\n      </form>\r\n      <TableScheduleTimeEvent setScheduleTimeEvent={setScheduleTimeEvent} schedule_time_event={schedule_time_event} />\r\n      <TableCosts\r\n        setCosts={setCosts}\r\n        costs={costs}\r\n        calculation={{\r\n          total_b_discount,\r\n          total_a_discount,\r\n          total_discount,\r\n          setTotalBDiscount,\r\n          setTotalADiscounts,\r\n          setDiscount,\r\n        }}\r\n      />\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['currency']}\r\n        options={currencies}\r\n        id='currency'\r\n        label='currency'\r\n        onChange={(e) => {\r\n          setCurrency(e.value)\r\n        }}\r\n      />\r\n      <Select\r\n        // className={classes.textField}\r\n        className={'select'}\r\n        placeholder={words_he['bid_status']}\r\n        options={bid_status}\r\n        id='bid_status'\r\n        label='bid_status'\r\n        onChange={(e) => {\r\n          setStatus(e.value)\r\n        }}\r\n      />\r\n      <div>\r\n        <div>\r\n          {words_he['total_cost_before_discount']} {total_b_discount} {currency === 'nis' ? words_he['nis'] : words_he['dollar']}\r\n        </div>\r\n        <div>\r\n          {words_he['total_discount']} {total_discount} {currency === 'nis' ? words_he['nis'] : words_he['dollar']}\r\n        </div>\r\n        <div>\r\n          {words_he['total_cost_after_discount']} {total_a_discount} {currency === 'nis' ? words_he['nis'] : words_he['dollar']}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button type='button' className='btn btn-info' onClick={handle_clear}>\r\n          {words_he['clear_all']}\r\n        </button>\r\n        <button type='button' className='btn btn-info' onClick={handle_save}>\r\n          {words_he['save']}\r\n        </button>\r\n        <button type='button' className='btn btn-info' onClick={handle_cancel_and_exit}>\r\n          {words_he['cencel_and_exit']}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bid\r\n\r\nconst languages = [\r\n  { value: 'he', label: words_he['hebrew'] },\r\n  { value: 'en', label: 'English' },\r\n]\r\nconst currencies = [\r\n  { value: 'nis', label: words_he['nis'] },\r\n  { value: 'usd', label: words_he['dollar'] },\r\n]\r\nconst bid_status = [\r\n  { value: 'draft', label: words_he['draft'] },\r\n  { value: 'sent', label: words_he['sent'] },\r\n  { value: 'approved', label: words_he['approved'] },\r\n]\r\n\r\n// {\r\n//   \"bid\": {\r\n//       \"event_type\": \"1\",\r\n//       \"location\": \"1\",\r\n//       \"user\": \"1\",\r\n//       \"event_date\": \"29-10-2021\",\r\n//       \"event_comment\": \"29-10-2021\",\r\n//       \"client_name\": \"eli\",\r\n//       \"event_name\": \"intel\",\r\n//       \"max_participants\": \"500\",\r\n//       \"min_participants\": \"0\",\r\n//       \"total_b_discount\": \"1600\",\r\n//       \"total_a_discount\": \"1500\",\r\n//       \"total_discount\": \"100\",\r\n//       \"currency\": \"nis\",\r\n//       \"status\": \"approved\"\r\n//   },\r\n//   \"schedule_event\":[{ \"start_time\": \"1\", \"end_time\":\"2\", \"activity_description\": \"3\" },\r\n//   { \"start_time\": \"12\", \"end_time\":\"32\", \"activity_description\": \"34\" }\r\n//   ],\r\n//   \"costs\": [{ \"description\": \"4\", \"amount\": \"5\", \"unit_cost\": \"6\", \"total_cost\": \"7\", \"discount\":\"8\", \"comment\": \"9\" }]\r\n// }\r\n","// import React, { useState, useEffect } from 'react'\r\n// import { useDispatch } from 'react-redux'\r\n// import * as action_bid from '../redux/Bid/action'\r\n\r\n// const words_he = require('../utils/words_he').words_he\r\n\r\nconst UpdateBid = (props) => {\r\n  // const dispatch = useDispatch()\r\n  // const [bid_info, setBidInfo] = useState()\r\n  // useEffect(async () => {\r\n  //   console.log('im here 1')\r\n  //   const bid = await dispatch(action_bid.get_bid_by_id(props.id))\r\n  //   console.log('im here 2')\r\n  //   setBidInfo({ ...bid })\r\n  //   console.log(bid)\r\n  //   console.log(bid_info)\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [])\r\n  // const handle_save = () => {\r\n  //   const data = {}\r\n  //   dispatch(action_bid.update_bid_by_id(data, props.bid.id))\r\n  //   const limit = props.limit\r\n  //   const offset = props.offset\r\n  //   dispatch(action_bid.get_bids(limit, offset))\r\n  // }\r\n\r\n  return <div>{'bid_info'}</div>\r\n}\r\n\r\nexport default UpdateBid\r\n\r\n// client_name: \"dsfa\"\r\n// comment: \"dasasfsdfa\"\r\n// created_at: \"2022-01-16T05:28:47.000Z\"\r\n// currency: \"nis\"\r\n// event_date: \"2022-01-16 12:00:00\"\r\n// event_name: \"sadf\"\r\n// event_type: \"פנימי\"\r\n// first_name: \"yisrael - azriel\"\r\n// id: \"2dc7366e-768d-11ec-85ad-005056c00001\"\r\n// last_name: \"bar\"\r\n// location: \"בתוך הבניין\"\r\n// max_participants: 2\r\n// min_participants: 2\r\n// status: \"sent\"\r\n// total_a_discount: 86\r\n// total_b_discount: 88\r\n// total_discount: 2\r\n// updated_at: \"2022-01-16T05:28:47.000Z\"\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport Select from 'react-select'\r\n\r\nimport TableBuilder from '../components/general/TableBuilder'\r\nimport PaginationBottom from '../components/general/PaginationBottom'\r\nimport UpdateBid from '../components/pages/UpdateBid'\r\n\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport * as action_bid from '../redux/Bid/action'\r\nimport { FaFileCsv } from 'react-icons/fa'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Bids = (props) => {\r\n  const items = useSelector((state) => state.bid.bids)\r\n  const meta_data = useSelector((state) => state.bid.meta_data)\r\n  const [limit, setLimit] = useState(process.env.REACT_APP_LIMIT)\r\n  const [offset, setOffset] = useState(0)\r\n  const [search, setSearch] = useState(undefined)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(action_bid.get_bids({ limit, offset, search }))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [limit, offset, search])\r\n\r\n  const previous_page = () => {\r\n    let new_offset = Number(offset) - Number(limit)\r\n    new_offset = new_offset > 0 ? new_offset : 0\r\n    setOffset(new_offset)\r\n  }\r\n\r\n  const next_page = () => {\r\n    let new_offset = Number(offset) + Number(limit)\r\n    setOffset(new_offset)\r\n  }\r\n  const handle_edit = (id, index) => {\r\n    // let bid\r\n    // for (const item of items) {\r\n    //   if (item['id'] === id) {\r\n    //     bid = item\r\n    //     break\r\n    //   }\r\n    // }\r\n    const content = <UpdateBid counter={index} id={id} limit={limit} offset={offset} />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n  const create_csv = () => {\r\n    dispatch(action_bid.get_bids({ limit, offset, search, csv: true }))\r\n    //TODO -- make loading\r\n  }\r\n  return (\r\n    <div>\r\n      {/* search */}\r\n      <span className='field_search'>\r\n        <button className='transparent_button' onClick={create_csv}>\r\n          <FaFileCsv style={{ fontSize: '28px', margin: '4px' }} />\r\n        </button>\r\n        <DebounceInput minLength={2} debounceTimeout={1000} placeholder={words_he['search']} onChange={(e) => setSearch(e.target.value)} />\r\n      </span>\r\n      {/* Pagination Top */}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['rows_to_display'] + `: ${limit}`}\r\n        options={limits}\r\n        id='limits'\r\n        label='limits'\r\n        onChange={(e) => {\r\n          setOffset(0)\r\n          setLimit(e.value)\r\n        }}\r\n      />\r\n      <TableBuilder\r\n        items={items}\r\n        cols={['event_type', 'location', 'first_name', 'event_date', 'event_name', 'client_name']}\r\n        headers={{\r\n          event_type: words_he['event_type'],\r\n          location: words_he['location'],\r\n          first_name: words_he['first_name'],\r\n          event_date: words_he['event_date'],\r\n          event_name: words_he['event_name'],\r\n          client_name: words_he['client_name'],\r\n        }}\r\n        title={words_he['bids']}\r\n        offset={offset}\r\n        handle_edit={handle_edit}\r\n      />\r\n\r\n      <PaginationBottom limit={limit} offset={offset} meta_data={meta_data} next_page={next_page} previous_page={previous_page} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bids\r\n\r\nconst limits = [\r\n  { value: '5', label: 5 },\r\n  { value: '10', label: 10 },\r\n  { value: '25', label: 25 },\r\n  { value: '50', label: 50 },\r\n]\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as userActions from '../redux/User/action'\r\nimport * as actionSnackBar from '../redux/SnackBar/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Register = () => {\r\n  const [first_name, setFirstName] = useState('')\r\n  const [last_name, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n    if (!/^[a-zA-Z0-9]+$/.test(email)) {\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['type_in_en']} ${email} `, 3000))\r\n      return\r\n    }\r\n    if (!/^[0-9]+$/.test(phone)) {\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['type_number']} ${phone} `, 3000))\r\n      return\r\n    }\r\n\r\n    const data = {\r\n      username: email,\r\n      first_name,\r\n      last_name,\r\n      email: email + process.env.REACT_APP_IMJ_EMAIL,\r\n      phone,\r\n      password: process.env.REACT_APP_FIRST_USER_PASSWORD,\r\n    }\r\n    dispatch(userActions.create_user(data))\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submit} className='form-signin'>\r\n      <h1 className='h3 mb-3 fw-normal'> {words_he['create_new_user']}</h1>\r\n      <input className='form-control' placeholder={words_he['first_name']} required onChange={(e) => setFirstName(e.target.value)} />\r\n      <input className='form-control' placeholder={words_he['last_name']} required onChange={(e) => setLastName(e.target.value)} />\r\n      <input type='text' className='form-control' placeholder={words_he['phone']} required onChange={(e) => setPhone(e.target.value)} />\r\n      <input\r\n        type='text'\r\n        className='form-control'\r\n        placeholder={words_he['email']}\r\n        required\r\n        onChange={(e) => {\r\n          setEmail(e.target.value)\r\n        }}\r\n      />\r\n      <div style={{ padding: '6px', direction: 'ltr' }}>{email + process.env.REACT_APP_IMJ_EMAIL} </div>\r\n      <button className='w-100 btn btn-lg btn-primary' type='submit'>\r\n        {words_he['register']}\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Register\r\n// style={{direction: 'ltr}}\r\n","import React, { useState } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as authActions from '../redux/Auth/action'\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst ForgotPassword = (props) => {\r\n  const [password, setPassword] = useState('')\r\n  const [redirect, setRedirect] = useState(false)\r\n  let { token } = useParams()\r\n  const dispatch = useDispatch()\r\n\r\n  const submit = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      dispatch(authActions.reset_password(password, token))\r\n      setRedirect(true)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    setTimeout(() => {\r\n      return <Redirect to='Home' />\r\n    }, 3000)\r\n  }\r\n  return (\r\n    <div  className='form-signin'>\r\n      <form onSubmit={submit}>\r\n        <h1 className='h3 mb-3 fw-normal'>{words_he['reset_password']}</h1>\r\n\r\n        <input type='password' className='form-control' placeholder={words_he['new_password']} required onChange={(e) => setPassword(e.target.value)} />\r\n        <input type='password' className='form-control' placeholder={words_he['confirm_password']} required onChange={(e) => setPassword(e.target.value)} />\r\n\r\n        <button className='w-100 btn btn-lg btn-primary' type='submit'>\r\n          {words_he['send']}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport * as authActions from '../redux/Auth/action'\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst ForgotPassword = (props) => {\r\n  const [username, setUsername] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n    dispatch(authActions.forgotPassword(username))\r\n    props.history.push('/Home')\r\n  }\r\n\r\n  return (\r\n    <div  className='form-signin'>\r\n      <form onSubmit={submit}>\r\n        <h1 className='h3 mb-3 fw-normal'>{words_he['forgot_password']}</h1>\r\n        <input type='text' className='form-control' placeholder={words_he['username']} required onChange={(e) => setUsername(e.target.value)} />\r\n        <button className='w-100 btn btn-lg btn-primary' type='submit'>\r\n          {words_he['send']}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n// export default ForgotPassword\r\nexport default withRouter(ForgotPassword)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as userActions from '../redux/User/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst ProfileSettings = (props) => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector((state) => state.user.user)\r\n  const [user_info, setUserInfo] = useState({ first_name: '', last_name: '', phone: '', password: '', confirm_password: '' })\r\n  const [passwordMatch, setPasswordMatch] = useState(true)\r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n    for (const [key, val] of Object.entries(user_info)) {\r\n      if (val === '') {\r\n        delete user_info[key]\r\n      }\r\n    }\r\n    if (!passwordMatch) {\r\n      delete user_info.password\r\n      delete user_info.confirm_password\r\n    }\r\n\r\n    dispatch(userActions.update_user(user_info))\r\n  }\r\n  useEffect(() => {\r\n    dispatch(userActions.get_user())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  useEffect(() => {\r\n    if (user_info.password === user_info.confirm_password) {\r\n      setPasswordMatch(true)\r\n    } else {\r\n      setPasswordMatch(false)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [user_info.confirm_password])\r\n  useEffect(() => {\r\n    if (Object.keys(user).length) {\r\n      setUserInfo({ ...user })\r\n    }\r\n  }, [user])\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submit} className='form-signin'>\r\n        <label>\r\n          {words_he['first_name']}\r\n          <input className='form-control' value={user_info.first_name} onChange={(e) => setUserInfo({ ...user_info, first_name: e.target.value })} />\r\n        </label>\r\n        <label>\r\n          {words_he['last_name']}\r\n          <input className='form-control' value={user_info.last_name} onChange={(e) => setUserInfo({ ...user_info, last_name: e.target.value })} />\r\n        </label>\r\n        <label>\r\n          {words_he['phone']}\r\n          <input type='text' className='form-control' value={user_info.phone} onChange={(e) => setUserInfo({ ...user_info, phone: e.target.value })} />\r\n        </label>\r\n        <label>\r\n          {words_he['new_password']}\r\n          <input type='password' className='form-control' value={user_info.password} onChange={(e) => setUserInfo({ ...user_info, password: e.target.value })} />\r\n        </label>\r\n        <label>\r\n          {words_he['confirm_password']}\r\n          <input type='password' className='form-control' value={user_info.confirm_password} onChange={(e) => setUserInfo({ ...user_info, confirm_password: e.target.value })} />\r\n          {!passwordMatch && <span style={{ color: 'red' }}> {words_he['password_not_matched']}</span>}\r\n        </label>\r\n        <div>\r\n          <button className='w-45 btn m-2 btn-primary' type='submit'>\r\n            {words_he['send']}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n  // return <div style={{ textAlign: 'center' }}>{user ? user.first_name : `didn't load user`}</div>\r\n}\r\n\r\nexport default ProfileSettings\r\n\r\n// created_at: \"2021-09-11T15:08:27.000Z\"\r\n// ​\r\n// email: \"yisrael35@gmail.com\"\r\n// ​\r\n// first_name: \"yisrael - azriel\"\r\n// ​\r\n// id: \"1e236f85-1312-11ec-97b5-005056c00001\"\r\n// ​\r\n// is_active: 1\r\n// ​\r\n// last_login: \"2022-01-10T05:22:16.000Z\"\r\n// ​\r\n// last_name: \"b\"\r\n// ​\r\n// level: 1\r\n// ​\r\n// phone: null\r\n// ​\r\n// updated_at: \"2022-01-10T05:22:16.000Z\"\r\n// ​\r\n// username: \"y@gmail.com\"\r\n","import axios from 'axios'\r\nimport { DELETE_CSV } from './constants'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nimport * as actionPopUp from '../PopUp/action'\r\nimport DownloadCsv from '../../components/general/DownloadCsv'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_table =\r\n  ({ from_date, to_date, table }) =>\r\n  (dispatch) => {\r\n    const query = { from_date, to_date, table }\r\n\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/csv', { params: query })\r\n      .then((res) => {\r\n        if (res.data.file_name) {\r\n          const file_name = res.data.file_name\r\n          const content = <DownloadCsv file_name={file_name} />\r\n          dispatch(actionPopUp.setPopUp(content))\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n      })\r\n  }\r\n\r\nexport const delete_file = (file_name) => async (dispatch) => {\r\n  try {\r\n    await axios\r\n      .delete(process.env.REACT_APP_REST_IMJ_URL + `/csv/${file_name}`)\r\n      .then((res) => {\r\n        dispatch({ type: DELETE_CSV, payload: {} })\r\n      })\r\n      .catch((error) => {\r\n        dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n      })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as action_utils from '../redux/Utils/action'\r\nimport * as action_csv from '../redux/CSV/action'\r\nimport Select from 'react-select'\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Reports = (props) => {\r\n  const dispatch = useDispatch()\r\n  //TODO\r\n  // const [from_date, setFromDate] = useState(undefined)\r\n  // const [to_date, setToDate] = useState(undefined)\r\n  let from_date, to_date\r\n\r\n  useEffect(() => {\r\n    dispatch(action_utils.get_utils())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  const [table, setTable] = useState(undefined)\r\n\r\n  const tables = useSelector((state) => state.utils.tables)\r\n  const file_name = useSelector((state) => state.csv.file_name)\r\n  const create_csv = async () => {\r\n    dispatch(action_csv.get_table({ from_date, to_date, table }))\r\n  }\r\n\r\n  return (\r\n    <div style={{ lineHeight: '2', verticalAlign: 'middle', textAlign: 'center' }}>\r\n      {/* TODO -- ADD FROM DATE AND TO DATE */}\r\n      <Select\r\n        className={'report_select'}\r\n        placeholder={'tables'}\r\n        options={tables}\r\n        id='tables'\r\n        label={'tables'}\r\n        onChange={(e) => {\r\n          setTable(e.value)\r\n        }}\r\n      />\r\n      <button className='w-45 btn m-2 btn-primary' onClick={create_csv} disabled={file_name || !table}>\r\n        {words_he['create_csv']}\r\n      </button>\r\n    </div>\r\n  )\r\n  // return <div style={{ textAlign: 'center' }}>{user ? user.first_name : `didn't load user`}</div>\r\n}\r\n\r\nexport default Reports\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport MyDatePicker from '../general/DatePicker'\r\nimport moment from 'moment'\r\nimport Select from 'react-select'\r\nimport * as action_event from '../../redux/Event/action'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst UpdateEvent = (props) => {\r\n  const [date, setDate] = useState(moment(props.data.from_date).format(`YYYY-MM-DD`))\r\n  const [start_time, setStartTime] = useState(moment(props.data.from_date).format(`HH:mm:ss`))\r\n  const [end_time, setEndTime] = useState(moment(props.data.to_date).format(`HH:mm:ss`))\r\n  const [end_after_start, setEndAfterStart] = useState(true)\r\n  const [event_info, setEventInfo] = useState({ name: '', from_date: '', to_date: '' })\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    const get_event_by_id = async () => {\r\n      const event = await dispatch(action_event.get_event_by_id(props.id))\r\n      delete event.id\r\n      delete event.user\r\n\r\n      setEventInfo({ ...event })\r\n      //TODO --\r\n      // moment(event.from_date).format(`DD/MM/YYYY`)\r\n      // setDate(moment().format(`2025-MM-DD`))\r\n      setStartTime(moment(event.from_date).format(`HH:mm`))\r\n      setEndTime(moment(event.to_date).format(`HH:mm`))\r\n    }\r\n    get_event_by_id()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const handle_save = () => {\r\n    if (start_time >= end_time) {\r\n      setEndAfterStart(false)\r\n      return\r\n    } else {\r\n      setEndAfterStart(true)\r\n    }\r\n    for (const [key, val] of Object.entries(event_info)) {\r\n      if (!val || val === null) {\r\n        delete event_info[key]\r\n      }\r\n    }\r\n\r\n    console.log(event_info)\r\n    dispatch(action_event.update_event(event_info, props.id))\r\n    const limit = props.limit\r\n    const offset = props.offset\r\n    dispatch(action_event.get_events({ limit, offset }))\r\n\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (start_time >= end_time) {\r\n      setEndAfterStart(false)\r\n      return\r\n    } else {\r\n      setEndAfterStart(true)\r\n    }\r\n\r\n    setEventInfo({ ...event_info, from_date: `${date} ${start_time}`, to_date: `${date} ${end_time}` })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [date, start_time, end_time])\r\n\r\n  return (\r\n    <div>\r\n      <h3>{words_he['edit_event']}</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['event_name']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['event_date']}\r\n            </th>\r\n            <th> {words_he['start_time']}</th>\r\n            <th> {words_he['end_time']}</th>\r\n            <th> {words_he['status']}</th>\r\n            <th> {words_he['type']}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input type='text' value={event_info.name} onChange={(e) => setEventInfo({ ...event_info, name: e.target.value })} />\r\n            </td>\r\n            <td>\r\n              <MyDatePicker date={date} setDate={setDate} className={MyDatePicker} />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type='time'\r\n                value={start_time}\r\n                onChange={(e) => {\r\n                  setStartTime(e.target.value)\r\n                }}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type='time'\r\n                value={end_time}\r\n                onChange={(e) => {\r\n                  setEndTime(e.target.value)\r\n                }}\r\n              />\r\n              {!end_after_start && <span style={{ color: 'red' }}> {words_he['end_after_start']}</span>}\r\n            </td>\r\n            <td>\r\n              <Select\r\n                className={'select'}\r\n                placeholder={words_he[event_info.status]}\r\n                options={statuses}\r\n                id='statuses'\r\n                label={words_he['status']}\r\n                onChange={(e) => {\r\n                  setEventInfo({ ...event_info, status: e.value })\r\n                }}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Select\r\n                className={'select'}\r\n                placeholder={words_he[event_info.type]}\r\n                options={types}\r\n                id='types'\r\n                label={words_he['type']}\r\n                onChange={(e) => {\r\n                  setEventInfo({ ...event_info, type: e.value })\r\n                }}\r\n              />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button type='button' className='btn btn-info m-4' onClick={handle_save}>\r\n        {words_he['save']}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateEvent\r\n\r\nconst statuses = [\r\n  { value: 'pending', label: words_he['pending'] },\r\n  { value: 'approved', label: words_he['approved'] },\r\n  { value: 'canceled', label: words_he['canceled'] },\r\n]\r\nconst types = [\r\n  { value: 'private', label: words_he['private'] },\r\n  { value: 'public', label: words_he['public'] },\r\n  { value: 'inside', label: words_he['inside'] },\r\n  { value: 'photo_shot', label: words_he['photo_shot'] },\r\n]\r\n// budget: null\r\n// check_list: null\r\n// clients: null\r\n// comment: null\r\n// from_date: \"2022-02-21T22:00:00.000Z\"\r\n// id: \"f56649a8-8531-11ec-ae77-005056c00001\"\r\n// name: \"test the event if you want\"\r\n// status: \"pending\"\r\n// suppliers: null\r\n// to_date: \"2022-02-21T22:00:00.000Z\"\r\n// type: \"public\"\r\n// user: \"yi\"\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport Select from 'react-select'\r\nimport TableBuilder from '../components/general/TableBuilder'\r\nimport PaginationBottom from '../components/general/PaginationBottom'\r\nimport UpdateEvent from '../components/pages/UpdateEvent'\r\nimport * as action_event from '../redux/Event/action'\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport { FaFileCsv } from 'react-icons/fa'\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Events = (props) => {\r\n  const items = useSelector((state) => state.event.events)\r\n  const meta_data = useSelector((state) => state.event.meta_data)\r\n\r\n  const [limit, setLimit] = useState(process.env.REACT_APP_LIMIT)\r\n  const [offset, setOffset] = useState(0)\r\n  const [search, setSearch] = useState(undefined)\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(action_event.get_events({ limit, offset, search }))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [limit, offset, search])\r\n\r\n  const previous_page = () => {\r\n    let new_offset = Number(offset) - Number(limit)\r\n    new_offset = new_offset > 0 ? new_offset : 0\r\n    setOffset(new_offset)\r\n  }\r\n\r\n  const next_page = () => {\r\n    let new_offset = Number(offset) + Number(limit)\r\n    setOffset(new_offset)\r\n  }\r\n  const handle_edit = (id, index) => {\r\n    let event\r\n    for (const item of items) {\r\n      if (item['id'] === id) {\r\n        event = item\r\n        break\r\n      }\r\n    }\r\n    const content = <UpdateEvent counter={index} id={event.id} data={event} limit={limit} offset={offset} />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n  for (const item of items) {\r\n    switch (item['type']) {\r\n      case 'private':\r\n        item['type'] = words_he['private']\r\n        break\r\n      case 'public':\r\n        item['type'] = words_he['public']\r\n        break\r\n      case 'inside':\r\n        item['type'] = words_he['inside']\r\n        break\r\n      case 'photo_shot':\r\n        item['type'] = words_he['photo_shot']\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    switch (item['status']) {\r\n      case 'pending':\r\n        item['status'] = words_he['pending']\r\n        break\r\n      case 'approved':\r\n        item['status'] = words_he['approved']\r\n        break\r\n      case 'canceled':\r\n        item['status'] = words_he['canceled']\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  const create_csv = () => {\r\n    dispatch(action_event.get_events({ limit, offset, search, csv: true }))\r\n    //TODO -- make loading\r\n  }\r\n  return (\r\n    <div>\r\n      <span className='field_search'>\r\n        <button className='transparent_button' onClick={create_csv}>\r\n          <FaFileCsv style={{ fontSize: '28px', margin: '4px' }} />\r\n        </button>\r\n        {/* search */}\r\n        <DebounceInput minLength={2} debounceTimeout={1000} placeholder={words_he['search']} onChange={(e) => setSearch(e.target.value)} />\r\n      </span>\r\n      {/* Pagination Top */}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['rows_to_display'] + `: ${limit}`}\r\n        options={limits}\r\n        id='limits'\r\n        label='limits'\r\n        onChange={(e) => {\r\n          setOffset(0)\r\n          setLimit(e.value)\r\n        }}\r\n      />\r\n\r\n      {/* <button class=\"fa-duotone fa-file-csv\">11111</button> */}\r\n      <TableBuilder\r\n        items={items}\r\n        cols={['name', 'from_date', 'to_date', 'status', 'type']}\r\n        headers={{\r\n          name: words_he['name'],\r\n          from_date: words_he['from_date'],\r\n          to_date: words_he['to_date'],\r\n          status: words_he['status'],\r\n          type: words_he['type'],\r\n        }}\r\n        title={words_he['events']}\r\n        offset={offset}\r\n        handle_edit={handle_edit}\r\n      />\r\n\r\n      <PaginationBottom limit={limit} offset={offset} meta_data={meta_data} next_page={next_page} previous_page={previous_page} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Events\r\n\r\nconst limits = [\r\n  { value: '5', label: 5 },\r\n  { value: '10', label: 10 },\r\n  { value: '25', label: 25 },\r\n  { value: '50', label: 50 },\r\n]\r\n\r\n// budget: null​\r\n// check_list: null​\r\n// clients: null​\r\n// comment: null​\r\n// created_at: \"2022-01-29T09:39:08.000Z\"​\r\n// from_date: \"2022-01-29 10:00:00\"​\r\n// id: 12​\r\n// name: \"sadasd\"​\r\n// status: \"pending\"​\r\n// suppliers: null​\r\n// template_data_id: null​\r\n// to_date: \"2022-01-29 11:00:00\"​\r\n// type: \"public\"​\r\n// updated_at: \"2022-01-29T09:39:08.000Z\"​\r\n// user_id: 1​\r\n// uuid: \"4e5cd2bd-80e7-11ec-ae77-005056c00001\"\r\n","import React, { useState } from 'react'\r\nimport '../../css/clients.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_client from '../../redux/Client/action'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst UpdateClient = (props) => {\r\n  const { name, type, email, phone } = props.client\r\n  const [client_info, setClientInfo] = useState({ name, type, phone, email })\r\n  const dispatch = useDispatch()\r\n\r\n  const convert_type = (type) => {\r\n    switch (type) {\r\n      case words_he['private']:\r\n        return 'private'\r\n      case words_he['company']:\r\n        return 'company'\r\n      case words_he['department']:\r\n        return 'department'\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const get_data = (client_info) => {\r\n    let data = {}\r\n    for (let key in client_info) {\r\n      if (client_info[key] != null) {\r\n        data[key] = client_info[key]\r\n      }\r\n    }\r\n    return { ...data, type: convert_type(data.type) }\r\n  }\r\n\r\n  const handle_save = () => {\r\n    const data = get_data(client_info)\r\n    dispatch(action_client.update_client(data, props.client.uuid))\r\n    const limit = props.limit\r\n    const offset = props.offset\r\n    dispatch(action_client.get_clients(limit, offset))\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  const handle_delete = () => {\r\n    dispatch(action_client.delete_client(props.client.uuid))\r\n    const limit = props.limit\r\n    const offset = props.offset\r\n    dispatch(action_client.get_clients(limit, offset))\r\n    setClientInfo({ ...client_info })\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['name']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['type']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['phone']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['email']}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input type='text' onChange={(e) => setClientInfo({ ...client_info, name: e.target.value })} defaultValue={client_info.name} />\r\n            </td>\r\n            <td>\r\n              <ul>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    value={words_he['private']}\r\n                    name={'type'}\r\n                    checked={client_info.type === words_he['private']}\r\n                    onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                  />{' '}\r\n                  {words_he['private']}\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    value={words_he['company']}\r\n                    name={'type'}\r\n                    checked={client_info.type === words_he['company']}\r\n                    onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                  />{' '}\r\n                  {words_he['company']}\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    value={words_he['department']}\r\n                    name={'type'}\r\n                    checked={client_info.type === words_he['department']}\r\n                    onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                  />{' '}\r\n                  {words_he['department']}\r\n                </li>\r\n              </ul>\r\n            </td>\r\n            <td>\r\n              <input type='tel' onChange={(e) => setClientInfo({ ...client_info, phone: e.target.value })} defaultValue={client_info.phone} />\r\n            </td>\r\n            <td>\r\n              <input type='email' onChange={(e) => setClientInfo({ ...client_info, email: e.target.value })} defaultValue={client_info.email} />\r\n            </td>\r\n            <td>\r\n              <button type='button' className='btn btn-info' onClick={handle_save}>\r\n                {words_he['save']}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button type='button' className='btn-del' onClick={handle_delete}>\r\n        {words_he['delete']}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateClient\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport Select from 'react-select'\r\n\r\nimport TableBuilder from '../components/general/TableBuilder'\r\nimport PaginationBottom from '../components/general/PaginationBottom'\r\nimport UpdateClient from '../components/pages/UpdateClient'\r\nimport CreateClient from '../components/pages/CreateClient'\r\n\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport * as action_client from '../redux/Client/action'\r\nimport { FaFileCsv } from 'react-icons/fa'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Clients = () => {\r\n  const items = useSelector((state) => state.client.clients)\r\n  const meta_data = useSelector((state) => state.client.meta_data)\r\n  const [limit, setLimit] = useState(process.env.REACT_APP_LIMIT)\r\n  const [offset, setOffset] = useState(0)\r\n  const [search, setSearch] = useState(undefined)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(action_client.get_clients({ limit, offset, search }))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [limit, offset, search])\r\n\r\n  const previous_page = () => {\r\n    let new_offset = Number(offset) - Number(limit)\r\n    new_offset = new_offset > 0 ? new_offset : 0\r\n    setOffset(new_offset)\r\n  }\r\n\r\n  const next_page = () => {\r\n    let new_offset = Number(offset) + Number(limit)\r\n    setOffset(new_offset)\r\n  }\r\n  const handle_edit = (id, index) => {\r\n    let client\r\n    for (const item of items) {\r\n      if (item['id'] === id) {\r\n        client = item\r\n        break\r\n      }\r\n    }\r\n    const content = <UpdateClient client={client} counter={index} key={client.id} limit={limit} offset={offset} />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n  const handle_create = () => {\r\n    const new_client = <CreateClient />\r\n    dispatch(action_popUp.setPopUp(new_client))\r\n  }\r\n\r\n  for (const item of items) {\r\n    switch (item['type']) {\r\n      case 'private':\r\n        item['type'] = words_he['private']\r\n        break\r\n      case 'company':\r\n        item['type'] = words_he['company']\r\n        break\r\n      case 'department':\r\n        item['type'] = words_he['department']\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  const create_csv = () => {\r\n    dispatch(action_client.get_clients({ limit, offset, search, csv: true }))\r\n    //TODO -- make loading\r\n  }\r\n  return (\r\n    <div>\r\n      {/* search */}\r\n      <span className='field_search'>\r\n        <button className='transparent_button' onClick={create_csv}>\r\n          <FaFileCsv style={{ fontSize: '28px', margin: '4px' }} />\r\n        </button>\r\n        <DebounceInput minLength={2} debounceTimeout={1000} placeholder={words_he['search']} onChange={(e) => setSearch(e.target.value)} />\r\n      </span>\r\n      {/* Pagination Top */}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['rows_to_display'] + `: ${limit}`}\r\n        options={limits}\r\n        id='limits'\r\n        label='limits'\r\n        onChange={(e) => {\r\n          setOffset(0)\r\n          setLimit(e.value)\r\n        }}\r\n      />\r\n      <TableBuilder\r\n        items={items}\r\n        cols={['name', 'type', 'phone', 'email']}\r\n        headers={{\r\n          name: words_he['name'],\r\n          type: words_he['type'],\r\n          phone: words_he['phone'],\r\n          email: words_he['email'],\r\n        }}\r\n        title={words_he['clients']}\r\n        offset={offset}\r\n        handle_edit={handle_edit}\r\n      />\r\n      <PaginationBottom limit={limit} offset={offset} meta_data={meta_data} next_page={next_page} previous_page={previous_page} />\r\n      <button type='button' className='btn btn-info' onClick={handle_create}>\r\n        {words_he['add_client']}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Clients\r\n\r\nconst limits = [\r\n  { value: '5', label: 5 },\r\n  { value: '10', label: 10 },\r\n  { value: '25', label: 25 },\r\n  { value: '50', label: 50 },\r\n]\r\n","import React from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst TestWebsocket = (props) => {\r\n  // const dispatch = useDispatch()\r\n\r\n  const test = async () => {\r\n  }\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <button className='w-45 btn m-2 btn-primary' onClick={test}>\r\n        test\r\n      </button>\r\n    </div>\r\n  )\r\n  // return <div style={{ textAlign: 'center' }}>{user ? user.first_name : `didn't load user`}</div>\r\n}\r\n\r\nexport default TestWebsocket\r\n","import { GET_SUPPLIERS } from './constants'\r\nimport axios from 'axios'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nimport * as actionPopUp from '../PopUp/action'\r\nimport DownloadCsv from '../../components/general/DownloadCsv'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_suppliers =\r\n  ({ limit, offset, search, csv }) =>\r\n  (dispatch) => {\r\n    const query = { limit, offset, search, csv }\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/Supplier', { params: query })\r\n      .then((res) => {\r\n        if (res.data.file_name) {\r\n          const file_name = res.data.file_name\r\n          const content = <DownloadCsv file_name={file_name} />\r\n          dispatch(actionPopUp.setPopUp(content))\r\n        } else {\r\n          for (const supplier of res.data.suppliers) {\r\n            supplier.account = JSON.parse(supplier.account)\r\n          }\r\n          dispatch({ type: GET_SUPPLIERS, payload: res.data })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n      })\r\n  }\r\nexport const delete_supplier = (Supplier_id) => (dispatch) => {\r\n  axios\r\n    .delete(process.env.REACT_APP_REST_IMJ_URL + `/Supplier/${Supplier_id}`)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'Supplier status changed successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\nexport const create_supplier = (data) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_REST_IMJ_URL + `/Supplier`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'create Supplier successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const update_supplier = (data, Supplier_id) => (dispatch) => {\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/Supplier/${Supplier_id}`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update Supplier successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../../css/suppliers.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_supplier from '../../redux/Supplier/action'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst UpdateSupplier = (props) => {\r\n  console.log(props.supplier)\r\n  const { name, email, phone, account } = props.supplier\r\n  const [supplier_info, setSupplierInfo] = useState({ name, account, phone, email })\r\n  const dispatch = useDispatch()\r\n\r\n  const handle_save = () => {\r\n    // if (account_name == '' || iban === '' || swift == '')\r\n    // Do we need validation that all the account fields was filled or its okay to fill partly\r\n\r\n    dispatch(action_supplier.update_supplier(supplier_info, props.supplier.uuid))\r\n    dispatch(action_supplier.get_suppliers())\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  const handle_delete = () => {\r\n    dispatch(action_supplier.delete_supplier(props.supplier.uuid))\r\n    dispatch(action_supplier.get_suppliers())\r\n    setSupplierInfo({ ...supplier_info })\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n\r\n  let account_name\r\n  let iban\r\n  let swift\r\n  if (!supplier_info.account) {\r\n    account_name = ''\r\n    iban = ''\r\n    swift = ''\r\n  } else {\r\n    account_name = supplier_info.account.account_name\r\n    iban = supplier_info.account.iban\r\n    swift = supplier_info.account.swift\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['name']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['phone']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['email']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['account_name']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {'IBAN'}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {'SWIFT'}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, name: e.target.value })} defaultValue={supplier_info.name} />\r\n            </td>\r\n            <td>\r\n              <input type='tel' onChange={(e) => setSupplierInfo({ ...supplier_info, phone: e.target.value })} defaultValue={supplier_info.phone} />\r\n            </td>\r\n            <td>\r\n              <input type='email' onChange={(e) => setSupplierInfo({ ...supplier_info, email: e.target.value })} defaultValue={supplier_info.email} />\r\n            </td>\r\n            <td>\r\n              <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account: { ...supplier_info.account, account_name: e.target.value } })} defaultValue={account_name} />\r\n            </td>\r\n            <td>\r\n              <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account: { ...supplier_info.account, iban: e.target.value } })} defaultValue={iban} />\r\n            </td>\r\n            <td>\r\n              <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account: { ...supplier_info.account, swift: e.target.value } })} defaultValue={swift} />\r\n            </td>\r\n            <td>\r\n              <button type='button' className='btn btn-info' onClick={handle_save}>\r\n                {words_he['save']}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button type='button' className='btn-del' onClick={handle_delete}>\r\n        {words_he['delete']}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateSupplier\r\n","import React, { useState } from 'react'\r\nimport '../../css/suppliers.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_supplier from '../../redux/Supplier/action'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst CreateSupplier = () => {\r\n  const [supplier_info, setSupplierInfo] = useState({ name: '', account: {account_name: '', iban: '', swift: ''}, phone: '', email: '' })\r\n  const dispatch = useDispatch()\r\n\r\n  const handle_save = () => {\r\n    dispatch(action_supplier.create_supplier(supplier_info))\r\n    dispatch(action_supplier.get_suppliers())\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  let account_name \r\n  let iban \r\n  let swift \r\n  if (!supplier_info.account) {\r\n    account_name = ''\r\n    iban =  ''\r\n    swift = '' \r\n  } else {\r\n    account_name = supplier_info.account.account_name\r\n    iban = supplier_info.account.iban\r\n    swift = supplier_info.account.swift\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{words_he['new_supplier']}</h3>\r\n      <table>\r\n      <thead>\r\n        <tr>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['name']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['phone']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['email']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['account_name']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {'IBAN'}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {'SWIFT'}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, name: e.target.value })} defaultValue={supplier_info.name} />\r\n          </td>\r\n          <td>\r\n            <input type='tel' onChange={(e) => setSupplierInfo({ ...supplier_info, phone: e.target.value })} defaultValue={supplier_info.phone} />\r\n          </td>\r\n          <td>\r\n            <input type='email' onChange={(e) => setSupplierInfo({ ...supplier_info, email: e.target.value })} defaultValue={supplier_info.email} />\r\n          </td>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account:{ ...supplier_info.account, account_name: e.target.value}})} defaultValue={account_name} />\r\n          </td>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account:{ ...supplier_info.account, iban: e.target.value}})} defaultValue={iban} />\r\n          </td>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account:{ ...supplier_info.account, swift: e.target.value}})} defaultValue={swift} />\r\n          </td>\r\n          <td>\r\n            <button type='button' className='btn btn-info' onClick={handle_save}>\r\n              {words_he['save']}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateSupplier\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport Select from 'react-select'\r\n\r\nimport TableBuilder from '../components/general/TableBuilder'\r\nimport PaginationBottom from '../components/general/PaginationBottom'\r\nimport UpdateSupplier from '../components/pages/UpdateSupplier'\r\nimport CreateSupplier from '../components/pages/CreateSupplier'\r\n\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport * as action_supplier from '../redux/Supplier/action'\r\nimport { FaFileCsv } from 'react-icons/fa'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Suppliers = () => {\r\n  const items = useSelector((state) => state.supplier.suppliers)\r\n  const meta_data = useSelector((state) => state.supplier.meta_data)\r\n  const [limit, setLimit] = useState(process.env.REACT_APP_LIMIT)\r\n  const [offset, setOffset] = useState(0)\r\n  const [search, setSearch] = useState(undefined)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(action_supplier.get_suppliers({ limit, offset, search }))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [limit, offset, search])\r\n\r\n  const previous_page = () => {\r\n    let new_offset = Number(offset) - Number(limit)\r\n    new_offset = new_offset > 0 ? new_offset : 0\r\n    setOffset(new_offset)\r\n  }\r\n\r\n  const next_page = () => {\r\n    let new_offset = Number(offset) + Number(limit)\r\n    setOffset(new_offset)\r\n  }\r\n  const handle_edit = (id, index) => {\r\n    let supplier\r\n    for (const item of items) {\r\n      if (item['id'] === id) {\r\n        supplier = item\r\n        break\r\n      }\r\n    }\r\n    const content = <UpdateSupplier supplier={supplier} counter={index} key={supplier.id} limit={limit} offset={offset} />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n  const handle_create = () => {\r\n    const new_supplier = <CreateSupplier />\r\n    dispatch(action_popUp.setPopUp(new_supplier))\r\n  }\r\n\r\n  for (let i = 0; i < items.length; i++) {\r\n    let account_details_str = ''\r\n    for (let key in items[i].account) {\r\n      let key_to_display\r\n      if (key === 'iban' || key === 'swift') {\r\n        key_to_display = key.toUpperCase()\r\n      } else {\r\n        key_to_display = key\r\n      }\r\n      account_details_str += key_to_display + ': ' + items[i].account[key] + ' |  \\n'\r\n    }\r\n    items[i] = { ...items[i], account_details: account_details_str }\r\n  }\r\n  const create_csv = () => {\r\n    dispatch(action_supplier.get_suppliers({ limit, offset, search, csv: true }))\r\n    //TODO -- make loading\r\n  }\r\n  return (\r\n    <div>\r\n      {/* search */}\r\n      <span className='field_search'>\r\n        <button className='transparent_button' onClick={create_csv}>\r\n          <FaFileCsv style={{ fontSize: '28px', margin: '4px' }} />\r\n        </button>\r\n        <DebounceInput minLength={2} debounceTimeout={1000} placeholder={words_he['search']} onChange={(e) => setSearch(e.target.value)} />\r\n      </span>\r\n      {/* Pagination Top */}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['rows_to_display'] + `: ${limit}`}\r\n        options={limits}\r\n        id='limits'\r\n        label='limits'\r\n        onChange={(e) => {\r\n          setOffset(0)\r\n          setLimit(e.value)\r\n        }}\r\n      />\r\n      <TableBuilder\r\n        items={items}\r\n        cols={['name', 'phone', 'email', 'account_details']}\r\n        headers={{\r\n          name: words_he['name'],\r\n          phone: words_he['phone'],\r\n          email: words_he['email'],\r\n          account_details: words_he['account_details'],\r\n        }}\r\n        title={words_he['suppliers']}\r\n        offset={offset}\r\n        handle_edit={handle_edit}\r\n      />\r\n      <PaginationBottom limit={limit} offset={offset} meta_data={meta_data} next_page={next_page} previous_page={previous_page} />\r\n      <button type='button' className='btn btn-info' onClick={handle_create}>\r\n        {words_he['add_supplier']}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Suppliers\r\n\r\nconst limits = [\r\n  { value: '5', label: 5 },\r\n  { value: '10', label: 10 },\r\n  { value: '25', label: 25 },\r\n  { value: '50', label: 50 },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport * as authActions from '../../redux/Auth/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst Nav = (props) => {\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated)\r\n  const permissions = useSelector((state) => state.auth.permissions)\r\n  const dispatch = useDispatch()\r\n  const logout = async () => {\r\n    dispatch(authActions.logout())\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('TokenAccess')\r\n    if (token) {\r\n      dispatch(authActions.check_if_token_exist(token))\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  let menu\r\n  if (!isAuthenticated) {\r\n    menu = (\r\n      <ul className='navbar-nav me-auto mb-2 mb-md-0'>\r\n        <li className='nav-item active'>\r\n          <Link to='Login' className='nav-link'>\r\n            {words_he['login']}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    )\r\n  } else {\r\n    if (permissions === 1) {\r\n      menu = (\r\n        <ul className='navbar-nav me-auto mb-2 mb-md-0'>\r\n          <li className='nav-item active'>\r\n            <Link to='/Tests' className='nav-link'>\r\n              Tests\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Reports' className='nav-link'>\r\n              {words_he['reports']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Suppliers' className='nav-link'>\r\n              {words_he['suppliers']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Events' className='nav-link'>\r\n              {words_he['events']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Clients' className='nav-link'>\r\n              {words_he['clients']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/ProfileSettings' className='nav-link'>\r\n              {words_he['profile_settings']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Bids' className='nav-link'>\r\n              {words_he['bids']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/CreateBid' className='nav-link'>\r\n              {words_he['new_bid']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Register' className='nav-link'>\r\n              {words_he['create_new_user']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Users' className='nav-link'>\r\n              {words_he['users']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Login' className='nav-link' onClick={logout}>\r\n              {words_he['logout']}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      )\r\n    } else if (permissions === 2) {\r\n      menu = (\r\n        <ul className='navbar-nav me-auto mb-2 mb-md-0'>\r\n          <li className='nav-item active'>\r\n            <Link to='/ProfileSettings' className='nav-link'>\r\n              {words_he['profile_settings']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/CreateBid' className='nav-link'>\r\n              {words_he['new_bid']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/login' className='nav-link' onClick={logout}>\r\n              {words_he['logout']}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      )\r\n    } else if (permissions === 3) {\r\n      menu = (\r\n        <ul className='navbar-nav me-auto mb-2 mb-md-0'>\r\n          <li className='nav-item active'>\r\n            <Link to='/ProfileSettings' className='nav-link'>\r\n              {words_he['profile_settings']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/login' className='nav-link' onClick={logout}>\r\n              {words_he['logout']}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className='navbar navbar-expand-md navbar-dark bg-dark mb-4'>\r\n      <div className='container-fluid'>\r\n        <Link to='Home' className='navbar-brand'>\r\n          {words_he['home']}\r\n        </Link>\r\n\r\n        <div>{menu}</div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\n// Material-UI\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Collapse, IconButton, Typography } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as actionSnackBar from '../../redux/SnackBar/action'\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const snackBarOBJ = useSelector((state) => state.snackBar)\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    dispatch(actionSnackBar.disableSnackBar())\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Collapse in={snackBarOBJ.visible} timeout={1000}>\r\n        <Alert\r\n          elevation={4}\r\n          variant='filled'\r\n          severity={snackBarOBJ.type}\r\n          action={\r\n            <IconButton style={{ height: '20px', width: '20px' }} elevation={4} variant='filled' severity={snackBarOBJ.type} onClick={handleClose}>\r\n              <CloseIcon style={{ color: 'white' }} />\r\n            </IconButton>\r\n          }\r\n        >\r\n          <Typography data-cy='snackbar-msg' style={{ padding: '8px' }}>\r\n            {snackBarOBJ.message}\r\n          </Typography>\r\n        </Alert>\r\n      </Collapse>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: '69px',\r\n    right: '30px',\r\n    width: 'auto',\r\n    zIndex: 1400,\r\n    opacity: 0.8,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      position: 'absolute',\r\n      zIndex: 1400,\r\n      width: '90%',\r\n      right: '5%',\r\n    },\r\n  },\r\n}))\r\n","import React from 'react';\r\nimport { Route,Redirect } from 'react-router-dom';\r\n \r\n// Redux\r\nimport { useSelector } from 'react-redux';\r\n \r\nconst PrivateRoute = ({ component : Component , ...res}) => {\r\n \r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  \r\n  return(\r\n  <Route {...res} render={ props => !isAuthenticated ? \r\n    <Redirect to='/Login' />:<Component {...props} />} />\r\n  )\r\n}\r\n \r\nexport default PrivateRoute","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst Popup = (props) => {\r\n  const pop_up_visible = useSelector((state) => state.popUp.visible)\r\n  const pop_up_content = useSelector((state) => state.popUp.content)\r\n  const dispatch = useDispatch()\r\n  const handle_close = () => {\r\n    dispatch(action_popUp.disablePopUp())\r\n  }\r\n\r\n  if (pop_up_visible) {\r\n    return (\r\n      <div className='popup-box'>\r\n        <div className='box'>\r\n          <span className='close-icon' onClick={handle_close}>\r\n            x\r\n          </span>\r\n          <span style={{ lineHeight: '2', display: 'inline-block', verticalAlign: 'middle' }}>{pop_up_content}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return <span></span>\r\n  }\r\n}\r\n\r\nexport default Popup\r\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport './css/App.css'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport React, { useState } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/index'\r\n\r\n//pages\r\nimport Home from './pages/Home'\r\nimport Login from './pages/Login'\r\nimport Users from './pages/Users'\r\nimport CreateBid from './pages/CreateBid'\r\nimport Bids from './pages/Bids'\r\nimport Register from './pages/Register'\r\nimport ResetPassword from './pages/ResetPassword'\r\nimport ForgotPassword from './pages/ForgotPassword'\r\nimport ProfileSettings from './pages/ProfileSettings'\r\nimport Reports from './pages/Reports'\r\nimport Events from './pages/Events'\r\n// import Locations from './pages/Locations'\r\nimport Clients from './pages/Clients.js'\r\nimport Tests from './pages/Tests'\r\nimport Suppliers from './pages/Suppliers'\r\n\r\n//components\r\nimport NavBar from './components/general/NavBar'\r\nimport SnackBar from './components/general/SnackBar'\r\nimport PrivateRoute from './components/general/PrivateRoutes'\r\nimport PopUp from './components/general/PopUp'\r\n\r\nfunction App() {\r\n  const [name, setName] = useState('')\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='App'>\r\n        <Router>\r\n          <NavBar name={name} setName={setName} />\r\n          <SnackBar />\r\n          <PopUp />\r\n          <main>\r\n            <Switch>\r\n              <Route path='/Login' component={() => <Login />} />\r\n              <Route path='/ForgotPassword' component={() => <ForgotPassword />} />\r\n              <Route path='/ResetPassword/:token' component={() => <ResetPassword />} />\r\n              <PrivateRoute path='/Home' exact component={() => <Home name={name} />} />\r\n              <PrivateRoute path='/Register' component={Register} />\r\n              <PrivateRoute path='/Users' component={Users} />\r\n              <PrivateRoute path='/Bids' component={Bids} />\r\n              <PrivateRoute path='/Events' component={Events} />\r\n              <PrivateRoute path='/Reports' component={Reports} />\r\n              <PrivateRoute path='/CreateBid' component={CreateBid} />\r\n              <PrivateRoute path='/ProfileSettings' component={ProfileSettings} />\r\n              <PrivateRoute path='/Clients' component={Clients} />\r\n              <PrivateRoute path='/Suppliers' component={Suppliers} />\r\n              <PrivateRoute path='/Tests' component={Tests} />\r\n              <PrivateRoute path='/*' component={Login} />\r\n            </Switch>\r\n          </main>\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './css/index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}