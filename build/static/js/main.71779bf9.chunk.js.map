{"version":3,"sources":["services/websocket.js","utils/words_he.js","redux/Auth/constants.js","redux/Auth/reducer.js","redux/Client/constants.js","redux/Client/reducer.js","redux/SnackBar/constants.js","redux/SnackBar/reducer.js","redux/User/constants.js","redux/User/reducer.js","redux/Bid/constants.js","redux/Bid/reducer.js","redux/Location/constants.js","redux/Location/reducer.js","redux/EventType/constants.js","redux/EventType/reducer.js","redux/Utils/constants.js","redux/Utils/reducer.js","redux/PopUp/constants.js","redux/PopUp/reducer.js","redux/Home/constants.js","redux/Home/reducer.js","redux/Event/constants.js","redux/Event/reducer.js","redux/Supplier/constants.js","redux/Supplier/reducer.js","redux/CSV/constants.js","redux/CSV/reducer.js","redux/index.js","services/index.js","redux/SnackBar/action.js","redux/PopUp/action.js","components/general/DatePicker.js","redux/Event/action.js","components/pages/CreateEvent.js","pages/Home.js","redux/Home/action.js","utils/constans.js","redux/Auth/action.js","pages/Login.js","components/general/RowBuilder.js","components/general/TableBuilder.js","components/general/PaginationBottom.js","redux/User/action.js","components/pages/UpdateUser.js","pages/Users.js","components/pages/TableRowScheduleTimeEvent.js","components/pages/TableScheduleTimeEvent.js","components/pages/TableRowCosts.js","components/pages/TableCosts.js","redux/EventType/action.js","components/general/EmailAndDownload.js","components/general/CancelExit.js","redux/Bid/action.js","redux/Utils/action.js","pages/CreateBid.js","components/pages/UpdateBid.js","pages/Bids.js","pages/Register.js","pages/ResetPassword.js","pages/ForgotPassword.js","pages/ProfileSettings.js","redux/CSV/action.js","pages/Reports.js","components/pages/UpdateEvent.js","pages/Events.js","redux/Client/action.js","components/pages/UpdateClient.js","components/pages/CreateClient.js","pages/Clients.js","pages/Tests.js","redux/Supplier/action.js","components/pages/UpdateSupplier.js","components/pages/CreateSupplier.js","pages/Suppliers.js","components/general/NavBar.js","components/general/SnackBar.js","components/general/PrivateRoutes.js","components/general/PopUp.js","App.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","words_he","welcome","login","hello","please_sign_in","home","register","create_new_user","logout","email","username","password","new_password","confirm_password","forgot_password","send","reset_password","users","user","admin","active","not_active","edit","delete","status","update_at","phone","new_bid","bid_id","permissions","first_name","last_name","languages","hebrew","event_type","client_name","location","event_name","comments","prticipnts_amount","minimum","maximum","time_schedule_for_event","start_time","end_time","activity_description","costs","description","amount","unit_cost","total_cost","discount","comment","currency","bit_status","total_cost_before_discount","total_discount","total_cost_after_discount","save","clear_all","cencel_and_exit","nis","dollar","draft","sent","approved","bid_status","search","sum_rows","rows_to_display","server_error","login_error","failed_load_data","type_in_en","type_number","yes","no","cancel_exit","bids","profile_settings","password_not_matched","user_name","permission_level","change_password","old_password","locatin_name","clients","client","private","type","department","company","guest","event_date","new_client","new_event","add_client","from_date","to_date","end_after_start","create_event","events","public","inside","photo_shot","pending","canceled","suppliers","account_details","account_name","add_supplier","new_supplier","reports","LOGIN_SUCCESS","LOGOUT_SUCCESS","SET_LOADING_INDICATOR_AUTH","initialState","token","userContent","isAuthenticated","currentRoute","window","pathname","GET_CLIENTS","meta_data","SET_SNACKBAR","DISABLE_SNACKBAR","visible","timeout","message","GET_USERS","GET_USER","GET_BIDS","GET_LOCATIONS","locations","GET_EVENTS_TYPE","events_type","GET_UTILS","tables","SET_POPUP","DISABLE_POPUP","content","GET_HOME_EVENTS","GET_EVENTS","GET_SUPPLIERS","GET_CSV","DELETE_CSV","file_name","undefined","middleware","thunk","rootReducer","combineReducers","auth","state","action","payload","level","snackBar","bid","eventType","utils","popUp","event","supplier","csv","store","createStore","composeWithDevTools","applyMiddleware","WebSocketWorker","timeoutInstance","setSnackBar","dispatch","setTimeout","disablePopUp","setPopUp","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","MyDatePicker","date","setDate","classes","className","noValidate","TextField","id","label","defaultValue","InputLabelProps","shrink","inputProps","min","onChange","e","target","value","require","get_events","limit","offset","query","axios","get","process","params","then","res","data","push","moment","format","catch","error","console","log","actionSnackBar","get_event_by_id","event_id","Promise","resolve","reject","a","CreateEvent","useSelector","useState","setStartTime","setEndTime","setEndAfterStart","event_info","setEventInfo","useDispatch","useEffect","scope","style","color","onClick","post","response","statusText","action_popUp","localizer","momentLocalizer","Home","props","workerInstances","init_ws","receiveData","action_home","addEventListener","removeEventListener","textAlign","startAccessor","endAccessor","height","setAuthToken","defaults","headers","common","getState","put","localStorage","setItem","forgotPassword","Authorization","redirect_to_home","host","hostname","replace","Login","setUsername","setPassword","submit","preventDefault","authActions","toUpperCase","to","onSubmit","placeholder","required","RowBuilder","counter","cols","handle_edit","map","col","index","Number","TableBuilder","items","title","PaginationBottom","previous_page","next_page","marginBottom","disabled","padding","margin","get_users","create_user","update_user","user_id","UpdateUser","is_active","setIsActive","setLevel","handle_status","val","handle_level","checked","action_user","Users","setLimit","setOffset","setSearch","item","float","minLength","debounceTimeout","options","limits","new_offset","TableRow","schedule_time_event","schedule_time_event_array","setActivityDescription","handle_start_time","handle_end_time","handle_activity_description","ScheduleTimeEvent","setScheduleTimeEvent","element","costs_array","setCosts","handle_description","step","toFixed","handle_amount","handle_unit_cost","handle_discount","handle_comment","TableCosts","get_events_type","EmailAndDownload","setClientEmail","action_event_type","CancelExit","handle_click","create_new_bid","get_bids","get_utils","convert_table_name","table","Bid","setEventType","setLocation","setLanguage","setStatus","setCurrency","setClientName","setEventName","event_comment","setEventComment","max_participants","setMaxParticipants","min_participants","setMinParticipants","total_b_discount","setTotalBDiscount","total_a_discount","setTotalADiscounts","setDiscount","action_utils","cost","req","schedule_event","handle_save","action_bid","history","calculation","currencies","from","describe","UpdateBid","Bids","Register","setFirstName","setLastName","setEmail","setPhone","test","userActions","direction","ForgotPassword","redirect","setRedirect","useParams","withRouter","ProfileSettings","user_info","setUserInfo","passwordMatch","setPasswordMatch","Object","entries","key","keys","length","get_table","delete_file","Reports","setTable","create_csv","action_csv","file_path","href","UpdateEvent","action_event","statuses","types","Events","get_clients","UpdateClient","client_info","setClientInfo","convert_type","get_data","client_id","action_client","uuid","CreateClient","Clients","TestWebsocket","get_suppliers","i","account","json","JSON","parse","UpdateSupplier","iban","swift","supplier_info","setSupplierInfo","Supplier_id","action_supplier","CreateSupplier","Suppliers","account_details_str","Nav","menu","removeItem","getItem","jwtDecode","exp","Date","now","user_data","CustomizedSnackbars","snackBarOBJ","root","Collapse","in","Alert","elevation","variant","severity","IconButton","reason","clearTimeout","Typography","position","top","right","zIndex","opacity","marginTop","breakpoints","down","PrivateRoute","Component","component","render","Popup","pop_up_visible","pop_up_content","lineHeight","verticalAlign","App","setName","NavBar","PopUp","path","ResetPassword","exact","CreateBid","Tests","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.71779bf9.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"ws\",\"init_ws\",\"send_message\",\"close_ws\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"c9169908fef050ea5310.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","const words_he = {\r\n  welcome: 'ברוכים הבאים למוזיאון ישראל',\r\n  login: 'כניסה',\r\n  hello: 'שלום',\r\n  please_sign_in: 'אנא התחבר/י',\r\n  home: 'בית',\r\n  register: 'הרשמה',\r\n  create_new_user: 'יצירת משתמש',\r\n  logout: 'התנתקות',\r\n  name: 'שם',\r\n  email: 'כתובת מייל',\r\n  username: 'שם משתמש',\r\n  password: 'סיסמה',\r\n  new_password: 'סיסמה חדשה',\r\n  confirm_password: 'סיסמה בשנית',\r\n  forgot_password: 'שכחתי סיסמה',\r\n  send: 'שלח',\r\n  reset_password: 'איפוס סיסמה',\r\n  users: 'משתמשים',\r\n  user: 'משתמש',\r\n  admin: 'מנהל',\r\n  active: 'פעיל',\r\n  not_active: 'לא פעיל',\r\n  edit: 'ערוך',\r\n  delete: 'מחק',\r\n  status: 'סטטוס',\r\n  update_at: 'עודכן בתאריך',\r\n  phone: 'מספר פלאפון',\r\n  new_bid: 'הצעת מחיר חדשה',\r\n  bid_id: 'מספר הצעת מחיר',\r\n  permissions: 'הרשאות',\r\n  first_name: 'שם פרטי',\r\n  last_name: 'שם משפחה',\r\n  languages: 'שפות',\r\n  hebrew: 'עברית',\r\n  event_type: 'סוג אירוע',\r\n  client_name: 'שם הלקוח',\r\n  location: 'מיקום',\r\n  event_name: 'שם האירוע',\r\n  comments: 'הערות',\r\n  prticipnts_amount: 'כמות משתתפים',\r\n  minimum: 'מינימום',\r\n  maximum: 'מקסימום',\r\n  time_schedule_for_event: 'לוח זמנים לאירוע',\r\n  start_time: 'משעה',\r\n  end_time: 'עד שעה',\r\n  activity_description: 'תיאור הפעילות',\r\n  costs: 'עלויות',\r\n  description: 'תיאור',\r\n  amount: 'כמות',\r\n  unit_cost: 'מחיר ליחידה',\r\n  total_cost: 'מחיר כולל',\r\n  discount: 'הנחה',\r\n  comment: 'הערה',\r\n  currency: 'מטבע',\r\n  bit_status: 'סטטוס הצעה',\r\n  total_cost_before_discount: 'סה\"כ לפי הנחה',\r\n  total_discount: 'סה\"כ הנחה',\r\n  total_cost_after_discount: 'סה\"כ אחרי הנחה',\r\n  save: 'שמור',\r\n  clear_all: 'נקה הכול',\r\n  cencel_and_exit: 'ביטול ויציאה',\r\n  nis: 'שקל',\r\n  dollar: 'דולר',\r\n  draft: 'טיוטה',\r\n  sent: 'נשלח',\r\n  approved: 'אושר',\r\n  bid_status: 'סטטוס הצעה',\r\n  search: 'חיפוש...',\r\n  sum_rows: 'סך התוצאות: ',\r\n  rows_to_display: 'מספר שורות להציג',\r\n  server_error: 'שגיאת שרת',\r\n  login_error: 'שם משתמש או סיסמא לא נכונים',\r\n  failed_load_data: 'נכשל לטעון מידע',\r\n  type_in_en: 'הקלד באנגלית',\r\n  type_number: 'הקלד מספר',\r\n  yes: 'כן',\r\n  no: 'לא',\r\n  cancel_exit: 'אתה בטוח שאתה רוצה לצאת?',\r\n  bids: 'הצעות מחיר',\r\n  profile_settings: 'הגדרות פרופיל',\r\n  password_not_matched: 'הסיסמאות אינן תואמות',\r\n  user_name: 'שם משתמש',\r\n  permission_level: 'רמת הרשאה',\r\n  change_password: 'שינוי סיסמה',\r\n  old_password: 'סיסמה נוכחית',\r\n  locatin_name: 'שם מיקום',\r\n  clients: 'לקוחות',\r\n  client: 'לקוח',\r\n  private: 'פרטי',\r\n  type: 'סוג',\r\n  department: 'מחלקה',\r\n  company: 'חברה',\r\n  guest: 'אורח',\r\n  event_date: 'תאריך האירוע',\r\n  new_client: 'לקוח חדש',\r\n  new_event: 'אירוע חדש',\r\n  add_client: 'הוספת לקוח',\r\n  from_date: 'מתאריך',\r\n  to_date: 'עד תאריך',\r\n  end_after_start: 'שעת הסיום צריכה להיות אחרי שעת ההתחלה',\r\n  create_event: 'צור אירוע חדש',\r\n  events: 'אירועים',\r\n  public: 'ציבורי',\r\n  inside: 'בפנים',\r\n  photo_shot: 'צילומים',\r\n  pending: 'ממתין לאישור',\r\n  canceled: 'בוטל',\r\n  suppliers: 'ספקים',\r\n  account_details: 'פרטי חשבון',\r\n  account_name: 'שם בעל החשבון',\r\n  add_supplier: 'הוספת ספק',\r\n  new_supplier: 'ספק חדש',\r\n  reports: 'דוחות'\r\n}\r\n\r\nmodule.exports = {\r\n  words_he,\r\n}\r\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const SET_LOADING_INDICATOR_AUTH = 'SET_LOADING_INDICATOR_AUTH';\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { LOGIN_SUCCESS, LOGOUT_SUCCESS, SET_LOADING_INDICATOR_AUTH } from './constants'\r\n\r\nconst initialState = {\r\n  token: '',\r\n  permissions: 0,\r\n  userContent: {},\r\n  isAuthenticated: false,\r\n  currentRoute: window.location.pathname || '/Home',\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        token: action.payload.token,\r\n        userContent: action.payload.user,\r\n        permissions: action.payload.user.level,\r\n      }\r\n    }\r\n    case SET_LOADING_INDICATOR_AUTH:\r\n      return {\r\n        ...state,\r\n        permissions: 0,\r\n      }\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: '',\r\n        userContent: {},\r\n        currentRoute: '/Login',\r\n        isAuthenticated: false,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_CLIENTS = 'GET_CLIENTS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport {GET_CLIENTS} from './constants'\r\n\r\nconst initialState = {\r\n  clients: [],\r\n  meta_data: {sum_rows:0},\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CLIENTS: {\r\n      return {\r\n        ...state,\r\n        clients: action.payload.clients,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const SET_SNACKBAR = 'SET_SNACKBAR';\r\nexport const DISABLE_SNACKBAR = 'DISABLE_SNACKBAR';\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_SNACKBAR, DISABLE_SNACKBAR } from './constants'\r\n\r\nconst initialState = {\r\n  visible: false,\r\n  timeout: 3000,\r\n  message: '',\r\n  type: 'success', // error | warning | info | success\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        timeout: action.payload.timeout,\r\n        message: action.payload.message,\r\n        type: action.payload.type,\r\n      }\r\n    case DISABLE_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        visible: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_USERS = 'GET_USERS'\r\nexport const GET_USER = 'GET_USER'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_USERS, GET_USER} from './constants'\r\n\r\nconst initialState = {\r\n  users: [],\r\n  user:{},\r\n  meta_data: {sum_rows:0},\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: action.payload.users,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n    case GET_USER: {\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_BIDS = 'GET_BIDS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_BIDS } from './constants'\r\n\r\nconst initialState = {\r\n  bids: [],\r\n  meta_data: { sum_rows: 0 },\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_BIDS: {\r\n      return {\r\n        ...state,\r\n        bids: action.payload.bids,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_LOCATIONS = 'GET_LOCATIONS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_LOCATIONS } from './constants'\r\n\r\nconst initialState = {\r\n  locations: [],\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOCATIONS: {\r\n      return {\r\n        ...state,\r\n        locations: action.payload,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_EVENTS_TYPE = 'GET_EVENT_TYPE'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_EVENTS_TYPE } from './constants'\r\n\r\nconst initialState = {\r\n  events_type: [],\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_EVENTS_TYPE: {\r\n      return {\r\n        ...state,\r\n        events_type: action.payload,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_UTILS = 'GET_UTILS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_UTILS } from './constants'\r\n\r\nconst initialState = {\r\n  locations: [],\r\n  events_type: [],\r\n  tables: [],\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_UTILS: {\r\n      return {\r\n        ...state,\r\n        locations: action.payload.locations,\r\n        events_type: action.payload.events_type,\r\n        tables: action.payload.tables,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const SET_POPUP = 'SET_POPUP';\r\nexport const DISABLE_POPUP = 'DISABLE_POPUP';\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_POPUP, DISABLE_POPUP } from './constants'\r\n\r\nconst initialState = {\r\n  visible: false,\r\n  content: <span></span>,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_POPUP:\r\n      return {\r\n        ...state,\r\n        visible: true,\r\n        content: action.payload,\r\n      }\r\n    case DISABLE_POPUP:\r\n      return {\r\n        ...state,\r\n        visible: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_HOME_EVENTS = 'GET_HOME_EVENTS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_HOME_EVENTS } from './constants'\r\n\r\nconst initialState = {\r\n  events: [],\r\n  meta_data: { sum_rows: 0 },\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_HOME_EVENTS: {\r\n      return {\r\n        ...state,\r\n        events: action.payload.events,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_EVENTS = 'GET_EVENTS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_EVENTS } from './constants'\r\n\r\nconst initialState = {\r\n  events: [],\r\n  meta_data: { sum_rows: 0 },\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_EVENTS: {\r\n      return {\r\n        ...state,\r\n        events: action.payload.events,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_SUPPLIERS = 'GET_SUPPLIERS'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_SUPPLIERS } from './constants'\r\n\r\nconst initialState = {\r\n  suppliers: [],\r\n  meta_data: { sum_rows: 0 },\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_SUPPLIERS: {\r\n      return {\r\n        ...state,\r\n        suppliers: action.payload.suppliers,\r\n        meta_data: action.payload.meta_data,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const GET_CSV = 'GET_CSV'\r\nexport const DELETE_CSV = 'DELETE_CSV'\r\n\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_CSV, DELETE_CSV } from './constants'\r\n\r\nconst initialState = {\r\n  file_name: undefined,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CSV: {\r\n      return {\r\n        ...state,\r\n        file_name: action.payload.file_name,\r\n      }\r\n    }\r\n    case DELETE_CSV: {\r\n      return {\r\n        ...state,\r\n        file_name: undefined,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport authReducer from './Auth/reducer'\r\nimport clientReducer from './Client/reducer'\r\nimport snackBarReducer from './SnackBar/reducer'\r\nimport userReducer from './User/reducer'\r\nimport bidReducer from './Bid/reducer'\r\nimport locationReducer from './Location/reducer'\r\nimport eventTypeReducer from './EventType/reducer'\r\nimport utilsReducer from './Utils/reducer'\r\nimport popUpReducer from './PopUp/reducer'\r\nimport homeReducer from './Home/reducer'\r\nimport eventReducer from './Event/reducer'\r\nimport supplierReducer from './Supplier/reducer'\r\nimport csvReducer from './CSV/reducer'\r\n\r\nconst initionState = {}\r\nconst middleware = [thunk]\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  snackBar: snackBarReducer,\r\n  user: userReducer,\r\n  bid: bidReducer,\r\n  location: locationReducer,\r\n  eventType: eventTypeReducer,\r\n  utils: utilsReducer,\r\n  popUp: popUpReducer,\r\n  client: clientReducer,\r\n  home: homeReducer,\r\n  event: eventReducer,\r\n  supplier: supplierReducer,\r\n  csv: csvReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, initionState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n","// Import worker\r\nimport WebSocketWorker from 'workerize-loader!./websocket' // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nexport default WebSocketWorker()\r\n","import { SET_SNACKBAR, DISABLE_SNACKBAR } from './constants'\r\n\r\nlet timeoutInstance = null\r\n\r\nexport const disableSnackBar = () => (dispatch) => {\r\n  dispatch({ type: DISABLE_SNACKBAR })\r\n  clearTimeout(timeoutInstance)\r\n}\r\n\r\nexport const setSnackBar =\r\n  (type, message, timeout = 2000) =>\r\n  (dispatch) => {\r\n    dispatch({ type: SET_SNACKBAR, payload: { type, message, timeout } })\r\n    timeoutInstance = setTimeout(() => {\r\n      dispatch({ type: DISABLE_SNACKBAR })\r\n    }, timeout)\r\n  }\r\n","import { SET_POPUP, DISABLE_POPUP } from './constants'\r\n\r\nexport const disablePopUp = () => (dispatch) => {\r\n  dispatch({ type: DISABLE_POPUP })\r\n}\r\n\r\nexport const setPopUp = (content) => (dispatch) => {\r\n  dispatch({ type: SET_POPUP, payload: content })\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}))\r\n\r\nexport default function MyDatePicker({ date, setDate }) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <form className={classes.container} noValidate>\r\n      <TextField\r\n        id='date'\r\n        label='Date'\r\n        type='date'\r\n        defaultValue={date}\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          min: date,\r\n        }}\r\n        onChange={(e) => {\r\n          setDate(e.target.value)\r\n        }}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\nimport { GET_EVENTS } from './constants'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const create_event = (data) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_REST_IMJ_URL + `/event`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'create successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const get_events =\r\n  ({ limit, offset, search, from_date, to_date }) =>\r\n  (dispatch) => {\r\n    const query = { limit, offset, search, from_date, to_date }\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/event', { params: query })\r\n      .then((res) => {\r\n        const events = []\r\n        for (const event of res.data.events) {\r\n          events.push({\r\n            ...event,\r\n            from_date: moment(event.from_date).format('YYYY-MM-DD HH:mm:ss'),\r\n            to_date: moment(event.to_date).format('YYYY-MM-DD HH:mm:ss'),\r\n          })\r\n        }\r\n        res.data.events = events\r\n\r\n        dispatch({ type: GET_EVENTS, payload: res.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n      })\r\n  }\r\n\r\nexport const get_event_by_id = (event_id) => (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/event/' + event_id)\r\n      .then((res) => {\r\n        return resolve(res.data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n        return reject(error)\r\n      })\r\n  })\r\n}\r\n\r\nexport const update_event = (data, event_id) => (dispatch) => {\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/event/${event_id}`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update event successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport MyDatePicker from '../general/DatePicker'\r\nimport moment from 'moment'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\nimport * as action_event from '../../redux/Event/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst CreateEvent = () => {\r\n  const user = useSelector((state) => state.auth.userContent)\r\n  const [date, setDate] = useState(moment().format(`YYYY-MM-DD`))\r\n  const [start_time, setStartTime] = useState('10:00')\r\n  const [end_time, setEndTime] = useState('11:00')\r\n  const [end_after_start, setEndAfterStart] = useState(true)\r\n\r\n  const [event_info, setEventInfo] = useState({ name: '', user: user.id, from_date: '', to_date: '' })\r\n  const dispatch = useDispatch()\r\n\r\n  const handle_save = () => {\r\n    if (start_time >= end_time) {\r\n      setEndAfterStart(false)\r\n      return\r\n    } else {\r\n      setEndAfterStart(true)\r\n    }\r\n    dispatch(action_event.create_event(event_info))\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (start_time >= end_time) {\r\n      setEndAfterStart(false)\r\n      return\r\n    } else {\r\n      setEndAfterStart(true)\r\n    }\r\n\r\n    setEventInfo({ ...event_info, from_date: `${date} ${start_time}`, to_date: `${date} ${end_time}` })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [date, start_time, end_time])\r\n\r\n  return (\r\n    <div>\r\n      <h3>{words_he['new_event']}</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['event_name']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['event_date']}\r\n            </th>\r\n            <th> {words_he['start_time']}</th>\r\n            <th> {words_he['end_time']}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input type='text' onChange={(e) => setEventInfo({ ...event_info, name: e.target.value })} />\r\n            </td>\r\n            <td>\r\n              <MyDatePicker date={date} setDate={setDate} className={MyDatePicker} />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type='time'\r\n                value={start_time}\r\n                onChange={(e) => {\r\n                  setStartTime(e.target.value)\r\n                }}\r\n              />\r\n            </td>\r\n            <td>\r\n              \r\n              <input\r\n                type='time'\r\n                value={end_time}\r\n                onChange={(e) => {\r\n                  setEndTime(e.target.value)\r\n                }}\r\n              />\r\n              {!end_after_start && <span style={{ color: 'red' }}> {words_he['end_after_start']}</span>}\r\n            </td>\r\n            <td>\r\n              <button type='button' className='btn btn-info' onClick={handle_save}>\r\n                {words_he['save']}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateEvent\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport 'moment/locale/he'\r\nimport * as action_home from '../redux/Home/action'\r\nimport * as actionSnackBar from '../redux/SnackBar/action'\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport CreateEvent from '../components/pages/CreateEvent'\r\nimport workerInstances from '../services'\r\nconst localizer = momentLocalizer(moment)\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Home = (props) => {\r\n  const events = useSelector((state) => state.home.events)\r\n  const token = useSelector((state) => state.auth.token)\r\n\r\n  const dispatch = useDispatch()\r\n  //connect to the ws\r\n  useEffect(() => {\r\n    workerInstances.init_ws({ token })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  //receive message from the ws\r\n  useEffect(() => {\r\n    const receiveData = (message) => {\r\n      if ((message?.data?.type === 'login' || message?.data?.type === 'notification') && !message?.data?.error) {\r\n        const response = { ...message.data }\r\n        // console.log(response)\r\n        dispatch(actionSnackBar.setSnackBar('success', response.content, 2000))\r\n      } else if (message?.data?.type === 'events' && !message?.data?.error) {\r\n        const response = { ...message.data }\r\n        // console.log(response)\r\n        dispatch(action_home.set_events(response.content))\r\n      } else {\r\n        // const response = { ...message.data }\r\n        // console.log(response)\r\n      }\r\n    }\r\n    workerInstances.addEventListener('message', receiveData)\r\n    return () => {\r\n      workerInstances.removeEventListener('message', receiveData)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  // const file_name = 'csv_1644175244501.csv'\r\n  // const url = process.env.REACT_APP_REST_IMJ_URL\r\n  // const file_path = `${url}/assets/${file_name}`\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      {/* <a href={file_path}>readme</a> */}\r\n      {/* <p>{words_he['welcome']}</p> */}\r\n      <button\r\n        className='btn btn-info'\r\n        onClick={() => {\r\n          // const data = { from_date: '2022-01-14', to_date: '2022-01-14' }\r\n          // dispatch(action_home.get_events(data))\r\n          const content = <CreateEvent />\r\n          dispatch(action_popUp.setPopUp(content))\r\n        }}\r\n      >\r\n        {words_he['create_event']}\r\n      </button>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        // views={['month']}\r\n        startAccessor='start'\r\n        endAccessor='end'\r\n        style={{ height: 500 }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { GET_HOME_EVENTS } from './constants'\r\nimport workerInstances from '../../services'\r\n\r\nexport const set_events = (response) => (dispatch) => {\r\n  dispatch({ type: GET_HOME_EVENTS, payload: { events: response.events } })\r\n}\r\nexport const get_events = ({from_date, to_date, search}) => (dispatch) => {\r\n  const data = {\r\n    type: 'get_events',\r\n    data: {\r\n      from_date,\r\n      to_date,\r\n      search,\r\n    },\r\n  }\r\n  workerInstances.send_message(data)\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport function setAuthToken(token) {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = 'Bearer ' + token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n}","import { LOGIN_SUCCESS, LOGOUT_SUCCESS, SET_LOADING_INDICATOR_AUTH } from './constants'\r\nimport axios from 'axios'\r\nimport { setAuthToken } from '../../utils/constans'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nimport jwtDecode from 'jwt-decode'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const login = (username, password) => async (dispatch, getState) => {\r\n  try {\r\n    const response = await axios.put(process.env.REACT_APP_REST_IMJ_URL + '/auth', { username, password })\r\n    setAuthToken(response.data.token) // Set token to Axios default header.\r\n    //store user data and token\r\n    localStorage.setItem('UserName', response.data.user.name)\r\n    localStorage.setItem('UserLevel', response.data.user.level)\r\n    localStorage.setItem('UserId', response.data.user.id)\r\n    localStorage.setItem('TokenAccess', response.data.token)\r\n    dispatch({ type: LOGIN_SUCCESS, payload: response.data })\r\n  } catch (error) {\r\n    console.log(error)\r\n    dispatch(actionSnackBar.setSnackBar('error', `${words_he['login_error']}`, 3000))\r\n  }\r\n}\r\n\r\nexport const check_if_token_exist = (token) => async (dispatch) => {\r\n  try {\r\n    if (jwtDecode(token).exp < Date.now() / 1000) {\r\n      localStorage.removeItem('TokenAccess')\r\n      return\r\n    }\r\n\r\n    const name = localStorage.getItem('UserName')\r\n    const level = localStorage.getItem('UserLevel')\r\n    const id = localStorage.getItem('UserId')\r\n    const user_data = { user: { name, level: Number(level), id }, token }\r\n    setAuthToken(token) // Set token to Axios default header.\r\n    dispatch({ type: LOGIN_SUCCESS, payload: user_data })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: LOGOUT_SUCCESS })\r\n    await axios.delete(process.env.REACT_APP_REST_IMJ_URL + '/auth').catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n    setAuthToken() // Set '' to Axios default header.\r\n    localStorage.removeItem('TokenAccess')\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const forgotPassword = (username) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_REST_IMJ_URL + '/forgot_password', { username })\r\n    .then((res) => {\r\n      // console.log(res.data)\r\n      dispatch(actionSnackBar.setSnackBar('success', 'Sent to email successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      // console.log(error.response)\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const reset_password = (password, token) => (dispatch) => {\r\n  dispatch({ type: SET_LOADING_INDICATOR_AUTH, payload: true })\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + '/forgot_password', { password }, { headers: { Authorization: 'Bearer ' + token } })\r\n    .then((res) => {\r\n      console.log(res)\r\n      dispatch(actionSnackBar.setSnackBar('success', res.statusText, 2000))\r\n      setTimeout(redirect_to_home, 2000)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response)\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n      dispatch({ type: SET_LOADING_INDICATOR_AUTH, payload: false })\r\n      setTimeout(redirect_to_home, 3000)\r\n    })\r\n}\r\n\r\nconst redirect_to_home = () => {\r\n  let host = window.location.hostname\r\n  if (host === 'localhost') {\r\n    window.location.replace('http://' + host + ':3000')\r\n  } else {\r\n    window.location.replace('https://' + host)\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as authActions from '../redux/Auth/action'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Login = (props) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated)\r\n  let currentRoute = useSelector((state) => state.auth.currentRoute)\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n    dispatch(authActions.login(username, password))\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    if (currentRoute.toUpperCase() === '/LOGIN' || currentRoute === '/') {\r\n      currentRoute = 'Home'\r\n    }\r\n    return <Redirect to={currentRoute} />\r\n  }\r\n\r\n  return (\r\n    <div className='form-signin'>\r\n      <form onSubmit={submit}>\r\n        <h1 className='h3 mb-3 fw-normal'>{words_he['please_sign_in']}</h1>\r\n        <input type='text' className='form-control' placeholder={words_he['username']} required onChange={(e) => setUsername(e.target.value)} />\r\n\r\n        <input type='password' className='form-control' placeholder={words_he['password']} required onChange={(e) => setPassword(e.target.value)} />\r\n\r\n        <button className='w-100 btn btn-lg btn-success' type='submit'>\r\n          {words_he['login']}\r\n        </button>\r\n      </form>\r\n      <Link to='ForgotPassword' className='nav-link'>\r\n        <button className='w-30 btn btn-sm btn-primary m-3'>{words_he['forgot_password']}</button>{' '}\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\nexport default Login\r\n","const words_he = require('../../utils/words_he').words_he\r\n\r\nconst RowBuilder = ({ counter, cols, data, handle_edit }) => {\r\n  return (\r\n    <tr>\r\n      <td className='pl-4'>{counter}</td>\r\n      {cols.map((col, index) => (\r\n        <td key={col + index}>{<span className='text-muted'>{data[col]}</span>}</td>\r\n      ))}\r\n      {handle_edit ? (\r\n        <td className='pl-4'>\r\n          <button onClick={() => handle_edit(data.id, Number(counter) )}>{words_he['edit']}</button>\r\n        </td>\r\n      ) : (\r\n        <td></td>\r\n      )}\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default RowBuilder\r\n","import RowBuilder from './RowBuilder'\r\n\r\nconst TableBuilder = ({ items, cols, headers, title, offset, handle_edit }) => {\r\n  \r\n  return (\r\n    <div>\r\n      <div className='user_page'>\r\n        <h5 className='card-title text-uppercase mb-0'> {title}</h5>\r\n        <table className='table user-table mb-0'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n                #\r\n              </th>\r\n              {cols.map((col, index) => (\r\n                <th scope='col' className='border-0 text-uppercase font-medium pl-4' key={col}>\r\n                  {headers[col]}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {items.map((data, index) => (\r\n              <RowBuilder data={data} counter={index + 1 + Number(offset)} key={data.id} cols={cols} handle_edit={handle_edit} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableBuilder\r\n","import React from 'react'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst PaginationBottom = ({ limit, offset, meta_data, previous_page, next_page }) => {\r\n  return (\r\n    <div style={{ textAlign: 'center', marginBottom: '40px' }}>\r\n      <button onClick={previous_page} disabled={offset === 0} style={{ padding: '6px', margin: '2px' }}>\r\n        {'<'}\r\n      </button>\r\n      <button\r\n        onClick={next_page}\r\n        disabled={meta_data.sum_rows <= offset || meta_data.sum_rows <= limit || meta_data.sum_rows <= Number(limit) + Number(offset)}\r\n        style={{ padding: '6px', margin: '2px' }}\r\n      >\r\n        {'>'}\r\n      </button>\r\n      <div>{words_he['sum_rows'] + meta_data.sum_rows}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PaginationBottom\r\n","import { GET_USERS, GET_USER } from './constants'\r\nimport axios from 'axios'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_users = (limit, offset, search) => (dispatch) => {\r\n  const query = { limit, offset, search }\r\n  axios\r\n    .get(process.env.REACT_APP_REST_IMJ_URL + '/user', { params: query })\r\n    .then((res) => {\r\n      dispatch({ type: GET_USERS, payload: res.data })\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n    })\r\n}\r\n\r\nexport const get_user = () => (dispatch, getState) => {\r\n  const store = getState()\r\n  const user_id = store.auth.userContent.id\r\n  axios\r\n    .get(process.env.REACT_APP_REST_IMJ_URL + '/user/' + user_id)\r\n    .then((res) => {\r\n      const data = {\r\n        first_name: res.data.first_name,\r\n        last_name: res.data.last_name,\r\n        phone: res.data.phone || '',\r\n        password: '',\r\n        confirm_password: '',\r\n      }\r\n      console.log(data)\r\n      dispatch({ type: GET_USER, payload: data })\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n    })\r\n}\r\n\r\nexport const delete_user = (user_id) => (dispatch) => {\r\n  axios\r\n    .delete(process.env.REACT_APP_REST_IMJ_URL + `/user/${user_id}`)\r\n    .then((res) => {\r\n      get_users()\r\n      dispatch(actionSnackBar.setSnackBar('success', 'user status changed successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\nexport const create_user = (data) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_REST_IMJ_URL + `/user`, data)\r\n    .then((res) => {\r\n      get_users()\r\n      dispatch(actionSnackBar.setSnackBar('success', 'create user successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const update_user = (data) => (dispatch, getState) => {\r\n  const store = getState()\r\n  const user_id = store.auth.userContent.id\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/user/${user_id}`, data)\r\n    .then((res) => {\r\n      get_users()\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update user successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const update_user_by_id = (data, user_id) => (dispatch, getState) => {\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/user/${user_id}`, data)\r\n    .then((res) => {\r\n      get_users()\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update user successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../../css/users.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_user from '../../redux/User/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst UpdateUser = (props) => {\r\n  const [is_active, setIsActive] = useState(props.user.is_active === words_he['active'] ? 1 : 0)\r\n  const [level, setLevel] = useState(props.user.level)\r\n  const dispatch = useDispatch()\r\n  const handle_status = (val) => {\r\n    setIsActive(Number(val))\r\n  }\r\n  const handle_level = (val) => {\r\n    setLevel(Number(val))\r\n  }\r\n  const handle_save = () => {\r\n    const data = { level, is_active }\r\n    dispatch(action_user.update_user_by_id(data, props.user.id))\r\n    const limit = props.limit\r\n    const offset = props.offset\r\n    dispatch(action_user.get_users(limit, offset))\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['name']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['permissions']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['status']}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <span className='text-muted'>{props.user.first_name + ' ' + props.user.last_name}</span>\r\n          </td>\r\n          <td>\r\n            <ul>\r\n              <li>\r\n                <input type='radio' value='1' name={'level'} checked={level === 1} onChange={(e) => handle_level(1)} /> {words_he['admin']}\r\n              </li>\r\n              <li>\r\n                <input type='radio' value='2' name={'level'} checked={level === 2} onChange={(e) => handle_level(2)} /> {words_he['user']}\r\n              </li>\r\n              <li>\r\n                <input type='radio' value='3' name={'level'} checked={level === 3} onChange={(e) => handle_level(3)} /> {words_he['guest']}\r\n              </li>\r\n            </ul>\r\n          </td>\r\n          <td>\r\n            <ul>\r\n              <li>\r\n                <input type='radio' value='1' name={'status'} checked={is_active === 1} onChange={(e) => handle_status(e.target.value)} /> {words_he['active']}\r\n              </li>\r\n              <li>\r\n                <input type='radio' value='0' name={'status'} checked={is_active === 0} onChange={(e) => handle_status(e.target.value)} /> {words_he['not_active']}\r\n              </li>\r\n            </ul>\r\n          </td>\r\n          <td>\r\n            <button type='button' className='btn btn-info' onClick={handle_save}>\r\n              {words_he['save']}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default UpdateUser\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport Select from 'react-select'\r\n\r\nimport TableBuilder from '../components/general/TableBuilder'\r\nimport PaginationBottom from '../components/general/PaginationBottom'\r\nimport UpdateUser from '../components/pages/UpdateUser'\r\n\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport * as action_user from '../redux/User/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Users = (props) => {\r\n  const items = useSelector((state) => state.user.users)\r\n  const meta_data = useSelector((state) => state.user.meta_data)\r\n  const [limit, setLimit] = useState(process.env.REACT_APP_LIMIT)\r\n  const [offset, setOffset] = useState(0)\r\n  const [search, setSearch] = useState(undefined)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(action_user.get_users(limit, offset, search))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [limit, offset, search])\r\n\r\n  const previous_page = () => {\r\n    let new_offset = Number(offset) - Number(limit)\r\n    new_offset = new_offset > 0 ? new_offset : 0\r\n    setOffset(new_offset)\r\n  }\r\n\r\n  const next_page = () => {\r\n    let new_offset = Number(offset) + Number(limit)\r\n    setOffset(new_offset)\r\n  }\r\n  const handle_edit = (id, index) => {\r\n    let user\r\n    for (const item of items) {\r\n      if (item['id'] === id) {\r\n        user = item\r\n        break\r\n      }\r\n    }\r\n\r\n    if (user['level'] === words_he['admin']) {\r\n      user['level'] = 1\r\n    } else if (user['level'] === words_he['user']) {\r\n      user['level'] = 2\r\n    } else if (user['level'] === words_he['guest']) {\r\n      user['level'] = 3\r\n    }\r\n    const content = <UpdateUser user={user} counter={index} key={user.id} limit={limit} offset={offset} />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n  for (const item of items) {\r\n    item['is_active'] = item['is_active'] ? words_he['active'] : words_he['not_active']\r\n    if (item['level'] === 1) {\r\n      item['level'] = words_he['admin']\r\n    } else if (item['level'] === 2) {\r\n      item['level'] = words_he['user']\r\n    } else if (item['level'] === 3) {\r\n      item['level'] = words_he['guest']\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* search */}\r\n      <span style={{ float: 'left', margin: '10px' }}>\r\n        <DebounceInput minLength={2} debounceTimeout={1000} placeholder={words_he['search']} onChange={(e) => setSearch(e.target.value)} />\r\n      </span>\r\n      {/* Pagination Top */}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['rows_to_display'] + `: ${limit}`}\r\n        options={limits}\r\n        id='limits'\r\n        label='limits'\r\n        onChange={(e) => {\r\n          setOffset(0)\r\n          setLimit(e.value)\r\n        }}\r\n      />\r\n      <TableBuilder\r\n        items={items}\r\n        cols={['username', 'email', 'first_name', 'last_name', 'is_active', 'level']}\r\n        headers={{\r\n          username: words_he['username'],\r\n          first_name: words_he['first_name'],\r\n          last_name: words_he['last_name'],\r\n          email: words_he['email'],\r\n          is_active: words_he['status'],\r\n          level: words_he['permissions'],\r\n        }}\r\n        title={words_he['users']}\r\n        offset={offset}\r\n        handle_edit={handle_edit}\r\n      />\r\n\r\n      <PaginationBottom limit={limit} offset={offset} meta_data={meta_data} next_page={next_page} previous_page={previous_page} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n\r\nconst limits = [\r\n  { value: '5', label: 5 },\r\n  { value: '10', label: 10 },\r\n  { value: '25', label: 25 },\r\n  { value: '50', label: 50 },\r\n]\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TableRow({ index, schedule_time_event, schedule_time_event_array }) {\r\n  const [start_time, setStartTime] = useState(schedule_time_event.start_time)\r\n  const [end_time, setEndTime] = useState(schedule_time_event.end_time)\r\n  const [activity_description, setActivityDescription] = useState(schedule_time_event.activity_description)\r\n\r\n  const handle_start_time = (e) => {\r\n    setStartTime(e)\r\n    schedule_time_event_array[index].start_time = e\r\n  }\r\n  const handle_end_time = (e) => {\r\n    setEndTime(e)\r\n    schedule_time_event_array[index].end_time = e\r\n  }\r\n  const handle_activity_description = (e) => {\r\n    setActivityDescription(e)\r\n    schedule_time_event_array[index].activity_description = e\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type='time'\r\n          value={start_time}\r\n          onChange={(e) => {\r\n            handle_start_time(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='time'\r\n          value={end_time}\r\n          onChange={(e) => {\r\n            handle_end_time(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='text'\r\n          value={activity_description}\r\n          onChange={(e) => {\r\n            handle_activity_description(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n","import TableRow from './TableRowScheduleTimeEvent'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport default function ScheduleTimeEvent({ schedule_time_event, setScheduleTimeEvent }) {\r\n  const handle_add_row = () => {\r\n    setScheduleTimeEvent([...schedule_time_event, { start_time: '', end_time: '', activity_description: '' }])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {words_he['time_schedule_for_event']}\r\n      <table>\r\n        <thead className='table_header'>\r\n          <tr>\r\n            <th>  {words_he['start_time']}</th>\r\n            <th>  {words_he['end_time']}</th>\r\n            <th>  {words_he['activity_description']}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {schedule_time_event.map((element, index) => (\r\n            <TableRow schedule_time_event={element} index={index} key={index} schedule_time_event_array={schedule_time_event} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button type='button' className='btn btn-info' onClick={handle_add_row}>\r\n        +\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nexport default function TableRow({ index, costs_array, setCosts }) {\r\n  const handle_description = (e) => {\r\n    costs_array[index].description = e\r\n    setCosts([...costs_array])\r\n  }\r\n  const handle_amount = (e) => {\r\n    costs_array[index].amount = e\r\n    costs_array[index].total_cost = (Number(e) * Number(costs_array[index].unit_cost)).toFixed(2)\r\n    setCosts([...costs_array])\r\n  }\r\n  const handle_unit_cost = (e) => {\r\n    costs_array[index].unit_cost = e\r\n    costs_array[index].total_cost = (Number(e) * Number(costs_array[index].amount)).toFixed(2)\r\n    setCosts([...costs_array])\r\n  }\r\n  // const handle_total_cost = (e) => {\r\n  //   costs_array[index].total_cost = e\r\n  //   setCosts([...costs_array])\r\n  // }\r\n  const handle_discount = (e) => {\r\n    costs_array[index].discount = e\r\n    setCosts([...costs_array])\r\n  }\r\n  const handle_comment = (e) => {\r\n    costs_array[index].comment = e\r\n    setCosts([...costs_array])\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type='text'\r\n          value={costs_array[index].description}\r\n          onChange={(e) => {\r\n            handle_description(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          step='any'\r\n          value={costs_array[index].amount}\r\n          onChange={(e) => {\r\n            handle_amount(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          step='any'\r\n          value={costs_array[index].unit_cost}\r\n          onChange={(e) => {\r\n            handle_unit_cost(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          step='any'\r\n          value={costs_array[index].total_cost}\r\n          onChange={(e) => {\r\n            // handle_total_cost(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          step='any'\r\n          value={costs_array[index].discount}\r\n          onChange={(e) => {\r\n            handle_discount(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type='text'\r\n          value={costs_array[index].comment}\r\n          onChange={(e) => {\r\n            handle_comment(e.target.value)\r\n          }}\r\n        />\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n","import TableRow from './TableRowCosts'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport default function TableCosts({ costs, setCosts  }) {\r\n  const handle_add_row = () => {\r\n    setCosts([...costs,{ description: '', amount: '', unit_cost: '',total_cost: '',discount: '',comment: '' }])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {words_he['costs']}\r\n      <table>\r\n        <thead className='table_header'> \r\n          <tr>\r\n            <th>{words_he['description']}</th>\r\n            <th>{words_he['amount']}</th>\r\n            <th>{words_he['unit_cost']}</th>\r\n            <th>{words_he['total_cost']}</th>\r\n            <th>{words_he['discount']}</th>\r\n            <th>{words_he['comment']}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {costs.map((element, index) => (\r\n            <TableRow  index={index} key={index} costs_array={costs} setCosts={setCosts} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button type='button' className='btn btn-info' onClick={handle_add_row}>\r\n        +\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import { GET_EVENTS_TYPE } from './constants'\r\nimport axios from 'axios'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_events_type = () => (dispatch) => {\r\n  axios\r\n    .get(process.env.REACT_APP_REST_IMJ_URL + '/event_type')\r\n    .then((res) => {\r\n      dispatch({ type: GET_EVENTS_TYPE, payload: res.data })\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error',  `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n    })\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_event_type from '../../redux/EventType/action'\r\n\r\nconst EmailAndDownload = (props) => {\r\n  const { message, bid_id, event_id } = props\r\n  const [clientEmail, setClientEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const handle_send_email = () => {\r\n    //TODO\r\n    dispatch(action_event_type.get_events_type({ bid_id, event_id },clientEmail))\r\n    console.log('im in send email')\r\n  }\r\n  const handle_get_pdf = () => {\r\n    //TODO\r\n    dispatch(action_event_type.get_events_type({ bid_id, event_id }))\r\n    console.log('im in get pdf')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>{message}</div>\r\n      <div>\r\n        <label>\r\n          <input\r\n            type='email'\r\n            placeholder={'example@gmail.com'}\r\n            onChange={(e) => {\r\n              setClientEmail(e.target.value)\r\n            }}\r\n          />\r\n        </label>\r\n        <button type='button' className='btn btn-info' onClick={handle_send_email}>\r\n          send email\r\n        </button>\r\n      </div>\r\n      <button type='button' className='btn btn-info' onClick={handle_get_pdf}>\r\n        download pdf file\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmailAndDownload\r\n","import React from 'react'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst CancelExit = (props) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handle_click = () => {\r\n    dispatch(action_popUp.disablePopUp())\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>{words_he['cancel_exit']} </div>\r\n      <Link to='/Home'>\r\n        <button className='btn btn-lg btn-primary m-2' onClick={handle_click}>\r\n          {words_he['yes']}\r\n        </button>\r\n      </Link>\r\n      <button className='btn btn-lg btn-primary m-2' onClick={handle_click}>\r\n        {words_he['no']}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CancelExit\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\nimport { GET_BIDS } from './constants'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const create_new_bid = (data) => (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    axios\r\n      .post(process.env.REACT_APP_REST_IMJ_URL + `/bid`, data)\r\n      .then((res) => {\r\n        dispatch(actionSnackBar.setSnackBar('success', 'create successfully', 2000))\r\n        return resolve(res.data.bid_id)\r\n      })\r\n      .catch((error) => {\r\n        dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n        return reject(undefined)\r\n      })\r\n  })\r\n}\r\n\r\nexport const get_bids = (limit, offset, search) => (dispatch) => {\r\n  const query = { limit, offset, search }\r\n  axios\r\n    .get(process.env.REACT_APP_REST_IMJ_URL + '/bid', { params: query })\r\n    .then((res) => {\r\n      const bids = []\r\n      for (const bid of res.data.bids) {\r\n        bids.push({ ...bid, event_date: moment(bid.event_date).format('YYYY-MM-DD HH:mm:ss') })\r\n      }\r\n      res.data.bids = bids\r\n      dispatch({ type: GET_BIDS, payload: res.data })\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n    })\r\n}\r\n\r\nexport const get_bid_by_id = (bid_id) => (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/bid/' + bid_id)\r\n      .then((res) => {\r\n        return resolve(res.data)\r\n        //TODO\r\n        // dispatch({ type: GET_USER, payload: res.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n        return reject(error)\r\n      })\r\n  })\r\n}\r\n\r\nexport const update_bid_by_id = (data, bid_id) => (dispatch) => {\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/bid/${bid_id}`, data)\r\n    .then((res) => {\r\n      get_bids()\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update user successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n","import { GET_UTILS } from './constants'\r\nimport axios from 'axios'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_utils = () => (dispatch) => {\r\n  axios\r\n    .get(process.env.REACT_APP_REST_IMJ_URL + '/utils')\r\n    .then((res) => {\r\n      let utils = { locations: [], events_type: [], tables: [] }\r\n      if (res.data) {\r\n        for (const val of res.data.locations) {\r\n          utils.locations.push({ value: val.id, label: val.name })\r\n        }\r\n        for (const val of res.data.event_type) {\r\n          utils.events_type.push({ value: val.id, label: val.name })\r\n        }\r\n        for (const val of res.data.tables) {\r\n          utils.tables.push({ value: val, label: convert_table_name(val) })\r\n        }\r\n      }\r\n\r\n      dispatch({ type: GET_UTILS, payload: utils })\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n    })\r\n}\r\n\r\nconst convert_table_name = (table) => {\r\n  switch (table) {\r\n    case 'user':\r\n      return words_he['users']\r\n    case 'client':\r\n      return words_he['clients']\r\n    case 'cost':\r\n      return words_he['costs']\r\n    case 'bid':\r\n      return words_he['bids']\r\n    case 'event':\r\n      return words_he['events']\r\n    case 'supplier':\r\n      return words_he['suppliers']\r\n    case 'event_type':\r\n      return words_he['event_type']\r\n    case 'location':\r\n      return words_he['location']\r\n    case 'schedule_event':\r\n      return words_he['time_schedule_for_event']\r\n    default:\r\n      break\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Select from 'react-select'\r\nimport MyDatePicker from '../components/general/DatePicker'\r\nimport moment from 'moment'\r\n// import { makeStyles } from '@material-ui/core/styles'\r\nimport '../css/bid.css'\r\nimport TableScheduleTimeEvent from '../components/pages/TableScheduleTimeEvent'\r\nimport TableCosts from '../components/pages/TableCosts'\r\nimport EmailAndDownload from '../components/general/EmailAndDownload'\r\nimport CancelExit from '../components/general/CancelExit'\r\nimport * as action_bid from '../redux/Bid/action'\r\nimport * as action_utils from '../redux/Utils/action'\r\nimport * as action_popUp from '../redux/PopUp/action'\r\n// import * as actionSnackBar from '../redux/SnackBar/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n// const useStyles = makeStyles((theme) => ({\r\n//   container: {\r\n//     display: 'flex',\r\n//     flexWrap: 'wrap',\r\n//   },\r\n//   textField: {\r\n//     marginLeft: theme.spacing(1),\r\n//     marginRight: theme.spacing(1),\r\n//     width: 200,\r\n//   },\r\n// }))\r\n\r\nconst Bid = (props) => {\r\n  // const classes = useStyles()\r\n\r\n  const locations = useSelector((state) => state.utils.locations)\r\n  const events_type = useSelector((state) => state.utils.events_type)\r\n  const user = useSelector((state) => state.auth.userContent)\r\n  const dispatch = useDispatch()\r\n\r\n  const [date, setDate] = useState(moment().format(`YYYY-MM-DD`))\r\n  const [event_type, setEventType] = useState('')\r\n  const [location, setLocation] = useState('')\r\n  const [language, setLanguage] = useState('he')\r\n  const [status, setStatus] = useState('')\r\n  const [currency, setCurrency] = useState('nis')\r\n  const [client_name, setClientName] = useState('')\r\n  const [event_name, setEventName] = useState('')\r\n  const [event_comment, setEventComment] = useState(undefined)\r\n  const [max_participants, setMaxParticipants] = useState()\r\n  const [min_participants, setMinParticipants] = useState(0)\r\n  const [schedule_time_event, setScheduleTimeEvent] = useState([{ start_time: '', end_time: '', activity_description: '' }])\r\n  const [costs, setCosts] = useState([{ description: '', amount: '', unit_cost: '', total_cost: '', discount: '', comment: '' }])\r\n  //for the calculation\r\n  const [total_b_discount, setTotalBDiscount] = useState(0)\r\n  const [total_a_discount, setTotalADiscounts] = useState(0)\r\n  const [total_discount, setDiscount] = useState(0)\r\n\r\n  useEffect(() => {\r\n    dispatch(action_utils.get_utils())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  useEffect(() => {\r\n    let total_cost = 0\r\n    let discount = 0\r\n    for (const cost of costs) {\r\n      total_cost += Number(cost.total_cost)\r\n      discount += Number(cost.discount)\r\n    }\r\n    setDiscount(Number(discount).toFixed(2))\r\n    setTotalBDiscount(Number(total_cost).toFixed(2))\r\n    setTotalADiscounts(Number(total_cost - discount).toFixed(2))\r\n  }, [costs])\r\n  let req = {\r\n    bid: {\r\n      event_type,\r\n      location,\r\n      user: user.id,\r\n      event_date: date,\r\n      event_comment,\r\n      client_name,\r\n      event_name,\r\n      max_participants,\r\n      min_participants,\r\n      total_b_discount,\r\n      total_a_discount,\r\n      total_discount,\r\n      currency,\r\n      status,\r\n    },\r\n    schedule_event: schedule_time_event,\r\n    costs,\r\n    // language,\r\n  }\r\n  if (language === 'he') {\r\n    //TODO --USER TEXT HAVE TO BE IN he\r\n  } else {\r\n    //TODO --USER TEXT HAVE TO BE IN en\r\n    // if (!/^[a-zA-Z0-9]+$/.test(val)) {\r\n    //   dispatch(actionSnackBar.setSnackBar('error', `${words_he['type_in_en']} ${val} `, 3000))\r\n    //   // return\r\n    // }\r\n  }\r\n  // console.log(req)\r\n  const handle_clear = () => {\r\n    setDate(moment().format(`YYYY-MM-DD`))\r\n    setEventType('')\r\n    setLocation('')\r\n    setLanguage('')\r\n    setStatus('')\r\n    setCurrency('nis')\r\n    setClientName('')\r\n    setEventName('')\r\n    setMaxParticipants(undefined)\r\n    setMinParticipants(0)\r\n    setScheduleTimeEvent([{ from: '', to: '', describe: '' }])\r\n    setCosts([{ description: '', amount: '', unit_cost: '', total_cost: '', discount: '', comment: '' }])\r\n    setTotalBDiscount(0)\r\n    setTotalADiscounts(0)\r\n    setDiscount(0)\r\n  }\r\n\r\n  const handle_save = async () => {\r\n    //TODO -- validate data\r\n    const bid_id = await dispatch(action_bid.create_new_bid(req))\r\n    if (bid_id && typeof bid_id === 'number') {\r\n      const content = <EmailAndDownload message={` bid number: ${bid_id} create successfully `} bid_id={bid_id} />\r\n      dispatch(action_popUp.setPopUp(content))\r\n    }\r\n    props.history.push('/Home')\r\n  }\r\n  const handle_cancel_and_exit = () => {\r\n    const content = <CancelExit />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '30px' }}>\r\n      <label>\r\n        {words_he['event_date']}\r\n        <MyDatePicker date={date} setDate={setDate} className={MyDatePicker} />\r\n      </label>\r\n      <form>\r\n        <div>\r\n          <Select\r\n            className={'select'}\r\n            placeholder={words_he['languages']}\r\n            options={languages}\r\n            id='languages'\r\n            label={words_he['languages']}\r\n            onChange={(e) => {\r\n              setLanguage(e.value)\r\n            }}\r\n          />\r\n          {/* <button type='button' className='btn btn-info' onClick={handle_pdf}>\r\n            pdf\r\n          </button>\r\n          <button type='button' className='btn btn-info' onClick={handle_email}>\r\n            email\r\n          </button> */}\r\n        </div>\r\n\r\n        <h3> {words_he['new_bid']} </h3>\r\n        <Select\r\n          className={'select'}\r\n          placeholder={words_he['event_type']}\r\n          options={events_type}\r\n          id='event_type'\r\n          label='event type'\r\n          onChange={(e) => {\r\n            setEventType(e.value)\r\n          }}\r\n        />\r\n        <Select\r\n          className={'select'}\r\n          placeholder={words_he['location']}\r\n          options={locations}\r\n          id='location'\r\n          label='location'\r\n          onChange={(e) => {\r\n            setLocation(e.value)\r\n          }}\r\n        />\r\n        <div>\r\n          <label>\r\n            {words_he['client_name']}\r\n            <input\r\n              type='text'\r\n              name='client_Name'\r\n              onChange={(e) => {\r\n                setClientName(e.target.value)\r\n              }}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            {words_he['event_name']}\r\n            <input\r\n              type='text'\r\n              name='event_Name'\r\n              onChange={(e) => {\r\n                setEventName(e.target.value)\r\n              }}\r\n            />\r\n          </label>\r\n        </div>\r\n        <label>\r\n          {words_he['prticipnts_amount']}\r\n          <input\r\n            min='0'\r\n            type='number'\r\n            placeholder={words_he['minimum']}\r\n            onChange={(e) => {\r\n              setMinParticipants(e.target.value)\r\n            }}\r\n          />\r\n          <input\r\n            min='0'\r\n            type='number'\r\n            placeholder={words_he['maximum']}\r\n            onChange={(e) => {\r\n              setMaxParticipants(e.target.value)\r\n            }}\r\n          />\r\n        </label>\r\n        <div>\r\n          <label>\r\n            {words_he['comments']}\r\n            <textarea\r\n              onChange={(e) => {\r\n                setEventComment(e.target.value)\r\n              }}\r\n            ></textarea>\r\n          </label>\r\n        </div>\r\n\r\n        <div></div>\r\n      </form>\r\n      <TableScheduleTimeEvent setScheduleTimeEvent={setScheduleTimeEvent} schedule_time_event={schedule_time_event} />\r\n      <TableCosts\r\n        setCosts={setCosts}\r\n        costs={costs}\r\n        calculation={{\r\n          total_b_discount,\r\n          total_a_discount,\r\n          total_discount,\r\n          setTotalBDiscount,\r\n          setTotalADiscounts,\r\n          setDiscount,\r\n        }}\r\n      />\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['currency']}\r\n        options={currencies}\r\n        id='currency'\r\n        label='currency'\r\n        onChange={(e) => {\r\n          setCurrency(e.value)\r\n        }}\r\n      />\r\n      <Select\r\n        // className={classes.textField}\r\n        className={'select'}\r\n        placeholder={words_he['bid_status']}\r\n        options={bid_status}\r\n        id='bid_status'\r\n        label='bid_status'\r\n        onChange={(e) => {\r\n          setStatus(e.value)\r\n        }}\r\n      />\r\n      <div>\r\n        <div>\r\n          {words_he['total_cost_before_discount']} {total_b_discount} {currency === 'nis' ? words_he['nis'] : words_he['dollar']}\r\n        </div>\r\n        <div>\r\n          {words_he['total_discount']} {total_discount} {currency === 'nis' ? words_he['nis'] : words_he['dollar']}\r\n        </div>\r\n        <div>\r\n          {words_he['total_cost_after_discount']} {total_a_discount} {currency === 'nis' ? words_he['nis'] : words_he['dollar']}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button type='button' className='btn btn-info' onClick={handle_clear}>\r\n          {words_he['clear_all']}\r\n        </button>\r\n        <button type='button' className='btn btn-info' onClick={handle_save}>\r\n          {words_he['save']}\r\n        </button>\r\n        <button type='button' className='btn btn-info' onClick={handle_cancel_and_exit}>\r\n          {words_he['cencel_and_exit']}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bid\r\n\r\nconst languages = [\r\n  { value: 'he', label: words_he['hebrew'] },\r\n  { value: 'en', label: 'English' },\r\n]\r\nconst currencies = [\r\n  { value: 'nis', label: words_he['nis'] },\r\n  { value: 'usd', label: words_he['dollar'] },\r\n]\r\nconst bid_status = [\r\n  { value: 'draft', label: words_he['draft'] },\r\n  { value: 'sent', label: words_he['sent'] },\r\n  { value: 'approved', label: words_he['approved'] },\r\n]\r\n\r\n// {\r\n//   \"bid\": {\r\n//       \"event_type\": \"1\",\r\n//       \"location\": \"1\",\r\n//       \"user\": \"1\",\r\n//       \"event_date\": \"29-10-2021\",\r\n//       \"event_comment\": \"29-10-2021\",\r\n//       \"client_name\": \"eli\",\r\n//       \"event_name\": \"intel\",\r\n//       \"max_participants\": \"500\",\r\n//       \"min_participants\": \"0\",\r\n//       \"total_b_discount\": \"1600\",\r\n//       \"total_a_discount\": \"1500\",\r\n//       \"total_discount\": \"100\",\r\n//       \"currency\": \"nis\",\r\n//       \"status\": \"approved\"\r\n//   },\r\n//   \"schedule_event\":[{ \"start_time\": \"1\", \"end_time\":\"2\", \"activity_description\": \"3\" },\r\n//   { \"start_time\": \"12\", \"end_time\":\"32\", \"activity_description\": \"34\" }\r\n//   ],\r\n//   \"costs\": [{ \"description\": \"4\", \"amount\": \"5\", \"unit_cost\": \"6\", \"total_cost\": \"7\", \"discount\":\"8\", \"comment\": \"9\" }]\r\n// }\r\n","// import React, { useState, useEffect } from 'react'\r\n// import { useDispatch } from 'react-redux'\r\n// import * as action_bid from '../redux/Bid/action'\r\n\r\n// const words_he = require('../utils/words_he').words_he\r\n\r\nconst UpdateBid = (props) => {\r\n  // const dispatch = useDispatch()\r\n  // const [bid_info, setBidInfo] = useState()\r\n  // useEffect(async () => {\r\n  //   console.log('im here 1')\r\n  //   const bid = await dispatch(action_bid.get_bid_by_id(props.id))\r\n  //   console.log('im here 2')\r\n  //   setBidInfo({ ...bid })\r\n  //   console.log(bid)\r\n  //   console.log(bid_info)\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [])\r\n  // const handle_save = () => {\r\n  //   const data = {}\r\n  //   dispatch(action_bid.update_bid_by_id(data, props.bid.id))\r\n  //   const limit = props.limit\r\n  //   const offset = props.offset\r\n  //   dispatch(action_bid.get_bids(limit, offset))\r\n  // }\r\n\r\n  return <div>{'bid_info'}</div>\r\n}\r\n\r\nexport default UpdateBid\r\n\r\n// client_name: \"dsfa\"\r\n// comment: \"dasasfsdfa\"\r\n// created_at: \"2022-01-16T05:28:47.000Z\"\r\n// currency: \"nis\"\r\n// event_date: \"2022-01-16 12:00:00\"\r\n// event_name: \"sadf\"\r\n// event_type: \"פנימי\"\r\n// first_name: \"yisrael - azriel\"\r\n// id: \"2dc7366e-768d-11ec-85ad-005056c00001\"\r\n// last_name: \"bar\"\r\n// location: \"בתוך הבניין\"\r\n// max_participants: 2\r\n// min_participants: 2\r\n// status: \"sent\"\r\n// total_a_discount: 86\r\n// total_b_discount: 88\r\n// total_discount: 2\r\n// updated_at: \"2022-01-16T05:28:47.000Z\"\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport Select from 'react-select'\r\n\r\nimport TableBuilder from '../components/general/TableBuilder'\r\nimport PaginationBottom from '../components/general/PaginationBottom'\r\nimport UpdateBid from '../components/pages/UpdateBid'\r\n\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport * as action_bid from '../redux/Bid/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Bids = (props) => {\r\n  const items = useSelector((state) => state.bid.bids)\r\n  const meta_data = useSelector((state) => state.bid.meta_data)\r\n  const [limit, setLimit] = useState(process.env.REACT_APP_LIMIT)\r\n  const [offset, setOffset] = useState(0)\r\n  const [search, setSearch] = useState(undefined)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(action_bid.get_bids(limit, offset, search))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [limit, offset, search])\r\n\r\n  const previous_page = () => {\r\n    let new_offset = Number(offset) - Number(limit)\r\n    new_offset = new_offset > 0 ? new_offset : 0\r\n    setOffset(new_offset)\r\n  }\r\n\r\n  const next_page = () => {\r\n    let new_offset = Number(offset) + Number(limit)\r\n    setOffset(new_offset)\r\n  }\r\n  const handle_edit = (id, index) => {\r\n    // let bid\r\n    // for (const item of items) {\r\n    //   if (item['id'] === id) {\r\n    //     bid = item\r\n    //     break\r\n    //   }\r\n    // }\r\n    const content = <UpdateBid  counter={index} id={id} limit={limit} offset={offset} />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* search */}\r\n      <span style={{ float: 'left', margin: '10px' }}>\r\n        <DebounceInput minLength={2} debounceTimeout={1000} placeholder={words_he['search']} onChange={(e) => setSearch(e.target.value)} />\r\n      </span>\r\n      {/* Pagination Top */}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['rows_to_display'] + `: ${limit}`}\r\n        options={limits}\r\n        id='limits'\r\n        label='limits'\r\n        onChange={(e) => {\r\n          setOffset(0)\r\n          setLimit(e.value)\r\n        }}\r\n      />\r\n      <TableBuilder\r\n        items={items}\r\n        cols={['event_type', 'location', 'first_name', 'event_date', 'event_name', 'client_name']}\r\n        headers={{\r\n          event_type: words_he['event_type'],\r\n          location: words_he['location'],\r\n          first_name: words_he['first_name'],\r\n          event_date: words_he['event_date'],\r\n          event_name: words_he['event_name'],\r\n          client_name: words_he['client_name'],\r\n        }}\r\n        title={words_he['bids']}\r\n        offset={offset}\r\n        handle_edit={handle_edit}\r\n      />\r\n\r\n      <PaginationBottom limit={limit} offset={offset} meta_data={meta_data} next_page={next_page} previous_page={previous_page} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bids\r\n\r\nconst limits = [\r\n  { value: '5', label: 5 },\r\n  { value: '10', label: 10 },\r\n  { value: '25', label: 25 },\r\n  { value: '50', label: 50 },\r\n]\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as userActions from '../redux/User/action'\r\nimport * as actionSnackBar from '../redux/SnackBar/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Register = () => {\r\n  const [first_name, setFirstName] = useState('')\r\n  const [last_name, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n    if (!/^[a-zA-Z0-9]+$/.test(email)) {\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['type_in_en']} ${email} `, 3000))\r\n      return\r\n    }\r\n    if (!/^[0-9]+$/.test(phone)) {\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['type_number']} ${phone} `, 3000))\r\n      return\r\n    }\r\n\r\n    const data = {\r\n      username: email,\r\n      first_name,\r\n      last_name,\r\n      email: email + process.env.REACT_APP_IMJ_EMAIL,\r\n      phone,\r\n      password: process.env.REACT_APP_FIRST_USER_PASSWORD,\r\n    }\r\n    dispatch(userActions.create_user(data))\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submit} className='form-signin'>\r\n      <h1 className='h3 mb-3 fw-normal'> {words_he['create_new_user']}</h1>\r\n      <input className='form-control' placeholder={words_he['first_name']} required onChange={(e) => setFirstName(e.target.value)} />\r\n      <input className='form-control' placeholder={words_he['last_name']} required onChange={(e) => setLastName(e.target.value)} />\r\n      <input type='text' className='form-control' placeholder={words_he['phone']} required onChange={(e) => setPhone(e.target.value)} />\r\n      <input\r\n        type='text'\r\n        className='form-control'\r\n        placeholder={words_he['email']}\r\n        required\r\n        onChange={(e) => {\r\n          setEmail(e.target.value)\r\n        }}\r\n      />\r\n      <div style={{ padding: '6px', direction: 'ltr' }}>{email + process.env.REACT_APP_IMJ_EMAIL} </div>\r\n      <button className='w-100 btn btn-lg btn-primary' type='submit'>\r\n        {words_he['register']}\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Register\r\n// style={{direction: 'ltr}}\r\n","import React, { useState } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as authActions from '../redux/Auth/action'\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst ForgotPassword = (props) => {\r\n  const [password, setPassword] = useState('')\r\n  const [redirect, setRedirect] = useState(false)\r\n  let { token } = useParams()\r\n  const dispatch = useDispatch()\r\n\r\n  const submit = async (e) => {\r\n    try {\r\n      e.preventDefault()\r\n      dispatch(authActions.reset_password(password, token))\r\n      setRedirect(true)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    setTimeout(() => {\r\n      return <Redirect to='Home' />\r\n    }, 3000)\r\n  }\r\n  return (\r\n    <div  className='form-signin'>\r\n      <form onSubmit={submit}>\r\n        <h1 className='h3 mb-3 fw-normal'>{words_he['reset_password']}</h1>\r\n\r\n        <input type='password' className='form-control' placeholder={words_he['new_password']} required onChange={(e) => setPassword(e.target.value)} />\r\n        <input type='password' className='form-control' placeholder={words_he['confirm_password']} required onChange={(e) => setPassword(e.target.value)} />\r\n\r\n        <button className='w-100 btn btn-lg btn-primary' type='submit'>\r\n          {words_he['send']}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport * as authActions from '../redux/Auth/action'\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst ForgotPassword = (props) => {\r\n  const [username, setUsername] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n    dispatch(authActions.forgotPassword(username))\r\n    props.history.push('/Home')\r\n  }\r\n\r\n  return (\r\n    <div  className='form-signin'>\r\n      <form onSubmit={submit}>\r\n        <h1 className='h3 mb-3 fw-normal'>{words_he['forgot_password']}</h1>\r\n        <input type='text' className='form-control' placeholder={words_he['username']} required onChange={(e) => setUsername(e.target.value)} />\r\n        <button className='w-100 btn btn-lg btn-primary' type='submit'>\r\n          {words_he['send']}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n// export default ForgotPassword\r\nexport default withRouter(ForgotPassword)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as userActions from '../redux/User/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst ProfileSettings = (props) => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector((state) => state.user.user)\r\n  const [user_info, setUserInfo] = useState({ first_name: '', last_name: '', phone: '', password: '', confirm_password: '' })\r\n  const [passwordMatch, setPasswordMatch] = useState(true)\r\n  const submit = async (e) => {\r\n    e.preventDefault()\r\n    for (const [key, val] of Object.entries(user_info)) {\r\n      if (val === '') {\r\n        delete user_info[key]\r\n      }\r\n    }\r\n    if (!passwordMatch) {\r\n      delete user_info.password\r\n      delete user_info.confirm_password\r\n    }\r\n\r\n    dispatch(userActions.update_user(user_info))\r\n  }\r\n  useEffect(() => {\r\n    dispatch(userActions.get_user())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  useEffect(() => {\r\n    if (user_info.password === user_info.confirm_password) {\r\n      setPasswordMatch(true)\r\n    } else {\r\n      setPasswordMatch(false)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [user_info.confirm_password])\r\n  useEffect(() => {\r\n    if (Object.keys(user).length) {\r\n      setUserInfo({ ...user })\r\n    }\r\n  }, [user])\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submit} className='form-signin'>\r\n        <label>\r\n          {words_he['first_name']}\r\n          <input className='form-control' value={user_info.first_name} onChange={(e) => setUserInfo({ ...user_info, first_name: e.target.value })} />\r\n        </label>\r\n        <label>\r\n          {words_he['last_name']}\r\n          <input className='form-control' value={user_info.last_name} onChange={(e) => setUserInfo({ ...user_info, last_name: e.target.value })} />\r\n        </label>\r\n        <label>\r\n          {words_he['phone']}\r\n          <input type='text' className='form-control' value={user_info.phone} onChange={(e) => setUserInfo({ ...user_info, phone: e.target.value })} />\r\n        </label>\r\n        <label>\r\n          {words_he['new_password']}\r\n          <input type='password' className='form-control' value={user_info.password} onChange={(e) => setUserInfo({ ...user_info, password: e.target.value })} />\r\n        </label>\r\n        <label>\r\n          {words_he['confirm_password']}\r\n          <input type='password' className='form-control' value={user_info.confirm_password} onChange={(e) => setUserInfo({ ...user_info, confirm_password: e.target.value })} />\r\n          {!passwordMatch && <span style={{ color: 'red' }}> {words_he['password_not_matched']}</span>}\r\n        </label>\r\n        <div>\r\n          <button className='w-45 btn m-2 btn-primary' type='submit'>\r\n            {words_he['send']}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n  // return <div style={{ textAlign: 'center' }}>{user ? user.first_name : `didn't load user`}</div>\r\n}\r\n\r\nexport default ProfileSettings\r\n\r\n// created_at: \"2021-09-11T15:08:27.000Z\"\r\n// ​\r\n// email: \"yisrael35@gmail.com\"\r\n// ​\r\n// first_name: \"yisrael - azriel\"\r\n// ​\r\n// id: \"1e236f85-1312-11ec-97b5-005056c00001\"\r\n// ​\r\n// is_active: 1\r\n// ​\r\n// last_login: \"2022-01-10T05:22:16.000Z\"\r\n// ​\r\n// last_name: \"b\"\r\n// ​\r\n// level: 1\r\n// ​\r\n// phone: null\r\n// ​\r\n// updated_at: \"2022-01-10T05:22:16.000Z\"\r\n// ​\r\n// username: \"y@gmail.com\"\r\n","import axios from 'axios'\r\nimport { GET_CSV, DELETE_CSV } from './constants'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_table =\r\n  ({ from_date, to_date, table }) =>\r\n  (dispatch) => {\r\n    const query = { from_date, to_date, table }\r\n\r\n    axios\r\n      .get(process.env.REACT_APP_REST_IMJ_URL + '/csv', { params: query })\r\n      .then((res) => {\r\n        console.log(res.data.file_name)\r\n\r\n        dispatch({ type: GET_CSV, payload: res.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n      })\r\n  }\r\n\r\nexport const delete_file = (file_name) => async (dispatch) => {\r\n  try {\r\n    await axios\r\n      .delete(process.env.REACT_APP_REST_IMJ_URL + `/csv/${file_name}`)\r\n      .then((res) => {\r\n        dispatch({ type: DELETE_CSV, payload: {} })\r\n      })\r\n      .catch((error) => {\r\n        dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n      })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as action_utils from '../redux/Utils/action'\r\nimport * as action_csv from '../redux/CSV/action'\r\nimport Select from 'react-select'\r\n\r\nconst Reports = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [from_date, setFromDate] = useState(undefined)\r\n  const [to_date, setToDate] = useState(undefined)\r\n\r\n  useEffect(() => {\r\n    dispatch(action_utils.get_utils())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  const [table, setTable] = useState(undefined)\r\n\r\n  const tables = useSelector((state) => state.utils.tables)\r\n  const file_name = useSelector((state) => state.csv.file_name)\r\n  const create_csv = async () => {\r\n    dispatch(action_csv.get_table({ from_date, to_date, table }))\r\n  }\r\n  const delete_file = async () => {\r\n    dispatch(action_csv.delete_file(file_name))\r\n  }\r\n  const url = process.env.REACT_APP_REST_IMJ_URL\r\n  const file_path = `${url}/assets/${file_name}`\r\n\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={'tables'}\r\n        options={tables}\r\n        id='tables'\r\n        label={'tables'}\r\n        onChange={(e) => {\r\n          setTable(e.value)\r\n        }}\r\n      />\r\n      <button className='w-45 btn m-2 btn-primary' onClick={create_csv} disabled={file_name || !table}>\r\n        create csv\r\n      </button>\r\n      <a href={file_path}>\r\n        <button className='w-45 btn m-2 btn-primary' disabled={!file_name} onClick={delete_file}>\r\n          download file\r\n        </button>\r\n      </a>\r\n    </div>\r\n  )\r\n  // return <div style={{ textAlign: 'center' }}>{user ? user.first_name : `didn't load user`}</div>\r\n}\r\n\r\nexport default Reports\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport MyDatePicker from '../general/DatePicker'\r\nimport moment from 'moment'\r\nimport Select from 'react-select'\r\nimport * as action_event from '../../redux/Event/action'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst UpdateEvent = (props) => {\r\n  const [date, setDate] = useState(moment().format(`YYYY-MM-DD`))\r\n  const [start_time, setStartTime] = useState('10:00')\r\n  const [end_time, setEndTime] = useState('11:00')\r\n  const [end_after_start, setEndAfterStart] = useState(true)\r\n  const [event_info, setEventInfo] = useState({ name: '', from_date: '', to_date: '' })\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    const get_event_by_id = async () => {\r\n      const event = await dispatch(action_event.get_event_by_id(props.id))\r\n      delete event.id\r\n      delete event.user\r\n\r\n      setEventInfo({ ...event })\r\n      //TODO --\r\n      setDate(moment(event.from_date).format(`YYYY-MM-DD`))\r\n\r\n      setStartTime(moment(event.from_date).format(`HH:mm`))\r\n      setEndTime(moment(event.to_date).format(`HH:mm`))\r\n    }\r\n    get_event_by_id()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const handle_save = () => {\r\n    if (start_time >= end_time) {\r\n      setEndAfterStart(false)\r\n      return\r\n    } else {\r\n      setEndAfterStart(true)\r\n    }\r\n    for (const [key, val] of Object.entries(event_info)) {\r\n      if (!val || val === null) {\r\n        delete event_info[key]\r\n      }\r\n    }\r\n\r\n    console.log(event_info)\r\n    dispatch(action_event.update_event(event_info, props.id))\r\n    const limit = props.limit\r\n    const offset = props.offset\r\n    dispatch(action_event.get_events({limit, offset}))\r\n\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (start_time >= end_time) {\r\n      setEndAfterStart(false)\r\n      return\r\n    } else {\r\n      setEndAfterStart(true)\r\n    }\r\n\r\n    setEventInfo({ ...event_info, from_date: `${date} ${start_time}`, to_date: `${date} ${end_time}` })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [date, start_time, end_time])\r\n\r\n  return (\r\n    <div>\r\n      <h3>{words_he['new_event']}</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['event_name']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['event_date']}\r\n            </th>\r\n            <th> {words_he['start_time']}</th>\r\n            <th> {words_he['end_time']}</th>\r\n            <th> {words_he['status']}</th>\r\n            <th> {words_he['type']}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input type='text' value={event_info.name} onChange={(e) => setEventInfo({ ...event_info, name: e.target.value })} />\r\n            </td>\r\n            <td>\r\n              <MyDatePicker date={date} setDate={setDate} className={MyDatePicker} />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type='time'\r\n                value={start_time}\r\n                onChange={(e) => {\r\n                  setStartTime(e.target.value)\r\n                }}\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type='time'\r\n                value={end_time}\r\n                onChange={(e) => {\r\n                  setEndTime(e.target.value)\r\n                }}\r\n              />\r\n              {!end_after_start && <span style={{ color: 'red' }}> {words_he['end_after_start']}</span>}\r\n            </td>\r\n            <td>\r\n              <Select\r\n                className={'select'}\r\n                placeholder={words_he[event_info.status]}\r\n                options={statuses}\r\n                id='statuses'\r\n                label={words_he['status']}\r\n                onChange={(e) => {\r\n                  setEventInfo({ ...event_info, status: e.value })\r\n                }}\r\n              />\r\n            </td>\r\n            <td>\r\n              <Select\r\n                className={'select'}\r\n                placeholder={words_he[event_info.type]}\r\n                options={types}\r\n                id='types'\r\n                label={words_he['type']}\r\n                onChange={(e) => {\r\n                  setEventInfo({ ...event_info, type: e.value })\r\n                }}\r\n              />\r\n            </td>\r\n            <td>\r\n              <button type='button' className='btn btn-info' onClick={handle_save}>\r\n                {words_he['save']}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateEvent\r\n\r\nconst statuses = [\r\n  { value: 'pending', label: words_he['pending'] },\r\n  { value: 'approved', label: words_he['approved'] },\r\n  { value: 'canceled', label: words_he['canceled'] },\r\n]\r\nconst types = [\r\n  { value: 'private', label: words_he['private'] },\r\n  { value: 'public', label: words_he['public'] },\r\n  { value: 'inside', label: words_he['inside'] },\r\n  { value: 'photo_shot', label: words_he['photo_shot'] },\r\n]\r\n// budget: null\r\n// check_list: null\r\n// clients: null\r\n// comment: null\r\n// from_date: \"2022-02-21T22:00:00.000Z\"\r\n// id: \"f56649a8-8531-11ec-ae77-005056c00001\"\r\n// name: \"test the event if you want\"\r\n// status: \"pending\"\r\n// suppliers: null\r\n// to_date: \"2022-02-21T22:00:00.000Z\"\r\n// type: \"public\"\r\n// user: \"yi\"\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport Select from 'react-select'\r\n\r\nimport TableBuilder from '../components/general/TableBuilder'\r\nimport PaginationBottom from '../components/general/PaginationBottom'\r\nimport UpdateEvent from '../components/pages/UpdateEvent'\r\nimport * as action_event from '../redux/Event/action'\r\nimport * as action_popUp from '../redux/PopUp/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Events = (props) => {\r\n  const items = useSelector((state) => state.event.events)\r\n  const meta_data = useSelector((state) => state.event.meta_data)\r\n\r\n  const [limit, setLimit] = useState(process.env.REACT_APP_LIMIT)\r\n  const [offset, setOffset] = useState(0)\r\n  const [search, setSearch] = useState(undefined)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(action_event.get_events({ limit, offset, search }))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [limit, offset, search])\r\n\r\n  const previous_page = () => {\r\n    let new_offset = Number(offset) - Number(limit)\r\n    new_offset = new_offset > 0 ? new_offset : 0\r\n    setOffset(new_offset)\r\n  }\r\n\r\n  const next_page = () => {\r\n    let new_offset = Number(offset) + Number(limit)\r\n    setOffset(new_offset)\r\n  }\r\n  const handle_edit = (id, index) => {\r\n    let event\r\n    for (const item of items) {\r\n      if (item['id'] === id) {\r\n        event = item\r\n        break\r\n      }\r\n    }\r\n    const content = <UpdateEvent counter={index} id={event.id} limit={limit} offset={offset} />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n  for (const item of items) {\r\n    switch (item['type']) {\r\n      case 'private':\r\n        item['type'] = words_he['private']\r\n        break\r\n      case 'public':\r\n        item['type'] = words_he['public']\r\n        break\r\n      case 'inside':\r\n        item['type'] = words_he['inside']\r\n        break\r\n      case 'photo_shot':\r\n        item['type'] = words_he['photo_shot']\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    switch (item['status']) {\r\n      case 'pending':\r\n        item['status'] = words_he['pending']\r\n        break\r\n      case 'approved':\r\n        item['status'] = words_he['approved']\r\n        break\r\n      case 'canceled':\r\n        item['status'] = words_he['canceled']\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* search */}\r\n      <span style={{ float: 'left', margin: '10px' }}>\r\n        <DebounceInput minLength={2} debounceTimeout={1000} placeholder={words_he['search']} onChange={(e) => setSearch(e.target.value)} />\r\n      </span>\r\n      {/* Pagination Top */}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['rows_to_display'] + `: ${limit}`}\r\n        options={limits}\r\n        id='limits'\r\n        label='limits'\r\n        onChange={(e) => {\r\n          setOffset(0)\r\n          setLimit(e.value)\r\n        }}\r\n      />\r\n      <TableBuilder\r\n        items={items}\r\n        cols={['name', 'from_date', 'to_date', 'status', 'type']}\r\n        headers={{\r\n          name: words_he['name'],\r\n          from_date: words_he['from_date'],\r\n          to_date: words_he['to_date'],\r\n          status: words_he['status'],\r\n          type: words_he['type'],\r\n        }}\r\n        title={words_he['events']}\r\n        offset={offset}\r\n        handle_edit={handle_edit}\r\n      />\r\n\r\n      <PaginationBottom limit={limit} offset={offset} meta_data={meta_data} next_page={next_page} previous_page={previous_page} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Events\r\n\r\nconst limits = [\r\n  { value: '5', label: 5 },\r\n  { value: '10', label: 10 },\r\n  { value: '25', label: 25 },\r\n  { value: '50', label: 50 },\r\n]\r\n\r\n// budget: null​\r\n// check_list: null​\r\n// clients: null​\r\n// comment: null​\r\n// created_at: \"2022-01-29T09:39:08.000Z\"​\r\n// from_date: \"2022-01-29 10:00:00\"​\r\n// id: 12​\r\n// name: \"sadasd\"​\r\n// status: \"pending\"​\r\n// suppliers: null​\r\n// template_data_id: null​\r\n// to_date: \"2022-01-29 11:00:00\"​\r\n// type: \"public\"​\r\n// updated_at: \"2022-01-29T09:39:08.000Z\"​\r\n// user_id: 1​\r\n// uuid: \"4e5cd2bd-80e7-11ec-ae77-005056c00001\"\r\n","import { GET_CLIENTS } from './constants'\r\nimport axios from 'axios'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_clients = (limit, offset, search) => (dispatch) => {\r\n  const query = { limit, offset, search }\r\n  axios\r\n  .get(process.env.REACT_APP_REST_IMJ_URL + '/client', { params: query })\r\n  .then((res) => {\r\n      dispatch({ type: GET_CLIENTS, payload: res.data })\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n    })\r\n}\r\nexport const delete_client = (client_id) => (dispatch) => {\r\n  axios\r\n    .delete(process.env.REACT_APP_REST_IMJ_URL + `/client/${client_id}`)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'client status changed successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\nexport const create_client = (data) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_REST_IMJ_URL + `/client`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'create client successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const update_client = (data, client_id) => (dispatch) => {\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/client/${client_id}`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update client successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../../css/clients.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_client from '../../redux/Client/action'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst UpdateClient = (props) => {\r\n  const { name, type, email, phone } = props.client\r\n  const [client_info, setClientInfo] = useState({ name, type, phone, email })\r\n  const dispatch = useDispatch()\r\n\r\n  const convert_type = (type) => {\r\n    switch (type) {\r\n      case words_he['private']:\r\n        return 'private'\r\n      case words_he['company']:\r\n        return 'company'\r\n      case words_he['department']:\r\n        return 'department'\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const get_data = (client_info) => {\r\n    let data = {}\r\n    for (let key in client_info) {\r\n      if (client_info[key] != null) {\r\n        data[key] = client_info[key]\r\n      }\r\n    }\r\n    return { ...data, type: convert_type(data.type) }\r\n  }\r\n\r\n  const handle_save = () => {\r\n    const data = get_data(client_info)\r\n    dispatch(action_client.update_client(data, props.client.uuid))\r\n    dispatch(action_client.get_clients())\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['name']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['type']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['phone']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['email']}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type='text' onChange={(e) => setClientInfo({ ...client_info, name: e.target.value })} defaultValue={client_info.name} />\r\n          </td>\r\n          <td>\r\n            <ul>\r\n              <li>\r\n                <input\r\n                  type='radio'\r\n                  value={words_he['private']}\r\n                  name={'type'}\r\n                  checked={client_info.type === words_he['private']}\r\n                  onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                />{' '}\r\n                {words_he['private']}\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type='radio'\r\n                  value={words_he['company']}\r\n                  name={'type'}\r\n                  checked={client_info.type === words_he['company']}\r\n                  onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                />{' '}\r\n                {words_he['company']}\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type='radio'\r\n                  value={words_he['department']}\r\n                  name={'type'}\r\n                  checked={client_info.type === words_he['department']}\r\n                  onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                />{' '}\r\n                {words_he['department']}\r\n              </li>\r\n            </ul>\r\n          </td>\r\n          <td>\r\n            <input type='tel' onChange={(e) => setClientInfo({ ...client_info, phone: e.target.value })} defaultValue={client_info.phone} />\r\n          </td>\r\n          <td>\r\n            <input type='email' onChange={(e) => setClientInfo({ ...client_info, email: e.target.value })} defaultValue={client_info.email} />\r\n          </td>\r\n          <td>\r\n            <button type='button' className='btn btn-info' onClick={handle_save}>\r\n              {words_he['save']}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default UpdateClient\r\n","import React, { useState } from 'react'\r\nimport '../../css/clients.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_client from '../../redux/Client/action'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst CreateClient = () => {\r\n  const [client_info, setClientInfo] = useState({ name: '', type: words_he['private'], phone: '', email: '' })\r\n  const dispatch = useDispatch()\r\n\r\n  const convert_type = (type) => {\r\n    switch (type) {\r\n      case words_he['private']:\r\n        return 'private'\r\n      case words_he['company']:\r\n        return 'company'\r\n      case words_he['department']:\r\n        return 'department'\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const get_data = (client_info) => {\r\n    let data = {}\r\n    for (let key in client_info) {\r\n      if (client_info[key] != null) {\r\n        data[key] = client_info[key]\r\n      }\r\n    }\r\n    return { ...data, type: convert_type(data.type) }\r\n  }\r\n\r\n  const handle_save = () => {\r\n    const data = get_data(client_info)\r\n    dispatch(action_client.create_client(data))\r\n    dispatch(action_client.get_clients())\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{words_he['new_client']}</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['name']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['type']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['phone']}\r\n            </th>\r\n            <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n              {words_he['email']}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input type='text' onChange={(e) => setClientInfo({ ...client_info, name: e.target.value })} defaultValue={client_info.name} />\r\n            </td>\r\n            <td>\r\n              <ul>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    value={words_he['private']}\r\n                    name={'type'}\r\n                    checked={client_info.type === words_he['private']}\r\n                    onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                  />{' '}\r\n                  {words_he['private']}\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    value={words_he['company']}\r\n                    name={'type'}\r\n                    checked={client_info.type === words_he['company']}\r\n                    onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                  />{' '}\r\n                  {words_he['company']}\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type='radio'\r\n                    value={words_he['department']}\r\n                    name={'type'}\r\n                    checked={client_info.type === words_he['department']}\r\n                    onChange={(e) => setClientInfo({ ...client_info, type: e.target.value })}\r\n                  />{' '}\r\n                  {words_he['department']}\r\n                </li>\r\n              </ul>\r\n            </td>\r\n            <td>\r\n              <input type='tel' onChange={(e) => setClientInfo({ ...client_info, phone: e.target.value })} defaultValue={client_info.phone} />\r\n            </td>\r\n            <td>\r\n              <input type='email' onChange={(e) => setClientInfo({ ...client_info, email: e.target.value })} defaultValue={client_info.email} />\r\n            </td>\r\n            <td>\r\n              <button type='button' className='btn btn-info' onClick={handle_save}>\r\n                {words_he['save']}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateClient\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport Select from 'react-select'\r\n\r\nimport TableBuilder from '../components/general/TableBuilder'\r\nimport PaginationBottom from '../components/general/PaginationBottom'\r\nimport UpdateClient from '../components/pages/UpdateClient'\r\nimport CreateClient from '../components/pages/CreateClient'\r\n\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport * as action_client from '../redux/Client/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Clients = () => {\r\n  const items = useSelector((state) => state.client.clients)\r\n  const meta_data = useSelector((state) => state.client.meta_data)\r\n  const [limit, setLimit] = useState(process.env.REACT_APP_LIMIT)\r\n  const [offset, setOffset] = useState(0)\r\n  const [search, setSearch] = useState(undefined)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(action_client.get_clients(limit, offset, search))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [limit, offset, search])\r\n\r\n  const previous_page = () => {\r\n    let new_offset = Number(offset) - Number(limit)\r\n    new_offset = new_offset > 0 ? new_offset : 0\r\n    setOffset(new_offset)\r\n  }\r\n\r\n  const next_page = () => {\r\n    let new_offset = Number(offset) + Number(limit)\r\n    setOffset(new_offset)\r\n  }\r\n  const handle_edit = (id, index) => {\r\n    let client\r\n    for (const item of items) {\r\n      if (item['id'] === id) {\r\n        client = item\r\n        break\r\n      }\r\n    }\r\n    const content = <UpdateClient client={client} counter={index} key={client.id} limit={limit} offset={offset} />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n  const handle_create = () => {\r\n    const new_client = <CreateClient />\r\n    dispatch(action_popUp.setPopUp(new_client))\r\n  }\r\n\r\n  for (const item of items) {\r\n    switch (item['type']) {\r\n      case 'private':\r\n        item['type'] = words_he['private']\r\n        break\r\n      case 'company':\r\n        item['type'] = words_he['company']\r\n        break\r\n      case 'department':\r\n        item['type'] = words_he['department']\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* search */}\r\n      <span style={{ float: 'left', margin: '10px' }}>\r\n        <DebounceInput minLength={2} debounceTimeout={1000} placeholder={words_he['search']} onChange={(e) => setSearch(e.target.value)} />\r\n      </span>\r\n      {/* Pagination Top */}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['rows_to_display'] + `: ${limit}`}\r\n        options={limits}\r\n        id='limits'\r\n        label='limits'\r\n        onChange={(e) => {\r\n          setOffset(0)\r\n          setLimit(e.value)\r\n        }}\r\n      />\r\n      <TableBuilder\r\n        items={items}\r\n        cols={['name', 'type', 'phone', 'email']}\r\n        headers={{\r\n          name: words_he['name'],\r\n          type: words_he['type'],\r\n          phone: words_he['phone'],\r\n          email: words_he['email'],\r\n        }}\r\n        title={words_he['clients']}\r\n        offset={offset}\r\n        handle_edit={handle_edit}\r\n      />\r\n      <PaginationBottom limit={limit} offset={offset} meta_data={meta_data} next_page={next_page} previous_page={previous_page} />\r\n      <button type='button' className='btn btn-info' onClick={handle_create}>\r\n        {words_he['add_client']}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Clients\r\n\r\nconst limits = [\r\n  { value: '5', label: 5 },\r\n  { value: '10', label: 10 },\r\n  { value: '25', label: 25 },\r\n  { value: '50', label: 50 },\r\n]\r\n","import React from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst TestWebsocket = (props) => {\r\n  // const dispatch = useDispatch()\r\n\r\n  const test = async () => {\r\n  }\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <button className='w-45 btn m-2 btn-primary' onClick={test}>\r\n        test\r\n      </button>\r\n    </div>\r\n  )\r\n  // return <div style={{ textAlign: 'center' }}>{user ? user.first_name : `didn't load user`}</div>\r\n}\r\n\r\nexport default TestWebsocket\r\n","import { GET_SUPPLIERS } from './constants'\r\nimport axios from 'axios'\r\nimport * as actionSnackBar from '../SnackBar/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nexport const get_suppliers = (limit, offset, search) => (dispatch) => {\r\n  const query = { limit, offset, search }\r\n  axios\r\n    .get(process.env.REACT_APP_REST_IMJ_URL + '/Supplier', { params: query })\r\n    .then((res) => {\r\n\r\n      for (let i = 0; i < res.data.suppliers.length; i++) {\r\n        if (res.data.suppliers[i].account) {\r\n          let json = JSON.parse(res.data.suppliers[i].account)\r\n          res.data.suppliers[i] = { ...res.data.suppliers[i], account: json }\r\n        }\r\n      }\r\n      \r\n      dispatch({ type: GET_SUPPLIERS, payload: res.data })\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      dispatch(actionSnackBar.setSnackBar('error', `${words_he['server_error']} ${words_he['failed_load_data']}`, 3000))\r\n    })\r\n}\r\nexport const delete_supplier = (Supplier_id) => (dispatch) => {\r\n  axios\r\n    .delete(process.env.REACT_APP_REST_IMJ_URL + `/Supplier/${Supplier_id}`)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'Supplier status changed successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\nexport const create_supplier = (data) => (dispatch) => {\r\n  axios\r\n    .post(process.env.REACT_APP_REST_IMJ_URL + `/Supplier`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'create Supplier successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n\r\nexport const update_supplier = (data, Supplier_id) => (dispatch) => {\r\n  axios\r\n    .put(process.env.REACT_APP_REST_IMJ_URL + `/Supplier/${Supplier_id}`, data)\r\n    .then((res) => {\r\n      dispatch(actionSnackBar.setSnackBar('success', 'update Supplier successfully', 2000))\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actionSnackBar.setSnackBar('error', error.response.statusText, 3000))\r\n    })\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../../css/suppliers.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_supplier from '../../redux/Supplier/action'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst UpdateSupplier = (props) => {\r\n  console.log(props.supplier)\r\n  const { name, email, phone, account } = props.supplier\r\n  const [supplier_info, setSupplierInfo] = useState({ name, account, phone, email })\r\n  const dispatch = useDispatch()\r\n\r\n  const handle_save = () => {\r\n    // if (account_name == '' || iban === '' || swift == '')\r\n    // Do we need validation that all the account fields was filled or its okay to fill partly\r\n\r\n    dispatch(action_supplier.update_supplier(supplier_info, props.supplier.uuid))\r\n    dispatch(action_supplier.get_suppliers())\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  let account_name \r\n  let iban \r\n  let swift \r\n  if (!supplier_info.account) {\r\n    account_name = ''\r\n    iban =  ''\r\n    swift = '' \r\n  } else {\r\n    account_name = supplier_info.account.account_name\r\n    iban = supplier_info.account.iban\r\n    swift = supplier_info.account.swift\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['name']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['phone']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['email']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['account_name']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {'IBAN'}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {'SWIFT'}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, name: e.target.value })} defaultValue={supplier_info.name} />\r\n          </td>\r\n          <td>\r\n            <input type='tel' onChange={(e) => setSupplierInfo({ ...supplier_info, phone: e.target.value })} defaultValue={supplier_info.phone} />\r\n          </td>\r\n          <td>\r\n            <input type='email' onChange={(e) => setSupplierInfo({ ...supplier_info, email: e.target.value })} defaultValue={supplier_info.email} />\r\n          </td>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account:{ ...supplier_info.account, account_name: e.target.value}})} defaultValue={account_name} />\r\n          </td>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account:{ ...supplier_info.account, iban: e.target.value}})} defaultValue={iban} />\r\n          </td>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account:{ ...supplier_info.account, swift: e.target.value}})} defaultValue={swift} />\r\n          </td>\r\n          <td>\r\n            <button type='button' className='btn btn-info' onClick={handle_save}>\r\n              {words_he['save']}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default UpdateSupplier\r\n","import React, { useState } from 'react'\r\nimport '../../css/suppliers.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action_supplier from '../../redux/Supplier/action'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst CreateSupplier = () => {\r\n  const [supplier_info, setSupplierInfo] = useState({ name: '', account: {account_name: '', iban: '', swift: ''}, phone: '', email: '' })\r\n  const dispatch = useDispatch()\r\n\r\n  const handle_save = () => {\r\n    dispatch(action_supplier.create_supplier(supplier_info))\r\n    dispatch(action_supplier.get_suppliers())\r\n    setTimeout(() => {\r\n      dispatch(action_popUp.disablePopUp())\r\n    }, 1000)\r\n  }\r\n\r\n  let account_name \r\n  let iban \r\n  let swift \r\n  if (!supplier_info.account) {\r\n    account_name = ''\r\n    iban =  ''\r\n    swift = '' \r\n  } else {\r\n    account_name = supplier_info.account.account_name\r\n    iban = supplier_info.account.iban\r\n    swift = supplier_info.account.swift\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{words_he['new_supplier']}</h3>\r\n      <table>\r\n      <thead>\r\n        <tr>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['name']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['phone']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['email']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {words_he['account_name']}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {'IBAN'}\r\n          </th>\r\n          <th scope='col' className='border-0 text-uppercase font-medium pl-4'>\r\n            {'SWIFT'}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, name: e.target.value })} defaultValue={supplier_info.name} />\r\n          </td>\r\n          <td>\r\n            <input type='tel' onChange={(e) => setSupplierInfo({ ...supplier_info, phone: e.target.value })} defaultValue={supplier_info.phone} />\r\n          </td>\r\n          <td>\r\n            <input type='email' onChange={(e) => setSupplierInfo({ ...supplier_info, email: e.target.value })} defaultValue={supplier_info.email} />\r\n          </td>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account:{ ...supplier_info.account, account_name: e.target.value}})} defaultValue={account_name} />\r\n          </td>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account:{ ...supplier_info.account, iban: e.target.value}})} defaultValue={iban} />\r\n          </td>\r\n          <td>\r\n            <input type='text' onChange={(e) => setSupplierInfo({ ...supplier_info, account:{ ...supplier_info.account, swift: e.target.value}})} defaultValue={swift} />\r\n          </td>\r\n          <td>\r\n            <button type='button' className='btn btn-info' onClick={handle_save}>\r\n              {words_he['save']}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateSupplier\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport Select from 'react-select'\r\n\r\nimport TableBuilder from '../components/general/TableBuilder'\r\nimport PaginationBottom from '../components/general/PaginationBottom'\r\nimport UpdateSupplier from '../components/pages/UpdateSupplier'\r\nimport CreateSupplier from '../components/pages/CreateSupplier'\r\n\r\nimport * as action_popUp from '../redux/PopUp/action'\r\nimport * as action_supplier from '../redux/Supplier/action'\r\n\r\nconst words_he = require('../utils/words_he').words_he\r\n\r\nconst Suppliers = () => {\r\n  const items = useSelector((state) => state.supplier.suppliers)\r\n  const meta_data = useSelector((state) => state.supplier.meta_data)\r\n  const [limit, setLimit] = useState(process.env.REACT_APP_LIMIT)\r\n  const [offset, setOffset] = useState(0)\r\n  const [search, setSearch] = useState(undefined)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(action_supplier.get_suppliers(limit, offset, search))\r\n  }, [limit, offset, search])\r\n\r\n  const previous_page = () => {\r\n    let new_offset = Number(offset) - Number(limit)\r\n    new_offset = new_offset > 0 ? new_offset : 0\r\n    setOffset(new_offset)\r\n  }\r\n\r\n  const next_page = () => {\r\n    let new_offset = Number(offset) + Number(limit)\r\n    setOffset(new_offset)\r\n  }\r\n  const handle_edit = (id, index) => {\r\n    let supplier\r\n    for (const item of items) {\r\n      if (item['id'] === id) {\r\n        supplier = item\r\n        break\r\n      }\r\n    }\r\n    const content = <UpdateSupplier supplier={supplier} counter={index} key={supplier.id} limit={limit} offset={offset} />\r\n    dispatch(action_popUp.setPopUp(content))\r\n  }\r\n\r\n  const handle_create = () => {\r\n    const new_supplier = <CreateSupplier />\r\n    dispatch(action_popUp.setPopUp(new_supplier))\r\n  }\r\n\r\n  for (let i = 0; i < items.length; i++) {\r\n    let account_details_str = ''\r\n    for (let key in items[i].account){\r\n      let key_to_display\r\n      if (key === 'iban' || key === 'swift'){\r\n        key_to_display = key.toUpperCase()\r\n      }\r\n      else{\r\n        key_to_display = key\r\n      }\r\n      account_details_str += key_to_display + \": \" + items[i].account[key] + \" |  \\n\"\r\n    }\r\n    items[i] = {...items[i], account_details: account_details_str}\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* search */}\r\n      <span style={{ float: 'left', margin: '10px' }}>\r\n        <DebounceInput minLength={2} debounceTimeout={1000} placeholder={words_he['search']} onChange={(e) => setSearch(e.target.value)} />\r\n      </span>\r\n      {/* Pagination Top */}\r\n      <Select\r\n        className={'select'}\r\n        placeholder={words_he['rows_to_display'] + `: ${limit}`}\r\n        options={limits}\r\n        id='limits'\r\n        label='limits'\r\n        onChange={(e) => {\r\n          setOffset(0)\r\n          setLimit(e.value)\r\n        }}\r\n      />\r\n      <TableBuilder\r\n        items={items}\r\n        cols={['name', 'phone', 'email', 'account_details']}\r\n        headers={{\r\n          name: words_he['name'],\r\n          phone: words_he['phone'],\r\n          email: words_he['email'],\r\n          account_details: words_he['account_details'],\r\n        }}\r\n        title={words_he['suppliers']}\r\n        offset={offset}\r\n        handle_edit={handle_edit}\r\n      />\r\n      <PaginationBottom limit={limit} offset={offset} meta_data={meta_data} next_page={next_page} previous_page={previous_page} />\r\n      <button  type='button' className='btn btn-info' onClick={handle_create}>{words_he['add_supplier']}</button>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Suppliers\r\n\r\nconst limits = [\r\n  { value: '5', label: 5 },\r\n  { value: '10', label: 10 },\r\n  { value: '25', label: 25 },\r\n  { value: '50', label: 50 },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport * as authActions from '../../redux/Auth/action'\r\nconst words_he = require('../../utils/words_he').words_he\r\n\r\nconst Nav = (props) => {\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated)\r\n  const permissions = useSelector((state) => state.auth.permissions)\r\n  const dispatch = useDispatch()\r\n  const logout = async () => {\r\n    dispatch(authActions.logout())\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('TokenAccess')\r\n    if (token) {\r\n      dispatch(authActions.check_if_token_exist(token))\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  let menu\r\n  if (!isAuthenticated) {\r\n    menu = (\r\n      <ul className='navbar-nav me-auto mb-2 mb-md-0'>\r\n        <li className='nav-item active'>\r\n          <Link to='Login' className='nav-link'>\r\n            {words_he['login']}\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    )\r\n  } else {\r\n    if (permissions === 1) {\r\n      menu = (\r\n        <ul className='navbar-nav me-auto mb-2 mb-md-0'>\r\n          <li className='nav-item active'>\r\n            <Link to='/Tests' className='nav-link'>\r\n              Tests\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Reports' className='nav-link'>\r\n              {words_he['reports']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Suppliers' className='nav-link'>\r\n              {words_he['suppliers']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Events' className='nav-link'>\r\n              {words_he['events']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Clients' className='nav-link'>\r\n              {words_he['clients']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/ProfileSettings' className='nav-link'>\r\n              {words_he['profile_settings']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Bids' className='nav-link'>\r\n              {words_he['bids']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/CreateBid' className='nav-link'>\r\n              {words_he['new_bid']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Register' className='nav-link'>\r\n              {words_he['create_new_user']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Users' className='nav-link'>\r\n              {words_he['users']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/Login' className='nav-link' onClick={logout}>\r\n              {words_he['logout']}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      )\r\n    } else if (permissions === 2) {\r\n      menu = (\r\n        <ul className='navbar-nav me-auto mb-2 mb-md-0'>\r\n          <li className='nav-item active'>\r\n            <Link to='/ProfileSettings' className='nav-link'>\r\n              {words_he['profile_settings']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/CreateBid' className='nav-link'>\r\n              {words_he['new_bid']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/login' className='nav-link' onClick={logout}>\r\n              {words_he['logout']}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      )\r\n    } else if (permissions === 3) {\r\n      menu = (\r\n        <ul className='navbar-nav me-auto mb-2 mb-md-0'>\r\n          <li className='nav-item active'>\r\n            <Link to='/ProfileSettings' className='nav-link'>\r\n              {words_he['profile_settings']}\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item active'>\r\n            <Link to='/login' className='nav-link' onClick={logout}>\r\n              {words_he['logout']}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className='navbar navbar-expand-md navbar-dark bg-dark mb-4'>\r\n      <div className='container-fluid'>\r\n        <Link to='Home' className='navbar-brand'>\r\n          {words_he['home']}\r\n        </Link>\r\n\r\n        <div>{menu}</div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\n// Material-UI\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Collapse, IconButton, Typography } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as actionSnackBar from '../../redux/SnackBar/action'\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const snackBarOBJ = useSelector((state) => state.snackBar)\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    dispatch(actionSnackBar.disableSnackBar())\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Collapse in={snackBarOBJ.visible} timeout={1000}>\r\n        <Alert\r\n          elevation={4}\r\n          variant='filled'\r\n          severity={snackBarOBJ.type}\r\n          action={\r\n            <IconButton style={{ height: '20px', width: '20px' }} elevation={4} variant='filled' severity={snackBarOBJ.type} onClick={handleClose}>\r\n              <CloseIcon style={{ color: 'white' }} />\r\n            </IconButton>\r\n          }\r\n        >\r\n          <Typography data-cy='snackbar-msg' style={{ padding: '8px' }}>\r\n            {snackBarOBJ.message}\r\n          </Typography>\r\n        </Alert>\r\n      </Collapse>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: '69px',\r\n    right: '30px',\r\n    width: 'auto',\r\n    zIndex: 1400,\r\n    opacity: 0.8,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      position: 'absolute',\r\n      zIndex: 1400,\r\n      width: '90%',\r\n      right: '5%',\r\n    },\r\n  },\r\n}))\r\n","import React from 'react';\r\nimport { Route,Redirect } from 'react-router-dom';\r\n \r\n// Redux\r\nimport { useSelector } from 'react-redux';\r\n \r\nconst PrivateRoute = ({ component : Component , ...res}) => {\r\n \r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  \r\n  return(\r\n  <Route {...res} render={ props => !isAuthenticated ? \r\n    <Redirect to='/Login' />:<Component {...props} />} />\r\n  )\r\n}\r\n \r\nexport default PrivateRoute","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as action_popUp from '../../redux/PopUp/action'\r\n\r\nconst Popup = (props) => {\r\n  const pop_up_visible = useSelector((state) => state.popUp.visible)\r\n  const pop_up_content = useSelector((state) => state.popUp.content)\r\n  const dispatch = useDispatch()\r\n  const handle_close = () => {\r\n    dispatch(action_popUp.disablePopUp())\r\n  }\r\n\r\n  if (pop_up_visible) {\r\n    return (\r\n      <div className='popup-box'>\r\n        <div className='box'>\r\n          <span className='close-icon' onClick={handle_close}>\r\n            x\r\n          </span>\r\n          <span style={{ lineHeight: '2', display: 'inline-block', verticalAlign: 'middle' }}>{pop_up_content}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return <span></span>\r\n  }\r\n}\r\n\r\nexport default Popup\r\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport './css/App.css'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport React, { useState } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/index'\r\n\r\n//pages\r\nimport Home from './pages/Home'\r\nimport Login from './pages/Login'\r\nimport Users from './pages/Users'\r\nimport CreateBid from './pages/CreateBid'\r\nimport Bids from './pages/Bids'\r\nimport Register from './pages/Register'\r\nimport ResetPassword from './pages/ResetPassword'\r\nimport ForgotPassword from './pages/ForgotPassword'\r\nimport ProfileSettings from './pages/ProfileSettings'\r\nimport Reports from './pages/Reports'\r\nimport Events from './pages/Events'\r\n// import Locations from './pages/Locations'\r\nimport Clients from './pages/Clients.js'\r\nimport Tests from './pages/Tests'\r\nimport Suppliers from './pages/Suppliers'\r\n\r\n//components\r\nimport NavBar from './components/general/NavBar'\r\nimport SnackBar from './components/general/SnackBar'\r\nimport PrivateRoute from './components/general/PrivateRoutes'\r\nimport PopUp from './components/general/PopUp'\r\n\r\nfunction App() {\r\n  const [name, setName] = useState('')\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='App'>\r\n        <Router>\r\n          <NavBar name={name} setName={setName} />\r\n          <SnackBar />\r\n          <PopUp />\r\n          <main>\r\n            <Switch>\r\n              <Route path='/Login' component={() => <Login />} />\r\n              <Route path='/ForgotPassword' component={() => <ForgotPassword />} />\r\n              <Route path='/ResetPassword/:token' component={() => <ResetPassword />} />\r\n              <PrivateRoute path='/Home' exact component={() => <Home name={name} />} />\r\n              <PrivateRoute path='/Register' component={Register} />\r\n              <PrivateRoute path='/Users' component={Users} />\r\n              <PrivateRoute path='/Bids' component={Bids} />\r\n              <PrivateRoute path='/Events' component={Events} />\r\n              <PrivateRoute path='/Reports' component={Reports} />\r\n              <PrivateRoute path='/CreateBid' component={CreateBid} />\r\n              <PrivateRoute path='/ProfileSettings' component={ProfileSettings} />\r\n              <PrivateRoute path='/Clients' component={Clients} />\r\n              <PrivateRoute path='/Suppliers' component={Suppliers} />\r\n              <PrivateRoute path='/Tests' component={Tests} />\r\n              <PrivateRoute path='/*' component={Login} />\r\n            </Switch>\r\n          </main>\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './css/index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}